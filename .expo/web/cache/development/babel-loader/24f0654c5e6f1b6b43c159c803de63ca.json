{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/components/inputs/DateTimePikerInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { useColorScheme } from 'react-native-appearance';\nimport translator from \"../../translator/translator\";\nimport moment from \"moment\";\nimport { Spacer } from \"../shared\";\nimport styles from \"../../styles/components/inputs/date-time-picker-input\";\nimport { app_styles } from \"../../styles/app_styles\";\n\nvar DateTimePikerInput = function DateTimePikerInput(_ref) {\n  var placeholder = _ref.placeholder,\n      error = _ref.error,\n      clearError = _ref.clearError,\n      callback = _ref.callback,\n      name = _ref.name;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language;\n\n  var _useState = useState({\n    showDatePiker: false,\n    showTimePiker: false,\n    date: null,\n    time: null,\n    notFormatedDate: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      defaultDate = _useState4[0],\n      setDefaultDate = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  useEffect(function () {\n    if (!defaultDate) {\n      var now = new Date();\n\n      var _defaultDate = new Date(now);\n\n      _defaultDate.setMinutes(now.getMinutes() + 50);\n\n      setDefaultDate(_defaultDate);\n    }\n\n    if (state.date && state.time) {\n      var inputValue = state.date + \" \" + state.time;\n      setValue(inputValue);\n      moment.locale(\"uk\");\n      var unixTime = moment(inputValue, \"DD.MM.YYYY HH:mm\").valueOf() / 1000;\n      callback(name, unixTime);\n\n      if (error) {\n        clearError(name);\n      }\n    }\n  }, [state]);\n\n  var handleSelectIos = function handleSelectIos(event, value) {\n    if (event.type === 'dismissed') {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        showDatePiker: false,\n        showTimePiker: false\n      }));\n      return;\n    }\n\n    ;\n    var formatedDate = formatDatePickerValue(value);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      date: formatedDate.date,\n      time: formatedDate.time,\n      showDatePiker: true,\n      notFormatedDate: value\n    }));\n  };\n\n  var handleSelectDate = function handleSelectDate(event, value) {\n    if (event.type === 'dismissed') {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        showDatePiker: false,\n        showTimePiker: false\n      }));\n      return;\n    }\n\n    ;\n    var formatedDate = formatDatePickerValue(value);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      date: formatedDate.date,\n      showDatePiker: false,\n      showTimePiker: true\n    }));\n  };\n\n  var handleSelectTime = function handleSelectTime(event, value) {\n    if (event.type === 'dismissed') {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        showDatePiker: false,\n        showTimePiker: false\n      }));\n      return;\n    }\n\n    ;\n    var formatedDate = formatDatePickerValue(value);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      time: formatedDate.time,\n      showTimePiker: false\n    }));\n  };\n\n  var formatDatePickerValue = function formatDatePickerValue(date) {\n    moment.locale(\"uk\");\n    var formatedDate = moment(date).format(\"DD.MM.YYYY\");\n    var formatedTime = moment(date).format(\"HH:mm\");\n    return {\n      date: formatedDate,\n      time: formatedTime\n    };\n  };\n\n  var colorSchemes = {\n    light: {\n      background: app_styles(scales).colors.app.white,\n      text: app_styles(scales).colors.text.primary,\n      free_space_background: \"rgba(0, 0, 0, 0.35)\"\n    },\n    dark: {\n      background: app_styles(scales).colors.text.primary,\n      text: app_styles(scales).colors.app.white,\n      free_space_background: \"rgba(255, 255, 255, 0.55)\"\n    }\n  };\n  var colorScheme = useColorScheme();\n  var colors = colorSchemes[colorScheme] || colorSchemes.light;\n  return React.createElement(View, {\n    style: styles(scales).main_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles(scales).input_container,\n    onPress: function onPress() {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        showDatePiker: true\n      }));\n    },\n    activeOpacity: .7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    pointerEvents: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles(scales).input,\n    placeholderTextColor: app_styles(scales).colors.text.light_grey,\n    placeholderStyle: styles(scales).placeholder_style,\n    placeholder: placeholder,\n    editable: false,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }))), error ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, React.createElement(Spacer, {\n    spaceHeight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).error_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, error))) : null, Platform.OS === 'android' ? React.createElement(React.Fragment, null, state.showDatePiker ? React.createElement(DateTimePicker, {\n    value: defaultDate,\n    mode: \"date\",\n    minimumDate: defaultDate,\n    is24Hour: true,\n    display: \"default\",\n    onChange: handleSelectDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 39\n    }\n  }) : null, state.showTimePiker ? React.createElement(DateTimePicker, {\n    value: defaultDate,\n    mode: \"time\",\n    minimumDate: defaultDate,\n    is24Hour: true,\n    display: \"default\",\n    onChange: handleSelectTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 39\n    }\n  }) : null) : state.showDatePiker ? React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: state.showDatePiker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: styles(scales).modal_content_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 37\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles(scales).top_container, {\n      backgroundColor: colors.free_space_background\n    }],\n    onPress: function onPress() {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        showDatePiker: false\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 41\n    }\n  }), React.createElement(View, {\n    style: [styles(scales).picker_container, {\n      backgroundColor: colors.background\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: [styles(scales).header, {\n      borderBottomColor: colors.text\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 45\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        showDatePiker: false\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: [styles(scales).close_piker, {\n      color: colors.text\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 53\n    }\n  }, translator.translate(language, \"Готово\")))), React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 45\n    }\n  }), React.createElement(View, {\n    style: {\n      flexGrow: 1,\n      backgroundColor: colors.background\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 45\n    }\n  }, React.createElement(DateTimePicker, {\n    value: state.notFormatedDate || defaultDate,\n    mode: \"datetime\",\n    minimumDate: defaultDate,\n    minuteInterval: 5,\n    is24Hour: true,\n    display: \"default\",\n    onChange: handleSelectIos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 49\n    }\n  }))))) : null);\n};\n\nexport default DateTimePikerInput;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/inputs/DateTimePikerInput.js"],"names":["React","useContext","useState","useEffect","Context","AppSettingsContext","DateTimePicker","useColorScheme","translator","moment","Spacer","styles","app_styles","DateTimePikerInput","placeholder","error","clearError","callback","name","state","scales","language","showDatePiker","showTimePiker","date","time","notFormatedDate","setState","defaultDate","setDefaultDate","value","setValue","now","Date","setMinutes","getMinutes","inputValue","locale","unixTime","valueOf","handleSelectIos","event","type","formatedDate","formatDatePickerValue","handleSelectDate","handleSelectTime","format","formatedTime","colorSchemes","light","background","colors","app","white","text","primary","free_space_background","dark","colorScheme","main_container","input_container","input","light_grey","placeholder_style","error_text","Platform","OS","modal_content_container","top_container","backgroundColor","picker_container","header","borderBottomColor","close_piker","color","translate","flexGrow"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext, useState, useEffect } from 'react';\n//React native\nimport { Text, View, TextInput, TouchableOpacity, Platform, Modal } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//Date Time Piker\nimport DateTimePicker from '@react-native-community/datetimepicker';\n//Expo\nimport { useColorScheme } from 'react-native-appearance';\n//Localization\nimport translator from \"../../translator/translator\";\n//Moment\nimport moment from \"moment\";\n//Components\nimport { Spacer } from '../shared';\n//Styles\nimport styles from \"../../styles/components/inputs/date-time-picker-input\";\nimport { app_styles } from '../../styles/app_styles';\n\n\n\n\n//----COMPONENT----//\nconst DateTimePikerInput = ({ placeholder, error, clearError, callback, name }) => {\n    //Data and State\n    const { state: { scales, language } } = useContext(AppSettingsContext);\n    const [state, setState] = useState({\n        showDatePiker: false,\n        showTimePiker: false,\n        date: null,\n        time: null,\n        notFormatedDate: null\n    });\n    const [defaultDate, setDefaultDate] = useState(null);\n    const [value, setValue] = useState(null);\n\n\n\n    //Hooks and Methods\n    useEffect(() => {\n        if(!defaultDate){\n            let now = new Date();\n            let defaultDate = new Date(now);\n                defaultDate.setMinutes(now.getMinutes() + 50);\n            setDefaultDate(defaultDate)    \n        }\n        if (state.date && state.time) {\n            let inputValue = state.date + \" \" + state.time;\n            setValue(inputValue);\n            moment.locale(\"uk\");           \n            let unixTime = (moment(inputValue, \"DD.MM.YYYY HH:mm\").valueOf() / 1000);\n            callback(name, unixTime)\n            if (error) {\n                clearError(name)\n            }\n        }        \n    }, [state]);\n\n\n\n    const handleSelectIos = (event, value) => {\n        if (event.type === 'dismissed') {\n            setState({ ...state, showDatePiker: false, showTimePiker: false });\n            return;\n        };\n        let formatedDate = formatDatePickerValue(value);\n        setState({ ...state, date: formatedDate.date, time: formatedDate.time, showDatePiker: true, notFormatedDate: value });\n    }\n\n\n    const handleSelectDate = (event, value) => {\n        if (event.type === 'dismissed') {\n            setState({ ...state, showDatePiker: false, showTimePiker: false });\n            return;\n        };\n        let formatedDate = formatDatePickerValue(value);\n        setState({ ...state, date: formatedDate.date, showDatePiker: false, showTimePiker: true });\n    }\n\n\n    const handleSelectTime = (event, value) => {\n        if (event.type === 'dismissed') {\n            setState({ ...state, showDatePiker: false, showTimePiker: false });\n            return;\n        };        \n        let formatedDate = formatDatePickerValue(value);\n        setState({ ...state, time: formatedDate.time, showTimePiker: false });\n    }\n\n\n    const formatDatePickerValue = (date) => {\n        moment.locale(\"uk\");\n        let formatedDate = moment(date).format(\"DD.MM.YYYY\");\n        let formatedTime = moment(date).format(\"HH:mm\")\n        return { date: formatedDate, time: formatedTime }\n    }\n\n\n    const colorSchemes = {\n        light: {\n            background: app_styles(scales).colors.app.white,\n            text: app_styles(scales).colors.text.primary,\n            free_space_background: \"rgba(0, 0, 0, 0.35)\"\n        },\n        dark: {\n            background: app_styles(scales).colors.text.primary,\n            text: app_styles(scales).colors.app.white,\n            free_space_background: \"rgba(255, 255, 255, 0.55)\"\n        },\n    };\n    const colorScheme = useColorScheme();\n    const colors = colorSchemes[colorScheme] || colorSchemes.light;\n\n    \n\n    //Template\n    return (\n        <View style={styles(scales).main_container}>\n            <TouchableOpacity style={styles(scales).input_container} onPress={() => setState({ ...state, showDatePiker: true })} activeOpacity={.7}>\n                <View pointerEvents=\"none\" >\n                    <TextInput\n                        style={styles(scales).input}\n                        placeholderTextColor={app_styles(scales).colors.text.light_grey}\n                        placeholderStyle={styles(scales).placeholder_style}\n                        placeholder={placeholder}\n                        editable={false}\n                        value={value}\n                    />\n                </View>\n            </TouchableOpacity>\n            {\n                error ?\n                    (\n                        <View>\n                            <Spacer spaceHeight={5} />\n                            <View>\n                                <Text style={styles(scales).error_text}>{error}</Text>\n                            </View>\n                        </View>\n                    )\n                    : null\n            }\n            {\n                Platform.OS === 'android'\n                    ? (\n                        <>\n                            {\n                                state.showDatePiker\n                                    ? <DateTimePicker value={defaultDate}\n                                        mode=\"date\"\n                                        minimumDate={defaultDate}\n                                        is24Hour={true}\n                                        display=\"default\"\n                                        onChange={handleSelectDate} />\n                                    : null\n                            }\n                            {\n                                state.showTimePiker\n                                    ? <DateTimePicker value={defaultDate}\n                                        mode=\"time\"\n                                        minimumDate={defaultDate}\n                                        is24Hour={true}\n                                        display=\"default\"\n                                        onChange={handleSelectTime} />\n                                    : null\n                            }\n                        </>\n                    )\n                    : (\n                        state.showDatePiker\n                            ? (\n                                <Modal\n                                    animationType=\"fade\"\n                                    transparent={true}\n                                    visible={state.showDatePiker}\n                                >\n                                    <View style={styles(scales).modal_content_container}>\n                                        <TouchableOpacity style={[styles(scales).top_container, { backgroundColor: colors.free_space_background }]} onPress={() => setState({ ...state, showDatePiker: false })}>\n                                        </TouchableOpacity>\n                                        <View style={[styles(scales).picker_container, { backgroundColor: colors.background }]}>\n                                            <View style={[styles(scales).header, { borderBottomColor: colors.text }]}>\n                                                <TouchableOpacity onPress={() => setState({ ...state, showDatePiker: false })}>\n                                                    <Text style={[styles(scales).close_piker, { color: colors.text }]}>{translator.translate(language, \"Готово\")}</Text>\n                                                </TouchableOpacity>\n                                            </View>\n                                            <Spacer spaceHeight={10} />\n                                            <View style={{ flexGrow: 1, backgroundColor: colors.background }}>\n                                                <DateTimePicker \n                                                    value={state.notFormatedDate || defaultDate}\n                                                    mode=\"datetime\"\n                                                    minimumDate={defaultDate}\n                                                    minuteInterval={5}\n                                                    is24Hour={true}\n                                                    display=\"default\"\n                                                    onChange={handleSelectIos}\n                                                />\n                                            </View>\n                                        </View>\n                                    </View>\n                                </Modal>\n                            )\n                            : null\n                    )\n            }\n        </View>\n    )\n}\n\n\n//----EXPORT----//\nexport default DateTimePikerInput;\n"]},"metadata":{},"sourceType":"module"}