{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/screens/ProfileEditScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport moment from \"moment\";\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer } from \"../components/shared\";\nimport { SimpleInput, PhoneInput, DatePikerInput } from \"../components/inputs\";\nimport { ButtonSimpleLink, ButtonPrimary } from \"../components/buttons\";\nimport { NetworkErrorModal } from \"../components/modals\";\nimport { AVATAR_BASE_URL } from \"../different/global_vars\";\nimport { checkIfDate } from \"../helpers/helpers\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\nimport translator from \"../translator/translator\";\nimport styles from \"../styles/screens/profile-edit-screen\";\nimport { app_styles } from \"../styles/app_styles\";\n\nvar ProfileEditScreen = function ProfileEditScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      language = _useContext$state.language,\n      scales = _useContext$state.scales;\n\n  var _useContext2 = useContext(AuthContext),\n      _useContext2$state = _useContext2.state,\n      user = _useContext2$state.user,\n      isLoggedIn = _useContext2$state.isLoggedIn,\n      networkError = _useContext2$state.networkError,\n      validationErrors = _useContext2$state.validationErrors,\n      clearValidationErrors = _useContext2.clearValidationErrors,\n      clearNetworkError = _useContext2.clearNetworkError,\n      updateProfile = _useContext2.updateProfile,\n      setValidationErrors = _useContext2.setValidationErrors,\n      clearAllValidationsErrors = _useContext2.clearAllValidationsErrors;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDataLoading = _useState2[0],\n      setIsDataLoading = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInfo = _useState4[0],\n      setUserInfo = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newUserAvatar = _useState6[0],\n      setNewUserAvatar = _useState6[1];\n\n  useEffect(function () {\n    if (!Object.keys(userInfo).length) {\n      var userCopy = JSON.parse(JSON.stringify(user));\n\n      if (userCopy.phone) {\n        userCopy.phone = reformatUserPhone(userCopy.phone);\n      }\n\n      if (userCopy.birth_date) {\n        userCopy.birth_date = checkIfDate(userCopy.birth_date) ? userCopy.birth_date : null;\n      }\n\n      setUserInfo(userCopy);\n    }\n\n    var listener = navigation.addListener('didBlur', function () {\n      clearAllValidationsErrors();\n    });\n    return function () {\n      listener.remove();\n    };\n  }, []);\n\n  var handleUserInfoChanges = function handleUserInfoChanges(prop, value) {\n    setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, _defineProperty({}, prop, value)));\n  };\n\n  var handlePhoneInput = function handlePhoneInput(value) {\n    autocompletePhone(value);\n  };\n\n  var autocompletePhone = function autocompletePhone(value) {\n    if (value !== null && value.length <= 5) {\n      setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n        phone: \"+380 \"\n      }));\n    } else {\n      if (value === null) {\n        setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n          phone: null\n        }));\n        return;\n      }\n\n      if (value.length <= 17) {\n        refactorCurrentPhoneValue(value, [7, 11, 14], \" \");\n      } else if (value.length > 17) {\n        refactorCurrentPhoneValue(value, [7, 11, 14], \" \");\n        var phoneNumber = userInfo.phone.substring(0, 17);\n        setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n          phone: phoneNumber\n        }));\n      }\n    }\n  };\n\n  var refactorCurrentPhoneValue = function refactorCurrentPhoneValue(value, charPositions, symbol) {\n    var splitedVal = value.split(\"\");\n\n    for (var i = 0; i < charPositions.length; i++) {\n      if (splitedVal[charPositions[i]] && splitedVal[charPositions[i]] !== symbol) {\n        var phoneNumber = userInfo.phone.substring(0, charPositions[i]) + symbol + userInfo.phone.substring(charPositions[i]) + value.substr(-1, 1);\n        setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n          phone: phoneNumber\n        }));\n        return;\n      } else {\n        setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n          phone: value\n        }));\n      }\n    }\n  };\n\n  var uploadPhoto = function uploadPhoto() {\n    var _await$Permissions$as, status, message, result, _result;\n\n    return _regeneratorRuntime.async(function uploadPhoto$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (validationErrors.avatar) {\n              validationErrors.avatar = null;\n            }\n\n            if (!Constants.platform.ios) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n          case 4:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n\n            if (!(status !== \"granted\")) {\n              _context.next = 11;\n              break;\n            }\n\n            message = translator.translate(language, \"Для використання даної опції, нам потрібні дозволи для доступу до камери\");\n            Alert.alert(translator.translate(language, \"Увага!\"), message);\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 4],\n              base64: true\n            }));\n\n          case 13:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setNewUserAvatar(result.uri);\n            }\n\n          case 15:\n            _context.next = 21;\n            break;\n\n          case 17:\n            _context.next = 19;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 4],\n              base64: true\n            }));\n\n          case 19:\n            _result = _context.sent;\n\n            if (!_result.cancelled) {\n              setNewUserAvatar(_result.uri);\n            }\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var formSubmit = function formSubmit() {\n    var necessaryFields, data, birthday, cleanedPhone, localImageUri, filename, match, type;\n    return _regeneratorRuntime.async(function formSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            setIsDataLoading(true);\n            necessaryFields = {\n              phone: userInfo.phone,\n              email: userInfo.email\n            };\n\n            if (!hasEmptyFields(necessaryFields)) {\n              _context2.next = 6;\n              break;\n            }\n\n            setIsDataLoading(false);\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            data = new FormData();\n            data.append('email', userInfo.email);\n            data.append('name', userInfo.name);\n\n            if (userInfo.birth_date && isNaN(userInfo.birth_date)) {\n              birthday = transformDateToUnixTime(userInfo.birth_date);\n              data.append('birth_date', birthday);\n            } else {\n              if (userInfo.birth_date) {\n                data.append('birth_date', userInfo.birth_date);\n              }\n            }\n\n            if (userInfo.phone) {\n              cleanedPhone = userInfo.phone.replace(/\\s/g, '');\n              data.append('phone', cleanedPhone);\n            }\n\n            if (newUserAvatar) {\n              localImageUri = newUserAvatar;\n              filename = localImageUri.split(\"/\").pop();\n              match = /\\.(\\w+)$/.exec(filename);\n              type = match ? \"image/\" + match[1] : \"image\";\n              data.append(\"avatarFile\", {\n                uri: localImageUri,\n                name: filename,\n                type: type\n              });\n            }\n\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(updateProfile(data));\n\n          case 14:\n            setIsDataLoading(false);\n            _context2.next = 20;\n            break;\n\n          case 17:\n            _context2.prev = 17;\n            _context2.t0 = _context2[\"catch\"](0);\n            setIsDataLoading(false);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n\n  var reformatUserPhone = function reformatUserPhone(value) {\n    var cleanedPhone = value.replace(/[^0-9]+/g, '');\n    var formatedNumber = \"+\" + cleanedPhone.substring(0, 3) + \" \" + cleanedPhone.substring(3, 5) + \" \" + cleanedPhone.substring(5, 8) + \" \" + cleanedPhone.substring(8, 10) + \" \" + cleanedPhone.substring(10, 12);\n    return formatedNumber;\n  };\n\n  var hasEmptyFields = function hasEmptyFields(data) {\n    var errors = {};\n\n    for (var key in data) {\n      if (!data[key]) {\n        errors[key] = translator.translate(language, \"Поле не може бути порожнім!\");\n      }\n\n      ;\n    }\n\n    if (Object.keys(errors).length) {\n      setValidationErrors(errors);\n      return true;\n    }\n\n    return false;\n  };\n\n  var transformDateToUnixTime = function transformDateToUnixTime(date) {\n    moment.locale(\"uk\");\n    var unixTime = moment(date, \"YYYY-MM-DD\").valueOf() / 1000;\n    return unixTime;\n  };\n\n  var userHasDefaultAvatar = function userHasDefaultAvatar() {\n    return userInfo.avatar && userInfo.avatar.includes('placeholder.png');\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : null,\n    enabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    backAllowed: true,\n    navigation: navigation,\n    title: translator.translate(language, \"Профіль\"),\n    noIcons: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, !networkError ? React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    bounces: false,\n    keyboardShouldPersistTaps: 'always',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 33\n    }\n  }, React.createElement(Spacer, {\n    spaceHeight: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 37\n    }\n  }), React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 41\n    }\n  }, userInfo.avatar && !userHasDefaultAvatar() || newUserAvatar ? React.createElement(Image, {\n    source: {\n      uri: newUserAvatar || userInfo.avatar\n    },\n    style: styles(scales).avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 55\n    }\n  }) : React.createElement(View, {\n    style: styles(scales).avatar_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 57\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"user\",\n    color: isLoggedIn ? app_styles(scales).colors.app.blue : app_styles(scales).app_grey,\n    size: Math.round(scales.widthScale * 30),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 61\n    }\n  })), React.createElement(ButtonSimpleLink, {\n    medium: true,\n    nounderline: true,\n    callback: function callback() {\n      return uploadPhoto();\n    },\n    title: user.avatar ? translator.translate(language, \"Змінити фото\") : translator.translate(language, \"Додати фото\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 45\n    }\n  })), React.createElement(Spacer, {\n    spaceHeight: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 41\n    }\n  }), React.createElement(SimpleInput, {\n    callback: handleUserInfoChanges,\n    placeholder: translator.translate(language, \"Ім'я\"),\n    clearError: clearValidationErrors,\n    value: userInfo.name || null,\n    name: \"name\",\n    error: validationErrors.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 41\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 41\n    }\n  }), React.createElement(PhoneInput, {\n    callback: handlePhoneInput,\n    clearError: clearValidationErrors,\n    value: userInfo.phone,\n    name: \"phone\",\n    placeholder: translator.translate(language, \"Телефон\"),\n    error: validationErrors.phone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 41\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 41\n    }\n  }), React.createElement(DatePikerInput, {\n    placeholder: translator.translate(language, \"Дата народження\"),\n    name: \"birth_date\",\n    callback: handleUserInfoChanges,\n    clearError: clearValidationErrors,\n    currentValue: userInfo.birth_date,\n    error: validationErrors.birth_date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 41\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 41\n    }\n  }), React.createElement(SimpleInput, {\n    callback: handleUserInfoChanges,\n    placeholder: \"Email\",\n    clearError: clearValidationErrors,\n    value: userInfo.email || null,\n    name: \"email\",\n    error: validationErrors.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 41\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 41\n    }\n  }), !user.facebook_id ? React.createElement(React.Fragment, null, React.createElement(ButtonSimpleLink, {\n    medium: true,\n    nounderline: true,\n    callback: function callback() {\n      return navigation.navigate('ChangePassword');\n    },\n    title: translator.translate(language, \"Змінити пароль\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 57\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 57\n    }\n  })) : null, React.createElement(ButtonPrimary, {\n    color: app_styles(scales).colors.app.blue,\n    callback: formSubmit,\n    title: translator.translate(language, \"Зберегти\"),\n    isDataLoading: isDataLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 41\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 41\n    }\n  }))) : React.createElement(NetworkErrorModal, {\n    isOpened: networkError,\n    closeCallback: clearNetworkError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 31\n    }\n  }))));\n};\n\nexport default ProfileEditScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/ProfileEditScreen.js"],"names":["React","useEffect","useState","useContext","Context","AppSettingsContext","AuthContext","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","moment","Header","SafeView","Block","Spacer","SimpleInput","PhoneInput","DatePikerInput","ButtonSimpleLink","ButtonPrimary","NetworkErrorModal","AVATAR_BASE_URL","checkIfDate","ImagePicker","Constants","Permissions","translator","styles","app_styles","ProfileEditScreen","navigation","state","language","scales","user","isLoggedIn","networkError","validationErrors","clearValidationErrors","clearNetworkError","updateProfile","setValidationErrors","clearAllValidationsErrors","isDataLoading","setIsDataLoading","userInfo","setUserInfo","newUserAvatar","setNewUserAvatar","Object","keys","length","userCopy","JSON","parse","stringify","phone","reformatUserPhone","birth_date","listener","addListener","remove","handleUserInfoChanges","prop","value","handlePhoneInput","autocompletePhone","refactorCurrentPhoneValue","phoneNumber","substring","charPositions","symbol","splitedVal","split","i","substr","uploadPhoto","avatar","platform","ios","askAsync","CAMERA_ROLL","status","message","translate","Alert","alert","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","base64","result","cancelled","uri","formSubmit","necessaryFields","email","hasEmptyFields","data","FormData","append","name","isNaN","birthday","transformDateToUnixTime","cleanedPhone","replace","localImageUri","filename","pop","match","exec","type","formatedNumber","errors","key","date","locale","unixTime","valueOf","userHasDefaultAvatar","includes","flex","Platform","OS","body","row_start","avatar_container","colors","app","blue","app_grey","Math","round","widthScale","facebook_id","navigate"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useEffect, useState, useContext } from 'react';\n//React native\nimport { View, Image, KeyboardAvoidingView, ScrollView, Alert } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\n//React-native-vector-icons package\nimport { createIconSetFromIcoMoon } from 'react-native-vector-icons';\nimport icoMoonConfig from '../../selection.json';\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Moment\nimport moment from \"moment\";\n//Componetns\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer } from \"../components/shared\";\nimport { SimpleInput, PhoneInput, DatePikerInput } from \"../components/inputs\";\nimport { ButtonSimpleLink, ButtonPrimary } from \"../components/buttons\";\nimport { NetworkErrorModal } from \"../components/modals\";\n//Global vars\nimport { AVATAR_BASE_URL } from \"../different/global_vars\";\n//Helpers\nimport { checkIfDate } from \"../helpers/helpers\";\n//Expo\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\n//Localization\nimport translator from \"../translator/translator\";\n//Styles\nimport styles from '../styles/screens/profile-edit-screen';\nimport { app_styles } from '../styles/app_styles';\n\n\n//----COMPONENT----//\nconst ProfileEditScreen = ({ navigation }) => {\n    //Data and State\n    const { state: { language, scales } } = useContext(AppSettingsContext);\n    const { state: { user, isLoggedIn, networkError, validationErrors }, clearValidationErrors, clearNetworkError, updateProfile, setValidationErrors, clearAllValidationsErrors } = useContext(AuthContext);\n    const [isDataLoading, setIsDataLoading] = useState(false);\n    const [userInfo, setUserInfo] = useState({});\n    const [newUserAvatar, setNewUserAvatar] = useState(null);\n\n\n    //Hooks and Methods\n    useEffect(() => {\n        if (!Object.keys(userInfo).length) {            \n            let userCopy = JSON.parse(JSON.stringify(user))\n            if (userCopy.phone) {\n                userCopy.phone = reformatUserPhone(userCopy.phone);\n            }\n            if (userCopy.birth_date) {\n                userCopy.birth_date = checkIfDate(userCopy.birth_date) ? userCopy.birth_date : null\n            } \n            \n            setUserInfo(userCopy);  \n        }\n        const listener = navigation.addListener('didBlur', () => {\n            clearAllValidationsErrors()\n        });\n\n        return () => {\n            listener.remove()\n        }\n    }, []);\n\n\n\n\n\n    const handleUserInfoChanges = (prop, value) => {\n        setUserInfo({ ...userInfo, [prop]: value });\n    }\n\n    /*Customer input handler*/\n    const handlePhoneInput = (value) => {\n        autocompletePhone(value)\n    }\n\n    /*For formating phone number according to design*/\n    const autocompletePhone = (value) => {\n        if (value !== null && value.length <= 5) {\n            setUserInfo({ ...userInfo, phone: \"+380 \" });\n        } else {\n            if (value === null) {\n                setUserInfo({ ...userInfo, phone: null });\n                return;\n            }\n            if (value.length <= 17) {\n                refactorCurrentPhoneValue(value, [7, 11, 14], \" \");\n            } else if (value.length > 17) {\n                refactorCurrentPhoneValue(value, [7, 11, 14], \" \");\n                let phoneNumber = userInfo.phone.substring(0, 17);\n                setUserInfo({ ...userInfo, phone: phoneNumber });\n            }\n        }\n    }\n\n    /*Used in handlePhoneInput method*/\n    const refactorCurrentPhoneValue = (value, charPositions, symbol) => {\n        let splitedVal = value.split(\"\");\n\n        for (let i = 0; i < charPositions.length; i++) {\n            if (\n                splitedVal[charPositions[i]] &&\n                splitedVal[charPositions[i]] !== symbol\n            ) {\n                let phoneNumber = userInfo.phone.substring(0, charPositions[i]) + symbol + userInfo.phone.substring(charPositions[i]) + value.substr(-1, 1);\n                setUserInfo({ ...userInfo, phone: phoneNumber });\n                return;\n            } else {\n                setUserInfo({ ...userInfo, phone: value });\n            }\n        }\n    }\n\n    //Upload photo\n    const uploadPhoto = async () => {\n        if (validationErrors.avatar) {\n            validationErrors.avatar = null;\n        }\n\n        if (Constants.platform.ios) {\n            const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n            if (status !== \"granted\") {\n                let message = translator.translate(language, \"Для використання даної опції, нам потрібні дозволи для доступу до камери\");\n                Alert.alert(translator.translate(language, \"Увага!\"), message);\n            } else {\n                let result = await ImagePicker.launchImageLibraryAsync({\n                    mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                    allowsEditing: true,\n                    aspect: [4, 4],\n                    base64: true\n                });\n\n                if (!result.cancelled) {\n                    setNewUserAvatar(result.uri)\n                }\n            }\n        } else {\n            let result = await ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                allowsEditing: true,\n                aspect: [4, 4],\n                base64: true\n            });\n\n            if (!result.cancelled) {\n                setNewUserAvatar(result.uri)\n            }\n        }\n\n    }\n\n    const formSubmit = async () => {\n        try {\n            setIsDataLoading(true)\n\n            let necessaryFields = {\n                phone: userInfo.phone,\n                email: userInfo.email\n            }\n\n            if (hasEmptyFields(necessaryFields)) {\n                setIsDataLoading(false);\n                return;\n            }\n\n            let data = new FormData();\n                data.append('email', userInfo.email)\n                data.append('name', userInfo.name);\n\n            if (userInfo.birth_date && isNaN(userInfo.birth_date)) {\n                let birthday = transformDateToUnixTime(userInfo.birth_date)\n                data.append('birth_date', birthday);\n            } else {\n                if(userInfo.birth_date){\n                    data.append('birth_date', userInfo.birth_date);\n                }\n            }\n\n            if (userInfo.phone) {\n                let cleanedPhone = userInfo.phone.replace(/\\s/g, '');\n                data.append('phone', cleanedPhone);\n            }\n\n            if (newUserAvatar) {\n                let localImageUri = newUserAvatar;\n                let filename = localImageUri.split(\"/\").pop();\n                let match = /\\.(\\w+)$/.exec(filename);\n                let type = match ? `image/${match[1]}` : `image`;\n                data.append(\"avatarFile\", {\n                    uri: localImageUri,\n                    name: filename,\n                    type\n                });\n            }\n\n            await updateProfile(data)\n            setIsDataLoading(false)\n        } catch (error) {\n            setIsDataLoading(false)\n        }\n    }\n\n    const reformatUserPhone = (value) => {\n        let cleanedPhone = value.replace(/[^0-9]+/g, '');\n        let formatedNumber = \"+\" + cleanedPhone.substring(0, 3) + \" \" + cleanedPhone.substring(3, 5) + \" \" + cleanedPhone.substring(5, 8) + \" \" + cleanedPhone.substring(8, 10) + \" \" + cleanedPhone.substring(10, 12);\n        return formatedNumber;\n    }\n\n    const hasEmptyFields = (data) => {\n        let errors = {};\n        for (let key in data) {\n            if (!data[key]) {\n                errors[key] = translator.translate(language, \"Поле не може бути порожнім!\")\n            };\n        }\n        if (Object.keys(errors).length) {\n            setValidationErrors(errors);\n            return true;\n        }\n        return false;\n    }\n\n    const transformDateToUnixTime = (date) => {\n        moment.locale(\"uk\");\n        let unixTime = (moment(date, \"YYYY-MM-DD\").valueOf()) / 1000;\n        return unixTime;\n    }\n\n    const userHasDefaultAvatar = () => {\n        return userInfo.avatar && userInfo.avatar.includes('placeholder.png');\n    }\n\n\n    return (\n        <KeyboardAvoidingView style={{ flex: 1 }} behavior={Platform.OS === 'ios' ? 'padding' : null} enabled>\n            <SafeView>\n                <Header\n                    backAllowed\n                    navigation={navigation}\n                    title={translator.translate(language, \"Профіль\")}\n                    noIcons\n                />\n                <View style={styles(scales).body}>\n                    {\n                        !networkError\n                            ? (\n                                <ScrollView showsVerticalScrollIndicator={false} bounces={false} keyboardShouldPersistTaps={'always'}>\n                                    <Spacer spaceHeight={15} />\n                                    {/* User Avatar Block */}\n                                    <Block>\n                                        <View style={app_styles(scales).row_start}>\n                                            {\n                                                (userInfo.avatar && !userHasDefaultAvatar()) || newUserAvatar\n                                                    ? <Image\n                                                        source={{ uri:  newUserAvatar || userInfo.avatar }}\n                                                        style={styles(scales).avatar}\n                                                    />\n                                                    : (\n                                                        <View style={styles(scales).avatar_container}>\n                                                            <IcoMoonIcon name=\"user\" color={isLoggedIn ? app_styles(scales).colors.app.blue : app_styles(scales).app_grey} size={Math.round(scales.widthScale * 30)} />\n                                                        </View>\n                                                    )\n                                            }\n                                            <ButtonSimpleLink\n                                                medium\n                                                nounderline\n                                                callback={() => uploadPhoto()}\n                                                title={user.avatar ? translator.translate(language, \"Змінити фото\") : translator.translate(language, \"Додати фото\")}\n                                            />\n                                        </View>\n                                        {/* Form Block */}\n                                        <Spacer spaceHeight={30} />\n                                        <SimpleInput\n                                            callback={handleUserInfoChanges}\n                                            placeholder={translator.translate(language, \"Ім'я\")}\n                                            clearError={clearValidationErrors}\n                                            value={userInfo.name || null}\n                                            name=\"name\"\n                                            error={validationErrors.name}\n                                        />\n                                        <Spacer spaceHeight={25} />\n                                        <PhoneInput\n                                            callback={handlePhoneInput}\n                                            clearError={clearValidationErrors}\n                                            value={userInfo.phone}\n                                            name=\"phone\"\n                                            placeholder={translator.translate(language, \"Телефон\")}\n                                            error={validationErrors.phone}\n                                        />\n                                        <Spacer spaceHeight={25} />\n                                        <DatePikerInput\n                                            placeholder={translator.translate(language, \"Дата народження\")}\n                                            name=\"birth_date\"\n                                            callback={handleUserInfoChanges}\n                                            clearError={clearValidationErrors}\n                                            currentValue={userInfo.birth_date}\n                                            error={validationErrors.birth_date}\n                                        />\n                                        <Spacer spaceHeight={25} />\n                                        <SimpleInput\n                                            callback={handleUserInfoChanges}\n                                            placeholder=\"Email\"\n                                            clearError={clearValidationErrors}\n                                            value={userInfo.email || null}\n                                            name=\"email\"\n                                            error={validationErrors.email}\n                                        />\n                                        <Spacer spaceHeight={40} />\n                                        {\n                                            !user.facebook_id\n                                                ? (\n                                                    <>\n                                                        <ButtonSimpleLink\n                                                            medium\n                                                            nounderline\n                                                            callback={() => navigation.navigate('ChangePassword')}\n                                                            title={translator.translate(language, \"Змінити пароль\")}\n                                                        />\n                                                        <Spacer spaceHeight={40}/>\n                                                    </>\n                                                )\n                                                : null\n                                        }\n                                        <ButtonPrimary\n                                            color={app_styles(scales).colors.app.blue}\n                                            callback={formSubmit}\n                                            title={translator.translate(language, \"Зберегти\")}\n                                            isDataLoading={isDataLoading}\n                                        />\n                                        <Spacer spaceHeight={30} />\n                                    </Block>\n                                </ScrollView>\n                            )\n                            : <NetworkErrorModal\n                                isOpened={networkError}\n                                closeCallback={clearNetworkError}\n                            />\n                    }\n                </View>\n            </SafeView>\n        </KeyboardAvoidingView>\n    );\n}\n\n\n\n//----EXPORT----//\nexport default ProfileEditScreen;"]},"metadata":{},"sourceType":"module"}