{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/screens/TermsAndConditionsPageScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer, DataLoadingIndicator } from \"../components/shared\";\nimport NoContentBlock from \"../components/shared/NoContentBlock\";\nimport { NetworkErrorModal } from \"../components/modals\";\nimport axios from 'axios';\nimport { BASE_URL, APP_VERSION } from \"../different/global_vars\";\nimport translator from \"../translator/translator\";\nimport { prepareLanguageToHttpRequest, escapeHtml } from \"../helpers/helpers\";\nimport styles from \"../styles/screens/terms-and-conditions-page-screen\";\n\nvar TermsAndConditionsPageScreen = function TermsAndConditionsPageScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      language = _useContext$state.language,\n      scales = _useContext$state.scales,\n      appSettings = _useContext$state.appSettings;\n\n  var _useState = useState({\n    isDataFetching: true,\n    pageTitle: null,\n    page: null,\n    networkError: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    if (!state.page) {\n      fetchPage();\n    }\n  }, []);\n\n  var fetchPage = function fetchPage() {\n    var lang, page_id, url, response, page_info;\n    return _regeneratorRuntime.async(function fetchPage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            lang = prepareLanguageToHttpRequest(language);\n            page_id = fetchPageId();\n\n            if (!page_id) {\n              _context.next = 14;\n              break;\n            }\n\n            url = BASE_URL + \"/page/one?lang=\" + lang + \"&page_id=\" + page_id + \"&is_mobile=true\";\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.get(url));\n\n          case 7:\n            response = _context.sent;\n\n            if (response.data && response.data.page) {\n              page_info = response.data.page;\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                isDataFetching: false,\n                page: page_info.description1,\n                pageTitle: page_info.title,\n                networkError: false\n              }));\n            } else {\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                isDataFetching: false,\n                page: null,\n                networkError: false\n              }));\n            }\n\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](4);\n            setState(_objectSpread(_objectSpread({}, state), {}, {\n              networkError: true,\n              isDataFetching: false\n            }));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 11]], Promise);\n  };\n\n  var fetchPageId = function fetchPageId() {\n    var needle = navigation.getParam('page');\n\n    if (needle) {\n      return appSettings.terms_and_conditions_pages[needle];\n    }\n\n    return null;\n  };\n\n  var clearNetworkError = function clearNetworkError() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      networkError: false\n    }));\n  };\n\n  return React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    title: state.networkError ? 'Ooops' : state.pageTitle || \"  \",\n    backAllowed: true,\n    navigation: navigation,\n    noIcons: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, !state.networkError ? !state.isDataFetching ? state.page ? React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    bounces: false,\n    keyboardShouldPersistTaps: 'always',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 45\n    }\n  }, React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 49\n    }\n  }, React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 53\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 53\n    }\n  }, escapeHtml(state.page)))) : React.createElement(NoContentBlock, {\n    navigation: navigation,\n    title: translator.translate(language, \"Контент не доступний\"),\n    note: translator.translate(language, \"Скоріш за все, версія сторінки для встановленої мови відсутня\"),\n    toMainLink: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 45\n    }\n  }) : React.createElement(DataLoadingIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 35\n    }\n  }) : React.createElement(NetworkErrorModal, {\n    isOpened: state.networkError,\n    closeCallback: clearNetworkError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 27\n    }\n  })));\n};\n\nexport default TermsAndConditionsPageScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/TermsAndConditionsPageScreen.js"],"names":["React","useState","useContext","useEffect","Context","AppSettingsContext","Header","SafeView","Block","Spacer","DataLoadingIndicator","NoContentBlock","NetworkErrorModal","axios","BASE_URL","APP_VERSION","translator","prepareLanguageToHttpRequest","escapeHtml","styles","TermsAndConditionsPageScreen","navigation","state","language","scales","appSettings","isDataFetching","pageTitle","page","networkError","setState","fetchPage","lang","page_id","fetchPageId","url","get","response","data","page_info","description1","title","needle","getParam","terms_and_conditions_pages","clearNetworkError","body","text","translate"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useState, useContext, useEffect } from 'react';\n//React native\nimport { ScrollView, Text, View, Linking } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\n//Componetns\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer, DataLoadingIndicator } from \"../components/shared\";\nimport NoContentBlock from \"../components/shared/NoContentBlock\";\nimport { NetworkErrorModal } from \"../components/modals\";\n//Axios\nimport axios from 'axios';\n//Global vars\nimport { BASE_URL, APP_VERSION } from \"../different/global_vars\";\n//Translations\nimport translator from \"../translator/translator\";\n//Helpers\nimport { prepareLanguageToHttpRequest, escapeHtml } from \"../helpers/helpers\";\n//Styles\nimport styles from '../styles/screens/terms-and-conditions-page-screen';\n\n\n\n//----COMPONENT----//\nconst TermsAndConditionsPageScreen = ({ navigation }) => {\n    //Data and State\n    const { state: { language, scales, appSettings } } = useContext(AppSettingsContext);\n    const [state, setState] = useState({\n        isDataFetching: true,\n        pageTitle: null,\n        page: null,\n        networkError: false\n    });\n\n\n    //Hooks and Methods\n    useEffect(() => {\n        if (!state.page) {\n            fetchPage()\n        }\n    }, []);\n\n\n    const fetchPage = async () => {\n        let lang = prepareLanguageToHttpRequest(language);\n        let page_id = fetchPageId();\n        if (page_id) {\n            let url = `${BASE_URL}/page/one?lang=${lang}&page_id=${page_id}&is_mobile=true`;\n            try {\n                let response = await axios.get(url);\n                if (response.data && response.data.page) {\n                    let page_info = response.data.page;\n                    setState({ ...state, isDataFetching: false, page: page_info.description1, pageTitle: page_info.title, networkError: false });\n                } else {\n                    setState({ ...state, isDataFetching: false, page: null, networkError: false });\n                }\n            } catch (error) {\n                setState({ ...state, networkError: true, isDataFetching: false })\n            }\n        }\n    }\n\n\n    const fetchPageId = () => {        \n        let needle = navigation.getParam('page');\n        if (needle) {\n            return appSettings.terms_and_conditions_pages[needle];\n        }\n        return null;\n    }\n\n\n    const clearNetworkError = () => {\n        setState({ ...state, networkError: false });\n    }\n\n\n    //Template\n    return (\n\n        <SafeView>\n            <Header\n                title={state.networkError ? 'Ooops' : (state.pageTitle || \"  \")}\n                backAllowed\n                navigation={navigation}\n                noIcons\n            />\n            <View style={styles(scales).body}>\n                {\n                    !state.networkError\n                        ? (\n                            !state.isDataFetching\n                                ? (\n                                    state.page\n                                        ? (\n                                            <ScrollView showsVerticalScrollIndicator={false} bounces={false} keyboardShouldPersistTaps={'always'}>\n                                                <Block>\n                                                    <Spacer spaceHeight={20} />\n                                                    <Text style={styles(scales).text}>{escapeHtml(state.page)}</Text>\n                                                </Block>\n                                            </ScrollView>\n                                        ) : <NoContentBlock \n                                            navigation={navigation}\n                                            title={translator.translate(language, \"Контент не доступний\")}\n                                            note={translator.translate(language, \"Скоріш за все, версія сторінки для встановленої мови відсутня\")}\n                                            toMainLink\n                                        />\n                                )\n                                : <DataLoadingIndicator />\n                        )\n                        : <NetworkErrorModal\n                            isOpened={state.networkError}\n                            closeCallback={clearNetworkError}\n                        />\n                }\n            </View>\n        </SafeView>\n    );\n}\n\n//----EXPORT----//\nexport default TermsAndConditionsPageScreen;"]},"metadata":{},"sourceType":"module"}