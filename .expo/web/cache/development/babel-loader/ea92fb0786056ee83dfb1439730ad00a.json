{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/components/menu/ProductsBlock.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport axios from \"axios\";\nimport 'moment/locale/uk';\nimport translator from \"../../translator/translator\";\nimport { BASE_URL, APP_VERSION } from \"../../different/global_vars\";\nimport { Block, HorizontalDivider, DataLoadingIndicator, Spacer } from \"../shared\";\nimport { NetworkErrorModal } from \"../modals\";\nimport NoContentBlock from \"../shared/NoContentBlock\";\nimport FlatListFooter from \"../shared/FlatListFooter\";\nimport ProductCardMenu from \"./ProductCardMenu\";\nimport { prepareLanguageToHttpRequest } from \"../../helpers/helpers\";\n\nvar ProductsBlock = function (_React$PureComponent) {\n  _inherits(ProductsBlock, _React$PureComponent);\n\n  var _super = _createSuper(ProductsBlock);\n\n  function ProductsBlock(props) {\n    var _this;\n\n    _classCallCheck(this, ProductsBlock);\n\n    _this = _super.call(this, props);\n\n    _this._getProducts = function _callee() {\n      var isRefresh,\n          isMore,\n          page,\n          category,\n          _language,\n          lang,\n          url,\n          response,\n          products_data,\n          meta,\n          data,\n          _args = arguments;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isRefresh = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n              isMore = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n              page = _args.length > 2 && _args[2] !== undefined ? _args[2] : 1;\n              category = _this.state.category;\n              _context.prev = 4;\n\n              if (isMore) {\n                _this.setState({\n                  isMoreDataLoading: true\n                });\n              } else if (isRefresh) {\n                _this.setState({\n                  isDataRefreshing: true\n                });\n              } else {\n                _this.setState({\n                  isDataLoading: true\n                });\n              }\n\n              _language = _this.state.language;\n              lang = prepareLanguageToHttpRequest(_language);\n              url = BASE_URL + \"/product/products-for-category?category_id=\" + category.id + \"&lang=\" + lang + \"&version=\" + APP_VERSION + \"&page=\" + page + \"&limit=8\";\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(axios.get(url));\n\n            case 11:\n              response = _context.sent;\n\n              if (!(response && response.data && response.data.data)) {\n                _context.next = 24;\n                break;\n              }\n\n              products_data = response.data.data;\n              meta = _objectSpread({\n                language: _language\n              }, response.data.meta);\n\n              if (!(products_data && products_data.length)) {\n                _context.next = 21;\n                break;\n              }\n\n              data = isMore ? [].concat(_toConsumableArray(_this.state.products), _toConsumableArray(products_data)) : products_data;\n\n              _this.setState({\n                products: data,\n                productsMetaData: meta,\n                networkError: false\n              });\n\n              return _context.abrupt(\"return\", products_data);\n\n            case 21:\n              _this.setState({\n                networkError: false,\n                products: true\n              });\n\n            case 22:\n              _context.next = 25;\n              break;\n\n            case 24:\n              _this.setState({\n                networkError: true,\n                products: false\n              });\n\n            case 25:\n              _context.next = 30;\n              break;\n\n            case 27:\n              _context.prev = 27;\n              _context.t0 = _context[\"catch\"](4);\n\n              _this.setState({\n                networkError: true,\n                products: false\n              });\n\n            case 30:\n              _context.prev = 30;\n\n              if (isMore) {\n                _this.setState({\n                  isMoreDataLoading: false\n                });\n              } else if (isRefresh) {\n                _this.setState({\n                  isDataRefreshing: false\n                });\n              } else {\n                _this.setState({\n                  isDataLoading: false\n                });\n              }\n\n              return _context.finish(30);\n\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[4, 27, 30, 33]], Promise);\n    };\n\n    _this._downloadMoreProducts = function () {\n      if (_this.state.isMoreDataLoading) return;\n      var currentPage = parseInt(_this.state.productsMetaData.current_page);\n      var lastPage = parseInt(_this.state.productsMetaData.total_pages);\n      var nextPage = currentPage + 1;\n      if (nextPage > lastPage) return;\n\n      _this._getProducts(false, true, nextPage);\n    };\n\n    _this._renderListFooterComponent = function () {\n      return _this.state.isMoreDataLoading ? React.createElement(FlatListFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 47\n        }\n      }) : null;\n    };\n\n    _this._getProductsList = function () {\n      var _this$state = _this.state,\n          category = _this$state.category,\n          pizza_category_id = _this$state.pizza_category_id,\n          products = _this$state.products;\n\n      if (Number(category.id) !== Number(pizza_category_id)) {\n        return products;\n      } else {\n        var productsClone = JSON.parse(JSON.stringify(products));\n        var constructorData = {\n          id: 'id',\n          is_constructor: true\n        };\n        productsClone.unshift(constructorData);\n        return productsClone;\n      }\n    };\n\n    _this.state = {\n      scales: props.route.scales,\n      language: props.route.language,\n      navigation: props.route.navigation,\n      category: props.route.category,\n      pizza_category_id: props.route.pizza_category_id,\n      products: false,\n      productsMetaData: {\n        language: null\n      },\n      isDataLoading: false,\n      isMoreDataLoading: false,\n      isDataRefreshing: false,\n      networkError: false\n    };\n    return _this;\n  }\n\n  _createClass(ProductsBlock, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$state2 = this.state,\n          products = _this$state2.products,\n          productsMetaData = _this$state2.productsMetaData;\n\n      if (!products.length || productsMetaData.language !== language) {\n        this._getProducts();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        products: false,\n        productsMetaData: {\n          language: null\n        },\n        isDataLoading: false,\n        isMoreDataLoading: false,\n        isDataRefreshing: false,\n        networkError: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          products = _this$state3.products,\n          navigation = _this$state3.navigation,\n          isDataLoading = _this$state3.isDataLoading,\n          networkError = _this$state3.networkError,\n          language = _this$state3.language,\n          scales = _this$state3.scales,\n          isDataRefreshing = _this$state3.isDataRefreshing;\n      return React.createElement(React.Fragment, null, !isDataLoading ? products ? products.length ? React.createElement(FlatList, {\n        showsVerticalScrollIndicator: false,\n        keyExtractor: function keyExtractor(order, index) {\n          return \"key\" + index;\n        },\n        data: this._getProductsList(),\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(ProductCardMenu, {\n            product: item,\n            navigation: navigation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 75\n            }\n          });\n        },\n        ItemSeparatorComponent: function ItemSeparatorComponent() {\n          return React.createElement(Spacer, {\n            spaceHeight: 20,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 79\n            }\n          });\n        },\n        contentContainerStyle: {\n          paddingTop: Math.round(scales.heightScale * 20),\n          paddingBottom: Math.round(scales.heightScale * 30)\n        },\n        bounces: false,\n        onEndReached: this._downloadMoreProducts,\n        onEndReachedThreshold: 0.05,\n        ListFooterComponent: this._renderListFooterComponent,\n        onRefresh: function onRefresh() {\n          return _this2._getProducts(true);\n        },\n        refreshing: isDataRefreshing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 45\n        }\n      }) : React.createElement(NoContentBlock, {\n        title: translator.translate(language, \"Товари відсутні\"),\n        note: translator.translate(language, \"Нажаль, в даному розділі меню товари відсутні.\"),\n        navigation: navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 43\n        }\n      }) : null : React.createElement(DataLoadingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 27\n        }\n      }), React.createElement(NetworkErrorModal, {\n        isOpened: networkError,\n        closeCallback: function closeCallback() {\n          return _this2.setState({\n            networkError: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ProductsBlock;\n}(React.PureComponent);\n\nexport { ProductsBlock as default };","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/menu/ProductsBlock.js"],"names":["React","Component","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","axios","translator","BASE_URL","APP_VERSION","Block","HorizontalDivider","DataLoadingIndicator","Spacer","NetworkErrorModal","NoContentBlock","FlatListFooter","ProductCardMenu","prepareLanguageToHttpRequest","ProductsBlock","props","_getProducts","isRefresh","isMore","page","category","state","setState","isMoreDataLoading","isDataRefreshing","isDataLoading","language","lang","url","id","get","response","data","products_data","meta","length","products","productsMetaData","networkError","_downloadMoreProducts","currentPage","parseInt","current_page","lastPage","total_pages","nextPage","_renderListFooterComponent","_getProductsList","pizza_category_id","Number","productsClone","JSON","parse","stringify","constructorData","is_constructor","unshift","scales","route","navigation","order","index","item","paddingTop","Math","round","heightScale","paddingBottom","translate","PureComponent"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, {  Component } from 'react';\n//React native\nimport { FlatList, Text } from 'react-native';\n//React-native-vector-icons package\nimport { createIconSetFromIcoMoon } from 'react-native-vector-icons';\nimport icoMoonConfig from '../../../selection.json';\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Api\nimport axios from \"axios\";\n//Moment\nimport 'moment/locale/uk';\n//Localization\nimport translator from \"../../translator/translator\";\n//Global vars\nimport { BASE_URL, APP_VERSION } from \"../../different/global_vars\";\n//Components\nimport { Block, HorizontalDivider, DataLoadingIndicator, Spacer } from \"../shared\";\nimport { NetworkErrorModal } from \"../modals\";\nimport NoContentBlock from \"../shared/NoContentBlock\";\nimport FlatListFooter from \"../shared/FlatListFooter\";\nimport ProductCardMenu from \"./ProductCardMenu\";\n//Helpers\nimport { prepareLanguageToHttpRequest } from \"../../helpers/helpers\";\n\n\n\n\n//----COMPONENT----//\nexport default class ProductsBlock extends React.PureComponent {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            scales: props.route.scales,\n            language: props.route.language,\n            navigation: props.route.navigation,\n            category: props.route.category,\n            pizza_category_id: props.route.pizza_category_id,\n            products: false,\n            productsMetaData: {\n                language: null\n            },\n            isDataLoading: false,\n            isMoreDataLoading: false,\n            isDataRefreshing: false,\n            networkError: false,\n        }\n    }\n\n    componentDidMount() {\n        const { products, productsMetaData } = this.state;\n        if (!products.length || productsMetaData.language !== language) {\n            this._getProducts();\n        }\n    }\n\n    componentWillUnmount(){\n        this.setState({\n            products: false,\n            productsMetaData: {\n                language: null\n            },\n            isDataLoading: false,\n            isMoreDataLoading: false,\n            isDataRefreshing: false,\n            networkError: false,\n        });\n    }\n\n    _getProducts = async (isRefresh = false, isMore = false, page = 1) => {\n        const { category } = this.state;\n\n        try {\n            if (isMore) {\n                this.setState({ isMoreDataLoading: true });\n            } else if (isRefresh) {\n                this.setState({ isDataRefreshing: true });\n            } else {\n                this.setState({ isDataLoading: true });\n            }\n\n            const language = this.state.language;\n            const lang = prepareLanguageToHttpRequest(language);\n            const url = `${BASE_URL}/product/products-for-category?category_id=${category.id}&lang=${lang}&version=${APP_VERSION}&page=${page}&limit=8`;\n            const response = await axios.get(url);\n\n            if (response && response.data && response.data.data) {\n                let products_data = response.data.data;\n                let meta = { language, ...response.data.meta }\n\n                if (products_data && products_data.length) {\n                    let data = isMore ? [...this.state.products, ...products_data] : products_data\n                    this.setState({\n                        products: data,\n                        productsMetaData: meta,\n                        networkError: false\n                    });\n                    return products_data;\n                } else {\n                    this.setState({\n                        networkError: false,\n                        products: true\n                    });\n                }\n            } else {\n                this.setState({ networkError: true, products: false })\n            }\n        } catch (error) {\n            this.setState({ networkError: true, products: false })\n        } finally {\n            if (isMore) {\n                this.setState({ isMoreDataLoading: false });\n            } else if (isRefresh) {\n                this.setState({ isDataRefreshing: false });\n            } else {\n                this.setState({ isDataLoading: false });\n            }\n        }\n    }\n\n    _downloadMoreProducts = () => {\n        if (this.state.isMoreDataLoading) return;\n\n        let currentPage = parseInt(this.state.productsMetaData.current_page);\n        let lastPage = parseInt(this.state.productsMetaData.total_pages);\n        let nextPage = currentPage + 1;\n\n        if (nextPage > lastPage) return;\n        this._getProducts(false, true, nextPage);\n    }\n\n    _renderListFooterComponent = () => {\n        return this.state.isMoreDataLoading ? <FlatListFooter /> : null\n    }\n\n\n    _getProductsList = () => {\n        const { category, pizza_category_id, products } = this.state;\n\n        if(Number(category.id) !== Number(pizza_category_id)){\n            return products;\n        } else {\n            let productsClone = JSON.parse(JSON.stringify(products));\n            let constructorData = {\n                id: 'id',\n                is_constructor: true\n            }\n            productsClone.unshift(constructorData);\n            return productsClone;\n        }\n    }\n\n\n\n    render() {\n        const { products, navigation, isDataLoading, networkError, language, scales, isDataRefreshing } = this.state;\n\n        return (\n            <>\n                {\n                    !isDataLoading\n                        ? (\n                            products\n                                ? (\n                                    products.length\n                                        ? (\n                                            <FlatList\n                                                showsVerticalScrollIndicator={false}\n                                                keyExtractor={(order, index) => \"key\" + index}\n                                                data={this._getProductsList()}\n                                                renderItem={({ item }) => <ProductCardMenu product={item} navigation={navigation}/>}\n                                                ItemSeparatorComponent={() => <Spacer spaceHeight={20} />}\n                                                contentContainerStyle={{ paddingTop: Math.round(scales.heightScale * 20), paddingBottom: Math.round(scales.heightScale * 30) }}\n                                                bounces={false}\n                                                onEndReached={this._downloadMoreProducts}\n                                                onEndReachedThreshold={0.05}\n                                                ListFooterComponent={this._renderListFooterComponent}\n                                                onRefresh={() => this._getProducts(true)}\n                                                refreshing={isDataRefreshing}\n                                            />\n                                        )\n                                        : <NoContentBlock\n                                            title={translator.translate(language, \"Товари відсутні\")}\n                                            note={translator.translate(language, \"Нажаль, в даному розділі меню товари відсутні.\")}\n                                            navigation={navigation}\n                                        />\n                                ) : null\n                        )\n                        : <DataLoadingIndicator />\n                }\n                <NetworkErrorModal\n                    isOpened={networkError}\n                    closeCallback={() => this.setState({ networkError: false })}\n                />\n            </>\n        );\n    }\n\n\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}