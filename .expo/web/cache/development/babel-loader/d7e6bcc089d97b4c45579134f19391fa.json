{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/components/inputs/PasswordInput.js\";\nimport React, { useContext, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport { Spacer } from \"../shared\";\nimport styles from \"../../styles/components/inputs/password-input\";\nimport { app_styles } from \"../../styles/app_styles\";\n\nvar PasswordInput = function PasswordInput(_ref) {\n  var value = _ref.value,\n      placeholder = _ref.placeholder,\n      error = _ref.error,\n      clearError = _ref.clearError,\n      callback = _ref.callback,\n      name = _ref.name;\n\n  var _useContext = useContext(AppSettingsContext),\n      scales = _useContext.state.scales;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      secured = _useState2[0],\n      setSecured = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFocused = _useState4[0],\n      setIsFocused = _useState4[1];\n\n  var arrangeFocus = function arrangeFocus() {\n    clearError(name);\n    setIsFocused(true);\n  };\n\n  var handleInput = function handleInput(value) {\n    callback(name, value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles(scales).input_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: [styles(scales).input, {\n      borderBottomWidth: Math.round(scales.widthScale * 1),\n      borderBottomColor: isFocused ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.light_grey\n    }],\n    placeholderTextColor: app_styles(scales).colors.text.light_grey,\n    placeholder: placeholder,\n    autocapitalize: \"none\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(value) {\n      return handleInput(value);\n    },\n    value: value,\n    onFocus: arrangeFocus,\n    secureTextEntry: secured,\n    onBlur: function onBlur() {\n      return setIsFocused(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    style: [styles(scales).secure_button_container, {\n      borderBottomWidth: Math.round(scales.widthScale * 1),\n      borderBottomColor: isFocused ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.light_grey\n    }],\n    onPress: function onPress() {\n      return setSecured(!secured);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: secured ? 'crossed-eye' : 'eye',\n    color: isFocused ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.light_grey,\n    size: Math.round(scales.widthScale * 20),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }))), error ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).error_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, error))) : null);\n};\n\nexport default PasswordInput;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/inputs/PasswordInput.js"],"names":["React","useContext","useState","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","Context","AppSettingsContext","Spacer","styles","app_styles","PasswordInput","value","placeholder","error","clearError","callback","name","scales","state","secured","setSecured","isFocused","setIsFocused","arrangeFocus","handleInput","input_container","input","borderBottomWidth","Math","round","widthScale","borderBottomColor","colors","app","blue","text","light_grey","secure_button_container","error_text"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext, useState } from 'react';\n//React native\nimport { Text, View, TextInput, TouchableOpacity } from 'react-native';\n//React-native-vector-icons package\nimport { createIconSetFromIcoMoon } from 'react-native-vector-icons';\nimport icoMoonConfig from '../../../selection.json';\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//Components\nimport { Spacer } from '../shared';\n//Styles\nimport styles from \"../../styles/components/inputs/password-input\";\nimport { app_styles } from '../../styles/app_styles';\n\n\n\n\n//----COMPONENT----//\nconst PasswordInput = ({ value, placeholder, error, clearError, callback, name }) => {\n    //Data and State\n    const { state: { scales } } = useContext(AppSettingsContext);\n    const [secured, setSecured] = useState(true);\n    const [isFocused, setIsFocused] = useState(false);\n\n    //Hooks and Methods\n    const arrangeFocus = () => {\n        clearError(name);\n        setIsFocused(true);\n    }\n\n    const handleInput = (value) => {\n        callback(name, value)\n    }\n\n\n    //Template\n    return (\n        <>\n            <View style={styles(scales).input_container}>\n                <TextInput\n                    style={[styles(scales).input, { borderBottomWidth: Math.round(scales.widthScale * 1), borderBottomColor: isFocused ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.light_grey }]}\n                    placeholderTextColor={app_styles(scales).colors.text.light_grey}\n                    placeholder={placeholder}\n                    autocapitalize=\"none\"\n                    autoCorrect={false}\n                    onChangeText={(value) => handleInput(value)}\n                    value={value}\n                    onFocus={arrangeFocus}\n                    secureTextEntry={secured}\n                    onBlur={() => setIsFocused(false)}\n                />\n                <TouchableOpacity\n                    activeOpacity={0.7}\n                    style={[styles(scales).secure_button_container, { borderBottomWidth: Math.round(scales.widthScale * 1), borderBottomColor: isFocused ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.light_grey }]}\n                    onPress={() => setSecured(!secured)}\n                >\n                    <IcoMoonIcon\n                        name={secured ? 'crossed-eye' : 'eye'}\n                        color={isFocused ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.light_grey}\n                        size={Math.round(scales.widthScale * 20)}\n                    />\n                </TouchableOpacity>\n            </View>\n            {\n                error ?\n                    (\n                        <>\n                            <Spacer spaceHeight={5} />\n                            <View>\n                                <Text style={styles(scales).error_text}>{error}</Text>\n                            </View>\n                        </>\n                    )\n                    : null\n            }\n        </>\n    )\n}\n\n\n//----EXPORT----//\nexport default PasswordInput;\n"]},"metadata":{},"sourceType":"module"}