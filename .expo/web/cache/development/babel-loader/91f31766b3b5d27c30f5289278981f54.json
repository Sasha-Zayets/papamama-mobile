{"ast":null,"code":"var _jsxFileName = \"/home/alex/workspace/papamama/src/screens/AppMenuScreen.js\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nimport { NavigationEvents } from 'react-navigation';\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer, VerticalSpacer } from \"../components/shared\";\nimport { ButtonSimpleLink } from \"../components/buttons\";\nimport UserInfoBlock from \"../components/auth/UserInfoBlock\";\nimport LanguageSwitchersBlock from \"../components/shared/LanguageSwitchersBlock\";\nimport { NetworkErrorModal } from \"../components/modals\";\nimport translator from \"../translator/translator\";\nimport styles from \"../styles/screens/app-menu-screen\";\nimport { app_styles } from \"../styles/app_styles\";\n\nvar AppMenuScreen = function AppMenuScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      language = _useContext$state.language,\n      scales = _useContext$state.scales;\n\n  var _useContext2 = useContext(AuthContext),\n      _useContext2$state = _useContext2.state,\n      isLoggedIn = _useContext2$state.isLoggedIn,\n      unreadNotifications = _useContext2$state.unreadNotifications,\n      networkError = _useContext2$state.networkError,\n      logout = _useContext2.logout,\n      getUserNotifications = _useContext2.getUserNotifications,\n      clearNetworkError = _useContext2.clearNetworkError;\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(NavigationEvents, {\n    onWillFocus: function onWillFocus() {\n      return getUserNotifications();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), React.createElement(Header, {\n    appMenu: true,\n    backAllowed: true,\n    navigation: navigation,\n    noIcons: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, !networkError ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }), React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 37\n    }\n  }, React.createElement(UserInfoBlock, {\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 41\n    }\n  })), React.createElement(View, {\n    style: [styles(scales).content_container, {\n      justifyContent: isLoggedIn ? 'center' : 'flex-start',\n      paddingTop: isLoggedIn ? 0 : Math.round(scales.heightScale * 60)\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: styles(scales).menu_li,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 45\n    }\n  }, isLoggedIn ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 65\n    }\n  }), React.createElement(ButtonSimpleLink, {\n    title: translator.translate(language, \"Історія замовлень\"),\n    callback: function callback() {\n      return navigation.navigate('OrdersHistory');\n    },\n    medium: true,\n    nounderline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 65\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 65\n    }\n  }), React.createElement(ButtonSimpleLink, {\n    title: translator.translate(language, \"Повідомлення\"),\n    callback: function callback() {\n      return navigation.navigate('Notifications');\n    },\n    medium: true,\n    nounderline: true,\n    unreadNotifications: unreadNotifications,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 65\n    }\n  })) : null, React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 49\n    }\n  }), React.createElement(ButtonSimpleLink, {\n    title: translator.translate(language, \"Новини\"),\n    callback: function callback() {\n      return navigation.navigate('News');\n    },\n    medium: true,\n    nounderline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 49\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 49\n    }\n  }), React.createElement(ButtonSimpleLink, {\n    title: translator.translate(language, \"Про Emma Pizza\"),\n    callback: function callback() {\n      return navigation.navigate('Restaurant');\n    },\n    medium: true,\n    nounderline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 49\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 49\n    }\n  }), React.createElement(ButtonSimpleLink, {\n    title: translator.translate(language, \"Положення і умови\"),\n    callback: function callback() {\n      return navigation.navigate('TermsAndConditions');\n    },\n    medium: true,\n    nounderline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 49\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 49\n    }\n  }), React.createElement(ButtonSimpleLink, {\n    title: translator.translate(language, \"Контакти\"),\n    callback: function callback() {\n      return navigation.navigate('Contacts');\n    },\n    medium: true,\n    nounderline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 49\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 49\n    }\n  }), isLoggedIn ? React.createElement(ButtonSimpleLink, {\n    title: translator.translate(language, \"Вихід\"),\n    callback: logout,\n    medium: true,\n    nounderline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 59\n    }\n  }) : null))), React.createElement(View, {\n    style: styles(scales).language_switcher,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, React.createElement(LanguageSwitchersBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 45\n    }\n  })), React.createElement(View, {\n    style: app_styles(scales).row_center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).made,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 41\n    }\n  }, translator.translate(language, 'Розроблено в')), React.createElement(VerticalSpacer, {\n    spaceWidth: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 41\n    }\n  }), React.createElement(IcoMoonIcon, {\n    style: styles(scales).icon_devseonet,\n    color: app_styles(scales).colors.text.light_grey,\n    size: Math.round(scales.widthScale * 24),\n    name: \"devseonet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 41\n    }\n  })), React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 37\n    }\n  })) : React.createElement(NetworkErrorModal, {\n    isOpened: networkError,\n    closeCallback: clearNetworkError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 31\n    }\n  }))));\n};\n\nexport default AppMenuScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/AppMenuScreen.js"],"names":["React","useContext","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","Context","AppSettingsContext","AuthContext","NavigationEvents","Header","SafeView","Block","Spacer","VerticalSpacer","ButtonSimpleLink","UserInfoBlock","LanguageSwitchersBlock","NetworkErrorModal","translator","styles","app_styles","AppMenuScreen","navigation","state","language","scales","isLoggedIn","unreadNotifications","networkError","logout","getUserNotifications","clearNetworkError","body","content_container","justifyContent","paddingTop","Math","round","heightScale","menu_li","translate","navigate","language_switcher","row_center","made","icon_devseonet","colors","text","light_grey","widthScale"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, {useContext} from 'react';\n//React native\nimport {View, Text} from 'react-native';\n//React-native-vector-icons package\nimport {createIconSetFromIcoMoon} from 'react-native-vector-icons';\nimport icoMoonConfig from '../../selection.json';\n\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Context\nimport {Context as AppSettingsContext} from \"../context/AppSettingsContext\";\nimport {Context as AuthContext} from \"../context/AuthContext\";\n//Navigation Events\nimport {NavigationEvents} from 'react-navigation';\n//Componetns\nimport Header from \"../components/shared/Header\";\nimport {SafeView, Block, Spacer, VerticalSpacer} from \"../components/shared\";\nimport {ButtonSimpleLink} from \"../components/buttons\";\nimport UserInfoBlock from \"../components/auth/UserInfoBlock\";\nimport LanguageSwitchersBlock from \"../components/shared/LanguageSwitchersBlock\";\nimport {NetworkErrorModal} from \"../components/modals\"\n//Localization\nimport translator from \"../translator/translator\";\n//Styles\nimport styles from '../styles/screens/app-menu-screen';\nimport {app_styles} from \"../styles/app_styles\";\n\n\n//----COMPONENT----//\nconst AppMenuScreen = ({navigation}) => {\n    //Data and State\n    const {state: {language, scales}} = useContext(AppSettingsContext);\n    const {state: {isLoggedIn, unreadNotifications, networkError}, logout, getUserNotifications, clearNetworkError} = useContext(AuthContext);\n\n\n    //Template\n    return (\n        <>\n            <SafeView>\n                <NavigationEvents\n                    onWillFocus={() => getUserNotifications()}\n                />\n                <Header\n                    appMenu\n                    backAllowed\n                    navigation={navigation}\n                    noIcons\n                />\n                <View style={styles(scales).body}>\n                    {\n                        !networkError\n                            ? (\n                                <>\n                                    <Spacer spaceHeight={30}/>\n                                    {/* User Info Block */}\n                                    <Block>\n                                        <UserInfoBlock navigation={navigation}/>\n                                    </Block>\n\n                                    <View style={[styles(scales).content_container, {\n                                        justifyContent: isLoggedIn ? 'center' : 'flex-start',\n                                        paddingTop: isLoggedIn ? 0 : Math.round(scales.heightScale * 60)\n                                    }]}>\n                                        <Block>\n                                            {/* Menu List */}\n                                            <View style={styles(scales).menu_li}>\n                                                {\n                                                    isLoggedIn\n                                                        ?\n                                                        (\n                                                            <>\n                                                                <Spacer spaceHeight={10}/>\n                                                                <ButtonSimpleLink\n                                                                    title={translator.translate(language, \"Історія замовлень\")}\n                                                                    callback={() => navigation.navigate('OrdersHistory')}\n                                                                    medium\n                                                                    nounderline\n                                                                />\n                                                                <Spacer spaceHeight={10}/>\n                                                                <ButtonSimpleLink\n                                                                    title={translator.translate(language, \"Повідомлення\")}\n                                                                    callback={() => navigation.navigate('Notifications')}\n                                                                    medium\n                                                                    nounderline\n                                                                    unreadNotifications={unreadNotifications}\n                                                                />\n                                                            </>\n                                                        )\n                                                        : null\n                                                }\n                                                <Spacer spaceHeight={10}/>\n                                                <ButtonSimpleLink\n                                                    title={translator.translate(language, \"Новини\")}\n                                                    callback={() => navigation.navigate('News')}\n                                                    medium\n                                                    nounderline\n                                                />\n                                                <Spacer spaceHeight={10}/>\n                                                <ButtonSimpleLink\n                                                    title={translator.translate(language, \"Про Emma Pizza\")}\n                                                    callback={() => navigation.navigate('Restaurant')}\n                                                    medium\n                                                    nounderline\n                                                />\n                                                <Spacer spaceHeight={10}/>\n                                                <ButtonSimpleLink\n                                                    title={translator.translate(language, \"Положення і умови\")}\n                                                    callback={() => navigation.navigate('TermsAndConditions')}\n                                                    medium\n                                                    nounderline\n                                                />\n                                                <Spacer spaceHeight={10}/>\n                                                <ButtonSimpleLink\n                                                    title={translator.translate(language, \"Контакти\")}\n                                                    callback={() => navigation.navigate('Contacts')}\n                                                    medium\n                                                    nounderline\n                                                />\n                                                <Spacer spaceHeight={30}/>\n                                                {\n                                                    isLoggedIn\n                                                        ? <ButtonSimpleLink\n                                                            title={translator.translate(language, \"Вихід\")}\n                                                            callback={logout}\n                                                            medium\n                                                            nounderline\n                                                        />\n                                                        : null\n                                                }\n                                            </View>\n                                        </Block>\n                                    </View>\n\n                                    {/* Language switcher */}\n                                    <View style={styles(scales).language_switcher}>\n                                        {/*<Block>*/}\n                                            <LanguageSwitchersBlock/>\n                                        {/*</Block>*/}\n                                    </View>\n                                    <View style={app_styles(scales).row_center}>\n                                        <Text\n                                            style={styles(scales).made}>{translator.translate(language, 'Розроблено в')}</Text>\n                                        <VerticalSpacer spaceWidth={8}/>\n                                        <IcoMoonIcon\n                                            style={styles(scales).icon_devseonet}\n                                            color={app_styles(scales).colors.text.light_grey}\n                                            size={Math.round(scales.widthScale * 24)}\n                                            name=\"devseonet\"\n                                        />\n                                    </View>\n                                    <Spacer spaceHeight={10}/>\n                                </>\n                            )\n                            : <NetworkErrorModal\n                                isOpened={networkError}\n                                closeCallback={clearNetworkError}\n                            />\n                    }\n                </View>\n            </SafeView>\n        </>\n    );\n}\n\n\n//----EXPORT----//\nexport default AppMenuScreen;\n"]},"metadata":{},"sourceType":"module"}