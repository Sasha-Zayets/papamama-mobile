{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/components/restaurant/CarouselRestaurant.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SideSwipe from 'react-native-sideswipe';\nimport RestaurantBannerCard from \"./RestaurantBannerCard\";\nimport VerticalSpacer, { Spacer } from \"../shared\";\nimport styles from \"../../styles/components/restaurant/carousel\";\nimport { app_styles } from \"../../styles/app_styles\";\n\nvar CarouselRestaurant = function (_Component) {\n  _inherits(CarouselRestaurant, _Component);\n\n  var _super = _createSuper(CarouselRestaurant);\n\n  function CarouselRestaurant() {\n    var _this;\n\n    _classCallCheck(this, CarouselRestaurant);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentIndex: 0,\n      scales: _this.props.scales,\n      data: _this.props.data\n    };\n\n    _this._populateDots = function () {\n      var dots = _this.state.data.map(function (item, index) {\n        return React.createElement(View, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: [styles(_this.state.scales).dot, {\n            backgroundColor: index === _this.state.currentIndex ? app_styles(_this.state.scales).colors.text.light_grey : app_styles(_this.state.scales).colors.app.white\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }\n        }));\n      });\n\n      return dots;\n    };\n\n    _this.render = function () {\n      var _this$state = _this.state,\n          scales = _this$state.scales,\n          currentIndex = _this$state.currentIndex,\n          data = _this$state.data;\n\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width;\n\n      var cardWidth = width;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, React.createElement(SideSwipe, {\n        index: currentIndex,\n        itemWidth: cardWidth,\n        style: {\n          width: width\n        },\n        data: data,\n        threshold: 90,\n        ItemSeparatorComponent: function ItemSeparatorComponent() {\n          return React.createElement(VerticalSpacer, {\n            spaceWidth: 50,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 51\n            }\n          });\n        },\n        onIndexChange: function onIndexChange(index) {\n          return _this.setState(function () {\n            return {\n              currentIndex: index\n            };\n          });\n        },\n        renderItem: function renderItem(_ref) {\n          var itemIndex = _ref.itemIndex,\n              currentIndex = _ref.currentIndex,\n              item = _ref.item,\n              animatedValue = _ref.animatedValue;\n          return React.createElement(RestaurantBannerCard, {\n            banner: item,\n            index: itemIndex,\n            currentIndex: currentIndex,\n            animatedValue: animatedValue,\n            cardWidth: cardWidth,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }\n          });\n        },\n        useVelocityForIndex: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles(scales).pagination,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, _this._populateDots()));\n    };\n\n    return _this;\n  }\n\n  return CarouselRestaurant;\n}(Component);\n\nexport { CarouselRestaurant as default };","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/restaurant/CarouselRestaurant.js"],"names":["React","Component","SideSwipe","RestaurantBannerCard","VerticalSpacer","Spacer","styles","app_styles","CarouselRestaurant","state","currentIndex","scales","props","data","_populateDots","dots","map","item","index","dot","backgroundColor","colors","text","light_grey","app","white","render","Dimensions","get","width","cardWidth","setState","itemIndex","animatedValue","pagination"],"mappings":"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","sourcesContent":["//React\nimport React, { Component } from 'react';\n//React native\nimport { Dimensions, View, Text, Animated } from 'react-native';\n//Carousel\nimport SideSwipe from 'react-native-sideswipe';\n//Components\nimport RestaurantBannerCard from './RestaurantBannerCard';\nimport VerticalSpacer, { Spacer } from \"../shared\";\n//Styles\nimport styles from '../../styles/components/restaurant/carousel';\nimport { app_styles } from '../../styles/app_styles';\n\n\n\nexport default class CarouselRestaurant extends Component {\n  \n\n    state = {\n        currentIndex: 0,        \n        scales: this.props.scales,\n        data: this.props.data\n    };\n\n    _populateDots = () => {\n        let dots = this.state.data.map((item, index) => {\n            return (\n                <View key={index}>\n                    <View\n                        style={[\n                            styles(this.state.scales).dot,\n                            {\n                                backgroundColor: index === this.state.currentIndex\n                                    ? app_styles(this.state.scales).colors.text.light_grey\n                                    : app_styles(this.state.scales).colors.app.white\n                            }\n                        ]}>\n                    </View>\n                </View>\n            );\n        })\n\n        return dots;\n    }\n\n    render = () => {\n        // center items on screen\n        const { scales, currentIndex, data } = this.state;\n        const { width } = Dimensions.get('window');\n        const cardWidth = width;\n\n\n        return (\n            <View>\n                <SideSwipe\n                    index={currentIndex}\n                    itemWidth={cardWidth}\n                    style={{ width }}\n                    data={data}\n                    threshold={90}\n                    ItemSeparatorComponent={() => <VerticalSpacer spaceWidth={50} />}\n                    onIndexChange={index =>\n                        this.setState(() => ({ currentIndex: index }))\n                    }\n                    renderItem={({ itemIndex, currentIndex, item, animatedValue }) => (\n                        <RestaurantBannerCard\n                            banner={item}\n                            index={itemIndex}\n                            currentIndex={currentIndex}\n                            animatedValue={animatedValue}\n                            cardWidth={cardWidth}\n                        />\n                    )}\n                    useVelocityForIndex={true}\n                />\n                <View style={styles(scales).pagination}>\n                    {\n                        this._populateDots()\n                    }\n                </View>\n\n            </View>\n\n\n        );\n    };\n}"]},"metadata":{},"sourceType":"module"}