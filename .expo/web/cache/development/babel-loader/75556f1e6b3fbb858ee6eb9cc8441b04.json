{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/screens/UpdateAppScreen.js\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer } from \"../components/shared\";\nimport { ButtonPrimary } from \"../components/buttons\";\nimport translator from \"../translator/translator\";\nimport styles from \"../styles/screens/update-app-screen\";\nimport { app_styles } from \"../styles/app_styles\";\n\nvar UpdateAppScreen = function UpdateAppScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language,\n      appSettings = _useContext$state.appSettings;\n\n  var _useState = useState(navigation.getParam(\"message\")),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var handleUpdatePress = function handleUpdatePress() {\n    var androindLink = appSettings.mobileAppAndroid || null;\n    var iosLink = appSettings.mobileAppIOS || null;\n    var URL = Platform.OS === \"ios\" ? iosLink : androindLink;\n    if (!URL) return;\n    Linking.openURL(URL);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"sad\",\n    color: app_styles(scales).app_red,\n    size: Math.round(scales.widthScale * 80),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, React.createElement(Spacer, {\n    spaceHeight: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Oooopppsss!\"), React.createElement(Spacer, {\n    spaceHeight: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).note,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, message), React.createElement(Spacer, {\n    spaceHeight: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }), React.createElement(ButtonPrimary, {\n    title: translator.translate(language, \"Оновити\"),\n    color: app_styles(scales).colors.app.blue,\n    callback: handleUpdatePress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default UpdateAppScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/UpdateAppScreen.js"],"names":["React","useState","useContext","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","Context","AppSettingsContext","Header","SafeView","Block","Spacer","ButtonPrimary","translator","styles","app_styles","UpdateAppScreen","navigation","state","scales","language","appSettings","getParam","message","setMessage","handleUpdatePress","androindLink","mobileAppAndroid","iosLink","mobileAppIOS","URL","Platform","OS","Linking","openURL","body","app_red","Math","round","widthScale","title","note","translate","colors","app","blue"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useState, useContext } from 'react';\n//React native\nimport { View, Linking, Platform, Text } from 'react-native';\n//React-native-vector-icons package\nimport { createIconSetFromIcoMoon } from 'react-native-vector-icons';\nimport icoMoonConfig from '../../selection.json';\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Context\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\n//Componetns\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer } from \"../components/shared\";\nimport { ButtonPrimary } from \"../components/buttons\";\n//Localization\nimport translator from \"../translator/translator\";\n//Styles\nimport styles from '../styles/screens/update-app-screen';\nimport { app_styles } from '../styles/app_styles';\n\n\n\n//----COMPONENT----//\nconst UpdateAppScreen = ({ navigation }) => {\n    //Data and State\n    const { state: { scales, language, appSettings } } = useContext(AppSettingsContext);\n    const [message, setMessage] = useState(navigation.getParam(\"message\"))\n\n    //Hooks and Methods\n    const handleUpdatePress = () => {\n        let androindLink = appSettings.mobileAppAndroid || null;\n        let iosLink = appSettings.mobileAppIOS || null;\n\n        const URL =\n            Platform.OS === \"ios\"\n                ? iosLink\n                : androindLink;\n\n        if (!URL) return;\n        Linking.openURL(URL);\n    }\n\n\n\n    //Template\n    return (\n        <>\n            <SafeView>\n                <View style={styles(scales).body}>\n                    <IcoMoonIcon name=\"sad\" color={app_styles(scales).app_red} size={Math.round(scales.widthScale * 80)} />\n                    <Block>\n                        <Spacer spaceHeight={24} />\n                        <Text style={styles(scales).title}>Oooopppsss!</Text>\n                        <Spacer spaceHeight={6} />\n                        <Text style={styles(scales).note}>{message}</Text>\n                        <Spacer spaceHeight={30} />\n                        <ButtonPrimary\n                            title={translator.translate(language, \"Оновити\")}\n                            color={app_styles(scales).colors.app.blue}\n                            callback={handleUpdatePress}\n                        />\n                    </Block>\n                </View>\n            </SafeView>\n        </>\n    );\n}\n\n\n\n//----EXPORT----//\nexport default UpdateAppScreen;"]},"metadata":{},"sourceType":"module"}