{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/components/menu/IngredientCard.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport { Spacer, VerticalSpacer } from \"../shared\";\nimport styles from \"../../styles/components/menu/ingredient-card\";\nimport { app_styles } from \"../../styles/app_styles\";\nimport translator from \"../../translator/translator\";\n\nvar IngredientCard = function IngredientCard(_ref) {\n  var ingredient = _ref.ingredient,\n      callback = _ref.callback,\n      decreaseOnly = _ref.decreaseOnly;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      ingredientQuantity = _useState2[0],\n      setIngredientQuantity = _useState2[1];\n\n  useEffect(function () {}, []);\n\n  var generateExtraCardStyles = function generateExtraCardStyles() {\n    return {\n      borderColor: isChecked() ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.light_grey\n    };\n  };\n\n  var isChecked = function isChecked() {\n    return !!(ingredient.checked && ingredient.checked === 1);\n  };\n\n  var isIncreasable = function isIncreasable() {\n    return parseInt(ingredient.price) !== 0;\n  };\n\n  var ingredientQuantityHandler = function ingredientQuantityHandler() {\n    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '-';\n    var newQuantity;\n\n    if (type === '-') {\n      if (ingredientQuantity <= 1) return;\n      newQuantity = ingredientQuantity - 1;\n      setIngredientQuantity(newQuantity);\n      callback(ingredient.id, newQuantity, type, true);\n    } else {\n      if (decreaseOnly) return;\n      newQuantity = ingredientQuantity + 1;\n      setIngredientQuantity(newQuantity);\n      callback(ingredient.id, newQuantity, type, true);\n    }\n  };\n\n  var handleCallBack = function handleCallBack() {\n    if (isChecked()) {\n      callback(ingredient.id, ingredientQuantity);\n      setIngredientQuantity(1);\n    } else {\n      if (decreaseOnly) return;\n      callback(ingredient.id, ingredientQuantity);\n    }\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles(scales).card_container,\n    onPress: function onPress() {\n      return handleCallBack();\n    },\n    activeOpacity: .8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [styles(scales).card_inner_container, generateExtraCardStyles()],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, isChecked() ? React.createElement(View, {\n    style: styles(scales).uncheck_btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"cancel\",\n    color: app_styles(scales).colors.app.white,\n    size: Math.round(scales.widthScale * 6),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 41\n    }\n  })) : React.createElement(VerticalSpacer, {\n    spaceWidth: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 35\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, ingredient.price, \" \", translator.translate(language, 'грн'))), React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles(scales).img_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: ingredient.image\n    },\n    style: styles(scales).img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  })), React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, ingredient.name)))), isChecked() && isIncreasable() ? React.createElement(View, {\n    style: styles(scales).manipulators_wrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: styles(scales).manipulators_block,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles(scales).button,\n    onPress: function onPress() {\n      return ingredientQuantityHandler();\n    },\n    activeOpacity: 0.8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"minus\",\n    color: app_styles(scales).colors.text.white,\n    size: Math.round(scales.widthScale * 14),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles(scales).ingredient_quantity_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).ingredient_quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, ingredientQuantity)), React.createElement(TouchableOpacity, {\n    style: styles(scales).button,\n    onPress: function onPress() {\n      return ingredientQuantityHandler(\"+\");\n    },\n    activeOpacity: 0.8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"plus\",\n    color: app_styles(scales).colors.text.white,\n    size: Math.round(scales.widthScale * 14),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  })))) : null);\n};\n\nexport default IngredientCard;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/menu/IngredientCard.js"],"names":["React","useContext","useEffect","useState","Context","AppSettingsContext","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","Spacer","VerticalSpacer","styles","app_styles","translator","IngredientCard","ingredient","callback","decreaseOnly","state","scales","language","ingredientQuantity","setIngredientQuantity","generateExtraCardStyles","borderColor","isChecked","colors","app","blue","text","light_grey","checked","isIncreasable","parseInt","price","ingredientQuantityHandler","type","newQuantity","id","handleCallBack","card_container","card_inner_container","row_between","uncheck_btn","white","Math","round","widthScale","translate","img_container","uri","image","img","name","manipulators_wrap","manipulators_block","button","ingredient_quantity_container","ingredient_quantity"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext, useEffect, useState } from 'react';\n//React native\nimport { View, Text, TouchableOpacity, Image, Alert } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//React-native-vector-icons package\nimport { createIconSetFromIcoMoon } from 'react-native-vector-icons';\nimport icoMoonConfig from '../../../selection.json';\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Components\nimport { Spacer, VerticalSpacer } from '../shared';\n//Styles\nimport styles from '../../styles/components/menu/ingredient-card';\nimport { app_styles } from '../../styles/app_styles';\n//Localization\nimport translator from \"../../translator/translator\";\n\n\n\n//----COMPONENT----//\nconst IngredientCard = ({ ingredient, callback, decreaseOnly }) => {\n    //Data and State\n    const { state: { scales, language } } = useContext(AppSettingsContext);\n    const [ingredientQuantity, setIngredientQuantity] = useState(1);\n\n\n\n\n    //Hooks and Methods\n    useEffect(() => {\n    }, [])\n\n\n    const generateExtraCardStyles = () => {\n        return {\n            borderColor: isChecked() ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.light_grey,\n        }\n    }\n\n\n    const isChecked = () => {\n         return !!(ingredient.checked && ingredient.checked === 1)\n    };\n\n    const isIncreasable = () => parseInt(ingredient.price) !== 0;\n\n\n    const ingredientQuantityHandler = (type = '-') => {\n        let newQuantity;\n        if(type === '-'){\n            if(ingredientQuantity <= 1) return;\n            newQuantity = ingredientQuantity - 1;\n            setIngredientQuantity(newQuantity);\n            callback(ingredient.id, newQuantity, type, true)\n        } else {\n            if(decreaseOnly) return;\n            newQuantity = ingredientQuantity + 1;\n            setIngredientQuantity(newQuantity);\n            callback(ingredient.id, newQuantity, type, true)\n        }\n    }\n\n\n    const handleCallBack = () => {\n        if(isChecked()){\n            callback(ingredient.id, ingredientQuantity)\n            setIngredientQuantity(1)\n        } else {\n            if(decreaseOnly) return;\n            callback(ingredient.id, ingredientQuantity)\n        }\n    }\n\n\n\n\n    //Template\n    return (\n        <View>\n            <TouchableOpacity style={styles(scales).card_container} onPress={() => handleCallBack()} activeOpacity={.8}>\n                <View style={[styles(scales).card_inner_container, generateExtraCardStyles()]}>\n                    <View style={app_styles(scales).row_between}>\n                        {\n                            isChecked()\n                                ? (\n                                    <View style={styles(scales).uncheck_btn}>\n                                        <IcoMoonIcon name=\"cancel\" color={app_styles(scales).colors.app.white} size={Math.round(scales.widthScale * 6)} />\n                                    </View>\n                                )\n                                : <VerticalSpacer spaceWidth={24} />\n                        }\n                        <Text style={styles(scales).price}>{ingredient.price} {translator.translate(language, 'грн')}</Text>\n                    </View>\n                    <Spacer spaceHeight={10} />\n                    <View style={styles(scales).img_container}>\n                        <Image\n                            source={{ uri: ingredient.image }}\n                            style={styles(scales).img}\n                        />\n                    </View>\n                    <Spacer spaceHeight={10} />\n                    <View>\n                        <Text style={styles(scales).name}>{ingredient.name}</Text>\n                    </View>\n                </View>\n            </TouchableOpacity>\n            {\n                isChecked() && isIncreasable()\n                    ? (\n                        <View style={styles(scales).manipulators_wrap}>\n                            <View style={styles(scales).manipulators_block}>\n                            <TouchableOpacity style={styles(scales).button} onPress={() => ingredientQuantityHandler()} activeOpacity={0.8}>\n                                <IcoMoonIcon name=\"minus\" color={app_styles(scales).colors.text.white} size={Math.round(scales.widthScale * 14)} />\n                            </TouchableOpacity>\n                            <View style={styles(scales).ingredient_quantity_container}>\n                                <Text style={styles(scales).ingredient_quantity}>{ingredientQuantity}</Text>\n                            </View>\n                            <TouchableOpacity style={styles(scales).button} onPress={() => ingredientQuantityHandler(\"+\")} activeOpacity={0.8}>\n                                <IcoMoonIcon name=\"plus\" color={app_styles(scales).colors.text.white} size={Math.round(scales.widthScale * 14)} />\n                            </TouchableOpacity>\n                        </View>\n                        </View>\n                    )\n                    : null\n\n            }\n        </View>\n    );\n}\n\n\n\n\n//----EXPORT----//\nexport default IngredientCard;"]},"metadata":{},"sourceType":"module"}