{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/screens/RestaurantScreen.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer, DataLoadingIndicator, VerticalSpacer, IntelligentImage, HorizontalDivider } from \"../components/shared\";\nimport { ButtonOrder } from \"../components/buttons\";\nimport { MenuModal, NetworkErrorModal } from \"../components/modals\";\nimport CarouselRestaurant from \"../components/restaurant/CarouselRestaurant\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport { NavigationEvents } from 'react-navigation';\nimport HTML from \"react-native-render-html\";\nimport { notEmptyString } from \"../helpers/helpers\";\nimport translator from \"../translator/translator\";\nimport styles from \"../styles/screens/restaurant-screen\";\nimport { app_styles } from \"../styles/app_styles\";\n\nvar RestaurantScreen = function RestaurantScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language,\n      emmaPizzaRestaurant = _useContext$state.emmaPizzaRestaurant,\n      emmaPizzaRestaurantMetaData = _useContext$state.emmaPizzaRestaurantMetaData,\n      settingsNetworkError = _useContext$state.settingsNetworkError,\n      screen_width = _useContext$state.screen_width,\n      contacts = _useContext$state.contacts,\n      getEmmaPizzaRestaurant = _useContext.getEmmaPizzaRestaurant,\n      clearSettingsNetworkError = _useContext.clearSettingsNetworkError;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      bodyTextStyles = _useState2[0],\n      setBodyTextStyles = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      paragraphStyles = _useState4[0],\n      setParagraphStyles = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showMenuModal = _useState6[0],\n      setShowMenuModal = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isDataLoading = _useState8[0],\n      setIsDataLoading = _useState8[1];\n\n  useEffect(function () {\n    setBodyTextStyles({\n      fontFamily: app_styles(scales).fonts.weight.regular,\n      fontSize: Math.round(scales.fontScale * 14),\n      color: app_styles(scales).colors.text.primary\n    });\n    setParagraphStyles({\n      textAlign: \"justify\",\n      marginBottom: Math.round(scales.heightScale * 15)\n    });\n  }, [emmaPizzaRestaurant]);\n\n  var getRestaurant = function getRestaurant() {\n    return _regeneratorRuntime.async(function getRestaurant$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsDataLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getEmmaPizzaRestaurant());\n\n          case 3:\n            setIsDataLoading(false);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleFocus = function handleFocus() {\n    return _regeneratorRuntime.async(function handleFocus$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(!Object.keys(emmaPizzaRestaurant).length || emmaPizzaRestaurantMetaData.language !== language)) {\n              _context2.next = 3;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getRestaurant());\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var generateGalleryCard = function generateGalleryCard(item) {\n    return React.createElement(View, {\n      style: styles(scales).card_container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, React.createElement(IntelligentImage, {\n      thumbnailStyles: styles(scales).thumbnail_image,\n      thumbnailSource: item.image_preview,\n      fullSizeSource: item.image,\n      fullSizeStyles: styles(scales).full_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  var hasBanner = function hasBanner() {\n    return !!(emmaPizzaRestaurant && emmaPizzaRestaurant.top_banner && emmaPizzaRestaurant.top_banner.images && emmaPizzaRestaurant.top_banner.images.length);\n  };\n\n  var hasMenu = function hasMenu() {\n    return !!(emmaPizzaRestaurant.page_data && emmaPizzaRestaurant.page_data.menu_banner && emmaPizzaRestaurant.page_data.menu_banner.images && emmaPizzaRestaurant.page_data.menu_banner.images.length);\n  };\n\n  var hasGallery = function hasGallery() {\n    return !!(emmaPizzaRestaurant && emmaPizzaRestaurant.gallery && emmaPizzaRestaurant.gallery.images && emmaPizzaRestaurant.gallery.images.length);\n  };\n\n  var filteredGallery = function filteredGallery() {\n    if (hasGallery()) {\n      return emmaPizzaRestaurant.gallery.images.filter(function (item) {\n        var needle = 'image/placeholder.png';\n        return !item.image.includes(needle);\n      });\n    }\n  };\n\n  var hasAtLeLeastOneSocial = function hasAtLeLeastOneSocial() {\n    return notEmptyString(emmaPizzaRestaurant.facebook) || notEmptyString(emmaPizzaRestaurant.instagram) || notEmptyString(emmaPizzaRestaurant.youtube) || notEmptyString(emmaPizzaRestaurant.tripadvisor);\n  };\n\n  var handleUrl = function handleUrl(event, href) {\n    Linking.openURL(href);\n  };\n\n  var makeCall = function makeCall() {\n    var cleanedPhoneNumber = emmaPizzaRestaurant.phone.replace(/\\D||\\s/g, \"\");\n\n    if (cleanedPhoneNumber.indexOf('38') === 0) {\n      cleanedPhoneNumber = cleanedPhoneNumber.substring(2);\n    }\n\n    var link = Platform.OS === 'ios' ? \"tel://+38\" + cleanedPhoneNumber : \"tel:+38\" + cleanedPhoneNumber;\n    Linking.openURL(link);\n  };\n\n  var sendEmail = function sendEmail() {\n    var address = contacts.email;\n    if (!notEmptyString(address)) return;\n    var link = \"mailto: \" + contacts.email;\n    return Linking.openURL(link);\n  };\n\n  var openMap = function openMap() {\n    var link = emmaPizzaRestaurant.gmap;\n    return notEmptyString(link) ? Linking.openURL(link.trim()) : false;\n  };\n\n  var handleLink = function handleLink(link, type) {\n    var urlParts, username, url, _urlParts, chanelName, _url;\n\n    return _regeneratorRuntime.async(function handleLink$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(type === 'instagram')) {\n              _context3.next = 15;\n              break;\n            }\n\n            urlParts = link.split('/');\n            username = urlParts[urlParts.length - 1];\n            url = \"instagram://user?username=\" + username;\n            _context3.prev = 4;\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(Linking.openURL(url));\n\n          case 7:\n            _context3.next = 13;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](4);\n            _context3.next = 13;\n            return _regeneratorRuntime.awrap(Linking.openURL(link.trim()));\n\n          case 13:\n            _context3.next = 32;\n            break;\n\n          case 15:\n            if (!(type === 'youtube')) {\n              _context3.next = 30;\n              break;\n            }\n\n            _urlParts = link.split('/');\n            chanelName = _urlParts[_urlParts.length - 1];\n            _url = \"youtube://chanel=\" + chanelName;\n            _context3.prev = 19;\n            _context3.next = 22;\n            return _regeneratorRuntime.awrap(Linking.openURL(_url));\n\n          case 22:\n            _context3.next = 28;\n            break;\n\n          case 24:\n            _context3.prev = 24;\n            _context3.t1 = _context3[\"catch\"](19);\n            _context3.next = 28;\n            return _regeneratorRuntime.awrap(Linking.openURL(link.trim()));\n\n          case 28:\n            _context3.next = 32;\n            break;\n\n          case 30:\n            _context3.next = 32;\n            return _regeneratorRuntime.awrap(Linking.openURL(link.trim()));\n\n          case 32:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[4, 9], [19, 24]], Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, React.createElement(NavigationEvents, {\n    onWillFocus: handleFocus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }), React.createElement(Header, {\n    title: translator.translate(language, 'Про Emma Pizza'),\n    navigation: navigation,\n    backAllowed: true,\n    noIcons: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, !isDataLoading ? !settingsNetworkError ? Object.keys(emmaPizzaRestaurant).length ? React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    bounces: false,\n    keyboardShouldPersistTaps: 'always',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 49\n    }\n  }, React.createElement(HorizontalDivider, {\n    height: 1,\n    color: app_styles(scales).colors.text.grey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 53\n    }\n  }), hasBanner() ? React.createElement(React.Fragment, null, React.createElement(CarouselRestaurant, {\n    scales: scales,\n    data: emmaPizzaRestaurant.top_banner.images,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 69\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 69\n    }\n  })) : null, emmaPizzaRestaurant.page_data && notEmptyString(emmaPizzaRestaurant.page_data.description1) ? React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 65\n    }\n  }, React.createElement(HTML, {\n    key: emmaPizzaRestaurant.page_data,\n    baseFontStyle: bodyTextStyles,\n    html: emmaPizzaRestaurant.page_data.description1 || '<p></p>',\n    onLinkPress: function onLinkPress(event, href) {\n      return handleUrl(event, href);\n    },\n    imagesMaxWidth: screen_width,\n    tagsStyles: {\n      p: paragraphStyles\n    },\n    listsPrefixesRenderers: {\n      ol: function ol() {\n        return React.createElement(Text, {\n          style: styles(scales).li_prefix,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 88\n          }\n        });\n      },\n      ul: function ul() {\n        return React.createElement(Text, {\n          style: styles(scales).li_prefix,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 88\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 69\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 69\n    }\n  })) : null, hasGallery() ? React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles(scales).title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 69\n    }\n  }, translator.translate(language, \"Галерея\")), React.createElement(Spacer, {\n    spaceHeight: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 69\n    }\n  }), React.createElement(FlatList, {\n    contentContainerStyle: {\n      paddingHorizontal: Math.round(scales.widthScale * 16)\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(image) {\n      return \"key\" + image.id;\n    },\n    data: filteredGallery(),\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return generateGalleryCard(item);\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(VerticalSpacer, {\n        spaceWidth: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 103\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 69\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 69\n    }\n  })) : null, emmaPizzaRestaurant.page_data && notEmptyString(emmaPizzaRestaurant.page_data.description2) ? React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 65\n    }\n  }, React.createElement(HTML, {\n    baseFontStyle: bodyTextStyles,\n    html: emmaPizzaRestaurant.page_data.description2 || '<p></p>',\n    onLinkPress: function onLinkPress(event, href) {\n      return handleUrl(event, href);\n    },\n    imagesMaxWidth: screen_width,\n    listsPrefixesRenderers: {\n      ol: function ol() {\n        return React.createElement(Text, {\n          style: styles(scales).li_prefix,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 88\n          }\n        });\n      },\n      ul: function ul() {\n        return React.createElement(Text, {\n          style: styles(scales).li_prefix,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 88\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 69\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 69\n    }\n  })) : null, hasMenu() ? React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 65\n    }\n  }, React.createElement(ButtonOrder, {\n    color: app_styles(scales).colors.app.blue,\n    icon: true,\n    iconName: \"menu2\",\n    iconSize: 18,\n    callback: function callback() {\n      return setShowMenuModal(true);\n    },\n    title: translator.translate(language, \"Переглянути меню\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 69\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 69\n    }\n  })) : null, React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 53\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: Math.round(scales.widthScale * 30),\n      paddingVertical: Math.round(scales.heightScale * 15)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 57\n    }\n  }, React.createElement(ButtonOrder, {\n    callback: function callback() {\n      return navigation.navigate('Menu', {\n        from_service: true\n      });\n    },\n    title: translator.translate(language, \"Перейти до меню\"),\n    icon: true,\n    iconName: \"menu1\",\n    iconSize: 19,\n    color: app_styles(scales).colors.app.blue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 61\n    }\n  })), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 57\n    }\n  }), hasAtLeLeastOneSocial() ? React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles(scales).title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 73\n    }\n  }, translator.translate(language, \"Ми в соцмережах\")), React.createElement(Spacer, {\n    spaceHeight: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 73\n    }\n  }), React.createElement(View, {\n    style: [app_styles(scales).row_center, {\n      paddingHorizontal: Math.round(scales.widthScale * 100)\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 73\n    }\n  }, notEmptyString(emmaPizzaRestaurant.facebook) ? React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles(scales).social_btn,\n    onPress: function onPress() {\n      return handleLink(emmaPizzaRestaurant.facebook, 'facebook');\n    },\n    activeOpacity: .8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 93\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"facebook-app-logo\",\n    color: app_styles(scales).colors.text.grey,\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 97\n    }\n  }))) : null, notEmptyString(emmaPizzaRestaurant.instagram) ? React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles(scales).social_btn,\n    onPress: function onPress() {\n      return handleLink(emmaPizzaRestaurant.instagram, 'inastagram');\n    },\n    activeOpacity: .8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 93\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"social-media\",\n    color: app_styles(scales).colors.text.grey,\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 97\n    }\n  }))) : null, notEmptyString(emmaPizzaRestaurant.youtube) ? React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles(scales).social_btn,\n    onPress: function onPress() {\n      return handleLink(emmaPizzaRestaurant.youtube, 'youtube');\n    },\n    activeOpacity: .8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 93\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"youtube\",\n    color: app_styles(scales).colors.text.grey,\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 97\n    }\n  }))) : null, notEmptyString(emmaPizzaRestaurant.tripadvisor) ? React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles(scales).social_btn,\n    onPress: function onPress() {\n      return handleLink(emmaPizzaRestaurant.tripadvisor, 'tripadvisor');\n    },\n    activeOpacity: .8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 93\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"tripadvisor-seeklogocom\",\n    color: app_styles(scales).colors.text.grey,\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 97\n    }\n  }))) : null), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 73\n    }\n  })) : null), React.createElement(View, {\n    style: styles(scales).contacts_block,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 53\n    }\n  }, notEmptyString(emmaPizzaRestaurant.schedule) ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 73\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).contact_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 73\n    }\n  }, translator.translate(language, 'Графік роботи')), React.createElement(Spacer, {\n    spaceHeight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 73\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 73\n    }\n  }, React.createElement(View, {\n    style: styles(scales).icon_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 77\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"wall-clock\",\n    color: app_styles(scales).colors.app.white,\n    size: Math.round(scales.widthScale * 16),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 81\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 77\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 81\n    }\n  }, emmaPizzaRestaurant.schedule)))) : null, notEmptyString(emmaPizzaRestaurant.address) ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 73\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).contact_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 73\n    }\n  }, translator.translate(language, 'Адреса')), React.createElement(Spacer, {\n    spaceHeight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 73\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 73\n    }\n  }, React.createElement(View, {\n    style: styles(scales).icon_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 77\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"pin\",\n    color: app_styles(scales).colors.app.white,\n    size: Math.round(scales.widthScale * 17),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 81\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: openMap,\n    activeOpacity: .7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 77\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 81\n    }\n  }, emmaPizzaRestaurant.address)))) : null, notEmptyString(emmaPizzaRestaurant.phone) ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 73\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).contact_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 73\n    }\n  }, translator.translate(language, 'Телефон')), React.createElement(Spacer, {\n    spaceHeight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 73\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 73\n    }\n  }, React.createElement(View, {\n    style: styles(scales).icon_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 77\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"phone-alt\",\n    color: app_styles(scales).colors.app.white,\n    size: Math.round(scales.widthScale * 16),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 81\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: makeCall,\n    activeOpacity: .7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 77\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 81\n    }\n  }, emmaPizzaRestaurant.phone)))) : null, notEmptyString(contacts.email) ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 73\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).contact_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 73\n    }\n  }, \"Email\"), React.createElement(Spacer, {\n    spaceHeight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 73\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 73\n    }\n  }, React.createElement(View, {\n    style: styles(scales).icon_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 77\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"envelope\",\n    color: app_styles(scales).colors.app.light_black,\n    size: Math.round(scales.widthScale * 16),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 81\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: sendEmail,\n    activeOpacity: .7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 77\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 81\n    }\n  }, contacts.email)))) : null)) : null : React.createElement(NetworkErrorModal, {\n    isOpened: settingsNetworkError,\n    closeCallback: clearSettingsNetworkError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 39\n    }\n  }) : React.createElement(DataLoadingIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 31\n    }\n  }))), hasMenu() ? React.createElement(MenuModal, {\n    menu: restaurant.menu_banner,\n    isOpened: showMenuModal,\n    closeCallback: function closeCallback() {\n      return setShowMenuModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 23\n    }\n  }) : null);\n};\n\nexport default RestaurantScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/RestaurantScreen.js"],"names":["React","useEffect","useState","useContext","Context","AppSettingsContext","Header","SafeView","Block","Spacer","DataLoadingIndicator","VerticalSpacer","IntelligentImage","HorizontalDivider","ButtonOrder","MenuModal","NetworkErrorModal","CarouselRestaurant","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","NavigationEvents","HTML","notEmptyString","translator","styles","app_styles","RestaurantScreen","navigation","state","scales","language","emmaPizzaRestaurant","emmaPizzaRestaurantMetaData","settingsNetworkError","screen_width","contacts","getEmmaPizzaRestaurant","clearSettingsNetworkError","bodyTextStyles","setBodyTextStyles","paragraphStyles","setParagraphStyles","showMenuModal","setShowMenuModal","isDataLoading","setIsDataLoading","fontFamily","fonts","weight","regular","fontSize","Math","round","fontScale","color","colors","text","primary","textAlign","marginBottom","heightScale","getRestaurant","handleFocus","Object","keys","length","generateGalleryCard","item","card_container","thumbnail_image","image_preview","image","full_image","hasBanner","top_banner","images","hasMenu","page_data","menu_banner","hasGallery","gallery","filteredGallery","filter","needle","includes","hasAtLeLeastOneSocial","facebook","instagram","youtube","tripadvisor","handleUrl","event","href","Linking","openURL","makeCall","cleanedPhoneNumber","phone","replace","indexOf","substring","link","Platform","OS","sendEmail","address","email","openMap","gmap","trim","handleLink","type","urlParts","split","username","url","chanelName","translate","body","grey","description1","p","ol","li_prefix","ul","title","paddingHorizontal","widthScale","id","description2","app","blue","paddingVertical","navigate","from_service","row_center","social_btn","contacts_block","schedule","contact_title","row_start","icon_container","white","light_black","restaurant"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, {useEffect, useState, useContext} from 'react';\n//React native\nimport {View, Text, TouchableOpacity, ScrollView, FlatList, Image, Linking, YellowBox} from 'react-native';\n//Context\nimport {Context as AppSettingsContext} from \"../context/AppSettingsContext\";\n//Componetns\nimport Header from \"../components/shared/Header\";\nimport {\n    SafeView,\n    Block,\n    Spacer,\n    DataLoadingIndicator,\n    VerticalSpacer,\n    IntelligentImage,\n    HorizontalDivider\n} from \"../components/shared\";\nimport {ButtonOrder} from \"../components/buttons\";\nimport {MenuModal, NetworkErrorModal} from \"../components/modals\";\nimport CarouselRestaurant from \"../components/restaurant/CarouselRestaurant\";\n//React-native-vector-icons package\nimport {createIconSetFromIcoMoon} from 'react-native-vector-icons';\nimport icoMoonConfig from '../../selection.json';\n\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Navigation Events\nimport {NavigationEvents} from 'react-navigation';\n//HTML-render\nimport HTML from \"react-native-render-html\";\n//Helpers\nimport {notEmptyString} from \"../helpers/helpers\";\n//Localization\nimport translator from \"../translator/translator\";\n//Styles\nimport styles from '../styles/screens/restaurant-screen';\nimport {app_styles} from '../styles/app_styles';\n\n\n//----COMPONENT----//\nconst RestaurantScreen = ({navigation}) => {\n    //Data and State\n    const {state: {scales, language, emmaPizzaRestaurant, emmaPizzaRestaurantMetaData, settingsNetworkError, screen_width, contacts}, getEmmaPizzaRestaurant, clearSettingsNetworkError} = useContext(AppSettingsContext);\n    const [bodyTextStyles, setBodyTextStyles] = useState({});\n    const [paragraphStyles, setParagraphStyles] = useState({});\n    const [showMenuModal, setShowMenuModal] = useState(false);\n    const [isDataLoading, setIsDataLoading] = useState(false);\n\n\n    //Hooks and Methods\n    useEffect(() => {\n        \n        setBodyTextStyles({\n            fontFamily: app_styles(scales).fonts.weight.regular,\n            fontSize: Math.round(scales.fontScale * 14),\n            color: app_styles(scales).colors.text.primary\n        });\n        setParagraphStyles({\n            textAlign: \"justify\",\n            marginBottom: Math.round(scales.heightScale * 15)\n        });\n\n\n    }, [emmaPizzaRestaurant]);\n\n\n    const getRestaurant = async () => {\n        setIsDataLoading(true);\n        await getEmmaPizzaRestaurant();\n        setIsDataLoading(false);\n    }\n\n    const handleFocus = async () => {\n        if (!Object.keys(emmaPizzaRestaurant).length || emmaPizzaRestaurantMetaData.language !== language) {\n            await getRestaurant();\n        }\n    }\n\n\n    const generateGalleryCard = (item) => {\n        return (\n            <View style={styles(scales).card_container}>\n                <IntelligentImage\n                    thumbnailStyles={styles(scales).thumbnail_image}\n                    thumbnailSource={item.image_preview}\n                    fullSizeSource={item.image}\n                    fullSizeStyles={styles(scales).full_image}\n                />\n            </View>\n        );\n    }\n\n\n    const hasBanner = () => {\n        return !!(emmaPizzaRestaurant && emmaPizzaRestaurant.top_banner && emmaPizzaRestaurant.top_banner.images && emmaPizzaRestaurant.top_banner.images.length)\n    }\n\n    const hasMenu = () => {\n        return !!(emmaPizzaRestaurant.page_data && emmaPizzaRestaurant.page_data.menu_banner && emmaPizzaRestaurant.page_data.menu_banner.images && emmaPizzaRestaurant.page_data.menu_banner.images.length)\n    }\n\n    const hasGallery = () => {\n        return !!(emmaPizzaRestaurant && emmaPizzaRestaurant.gallery && emmaPizzaRestaurant.gallery.images && emmaPizzaRestaurant.gallery.images.length)\n    }\n\n    const filteredGallery = () => {\n        if(hasGallery()){\n            return emmaPizzaRestaurant.gallery.images.filter(item => {\n                let needle = 'image/placeholder.png';\n                return !item.image.includes(needle);\n            });\n        }\n    }\n\n    const hasAtLeLeastOneSocial = () => {\n        return notEmptyString(emmaPizzaRestaurant.facebook)\n            || notEmptyString(emmaPizzaRestaurant.instagram)\n            || notEmptyString(emmaPizzaRestaurant.youtube)\n            || notEmptyString(emmaPizzaRestaurant.tripadvisor)\n    }\n\n    const handleUrl = (event, href) => {\n        Linking.openURL(href);\n    }\n\n\n\n    const makeCall = () => {\n        let cleanedPhoneNumber = emmaPizzaRestaurant.phone.replace(/\\D||\\s/g, \"\");\n\n        if (cleanedPhoneNumber.indexOf('38') === 0) {\n            cleanedPhoneNumber = cleanedPhoneNumber.substring(2);\n        }\n        const link = Platform.OS === 'ios' ? `tel://+38${cleanedPhoneNumber}` : `tel:+38${cleanedPhoneNumber}`;\n        Linking.openURL(link)\n    }\n\n    const sendEmail = () => {\n        let address = contacts.email;\n        if (!notEmptyString(address)) return;\n        let link = `mailto: ${contacts.email}`\n        return Linking.openURL(link)\n    }\n\n    const openMap = () => {\n        let link = emmaPizzaRestaurant.gmap;\n        return notEmptyString(link) ? Linking.openURL(link.trim()) : false;\n    }\n\n    const handleLink = async (link, type) => {\n        if (type === 'instagram') {\n            let urlParts = link.split('/');\n            let username = urlParts[urlParts.length - 1];\n            let url = `instagram://user?username=${username}`;\n            try {\n                await Linking.openURL(url)\n            } catch (err) {\n                await Linking.openURL(link.trim())\n            }\n        } else if (type === 'youtube') {\n            let urlParts = link.split('/');\n            let chanelName = urlParts[urlParts.length - 1];\n            let url = `youtube://chanel=${chanelName}`;\n            try {\n                await Linking.openURL(url)\n            } catch (err) {\n                await Linking.openURL(link.trim())\n            }\n        } else {\n            await Linking.openURL(link.trim())\n        }\n\n    }\n\n\n\n\n\n    //Template\n    return (\n        <>\n            <SafeView>\n                <NavigationEvents\n                    onWillFocus={handleFocus}\n                />\n                <Header\n                    title={translator.translate(language, 'Про Emma Pizza')}\n                    navigation={navigation}\n                    backAllowed\n                    noIcons\n                />\n                <View style={styles(scales).body}>\n                    {\n                        !isDataLoading\n                            ? (\n                                !settingsNetworkError\n                                    ? (\n                                        Object.keys(emmaPizzaRestaurant).length\n                                            ? (\n                                                <ScrollView showsVerticalScrollIndicator={false}\n                                                            bounces={false}\n                                                            keyboardShouldPersistTaps={'always'}\n                                                >\n                                                    <HorizontalDivider height={1} color={app_styles(scales).colors.text.grey} />\n                                                    {\n                                                        hasBanner()\n                                                            ? (\n                                                                <>\n                                                                    <CarouselRestaurant\n                                                                        scales={scales}\n                                                                        data={emmaPizzaRestaurant.top_banner.images}\n                                                                    />\n                                                                    <Spacer spaceHeight={20}/>\n                                                                </>\n                                                            )\n                                                            : null\n                                                    }\n                                                    {\n                                                        emmaPizzaRestaurant.page_data && notEmptyString(emmaPizzaRestaurant.page_data.description1)\n                                                            ? (\n                                                                <Block>\n                                                                    <HTML\n                                                                        key={emmaPizzaRestaurant.page_data}\n                                                                        baseFontStyle={bodyTextStyles}\n                                                                        html={emmaPizzaRestaurant.page_data.description1 || '<p></p>'}\n                                                                        onLinkPress={(event, href) => handleUrl(event, href)}\n                                                                        imagesMaxWidth={screen_width}\n                                                                        tagsStyles={{ p: paragraphStyles }}\n                                                                        listsPrefixesRenderers={{\n                                                                            ol: () => {\n                                                                                return <Text style={styles(scales).li_prefix}></Text>\n                                                                            },\n                                                                            ul: () => {\n                                                                                return <Text style={styles(scales).li_prefix}></Text>\n                                                                            },\n                                                                        }}\n                                                                    />\n                                                                    <Spacer spaceHeight={20}/>\n                                                                </Block>\n                                                            )\n                                                            : null\n                                                    }\n                                                    {\n                                                        hasGallery()\n                                                            ? (\n                                                                <>\n                                                                    <Text\n                                                                        style={styles(scales).title}>{translator.translate(language, \"Галерея\")}</Text>\n                                                                    <Spacer spaceHeight={15}/>\n                                                                    <FlatList\n                                                                        contentContainerStyle={{paddingHorizontal: Math.round(scales.widthScale * 16)}}\n                                                                        horizontal\n                                                                        showsHorizontalScrollIndicator={false}\n                                                                        keyExtractor={image => \"key\" + image.id}\n                                                                        data={filteredGallery()}\n                                                                        renderItem={({item}) => generateGalleryCard(item)}\n                                                                        ItemSeparatorComponent={() => <VerticalSpacer spaceWidth={15}/>}\n                                                                    />\n                                                                    <Spacer spaceHeight={20}/>\n                                                                </>\n                                                            )\n                                                            : null\n                                                    }\n                                                    {\n                                                        emmaPizzaRestaurant.page_data && notEmptyString(emmaPizzaRestaurant.page_data.description2)\n                                                            ? (\n                                                                <Block>\n                                                                    <HTML\n                                                                        baseFontStyle={bodyTextStyles}\n                                                                        html={emmaPizzaRestaurant.page_data.description2  || '<p></p>'}\n                                                                        onLinkPress={(event, href) => handleUrl(event, href)}\n                                                                        imagesMaxWidth={screen_width}\n                                                                        listsPrefixesRenderers={{\n                                                                            ol: () => {\n                                                                                return <Text style={styles(scales).li_prefix}></Text>\n                                                                            },\n                                                                            ul: () => {\n                                                                                return <Text style={styles(scales).li_prefix}></Text>\n                                                                            },\n                                                                        }}\n                                                                    />\n                                                                    <Spacer spaceHeight={20}/>\n                                                                </Block>\n                                                            )\n                                                            : null\n                                                    }\n                                                    {\n                                                        hasMenu()\n                                                            ? (\n                                                                <Block>\n                                                                    <ButtonOrder\n                                                                        color={app_styles(scales).colors.app.blue}\n                                                                        icon\n                                                                        iconName=\"menu2\"\n                                                                        iconSize={18}\n                                                                        callback={() => setShowMenuModal(true)}\n                                                                        title={translator.translate(language, \"Переглянути меню\")}\n                                                                    />\n                                                                    <Spacer spaceHeight={20}/>\n                                                                </Block>\n                                                            )\n                                                            : null\n                                                    }\n                                                    <Block>\n                                                        <View style={{paddingHorizontal: Math.round(scales.widthScale * 30), paddingVertical: Math.round(scales.heightScale *15)}}>\n                                                            <ButtonOrder\n                                                                callback={() => navigation.navigate('Menu', {from_service: true})}\n                                                                title={translator.translate(language, \"Перейти до меню\")}\n                                                                icon\n                                                                iconName=\"menu1\"\n                                                                iconSize={19}\n                                                                color={app_styles(scales).colors.app.blue}\n                                                            />\n                                                        </View>\n                                                        <Spacer spaceHeight={20}/>\n                                                        {\n                                                            hasAtLeLeastOneSocial()\n                                                                ? (\n                                                                    <>\n                                                                        <Text\n                                                                            style={styles(scales).title}>{translator.translate(language, \"Ми в соцмережах\")}</Text>\n                                                                        <Spacer spaceHeight={15}/>\n                                                                        <View style={[\n                                                                            app_styles(scales).row_center,\n                                                                            {\n                                                                                paddingHorizontal: Math.round(scales.widthScale * 100)\n                                                                            }\n                                                                        ]}>\n                                                                            {\n                                                                                notEmptyString(emmaPizzaRestaurant.facebook)\n                                                                                    ? (\n                                                                                        <>\n                                                                                            <TouchableOpacity\n                                                                                                style={styles(scales).social_btn}\n                                                                                                onPress={() => handleLink(emmaPizzaRestaurant.facebook, 'facebook')}\n                                                                                                activeOpacity={.8}\n                                                                                            >\n                                                                                                <IcoMoonIcon\n                                                                                                    name=\"facebook-app-logo\"\n                                                                                                    color={app_styles(scales).colors.text.grey}\n                                                                                                    size={30}\n                                                                                                />\n                                                                                            </TouchableOpacity>\n                                                                                        </>\n                                                                                    )\n                                                                                    : null\n                                                                            }\n                                                                            {\n                                                                                notEmptyString(emmaPizzaRestaurant.instagram)\n                                                                                    ? (\n                                                                                        <>\n                                                                                            <TouchableOpacity\n                                                                                                style={styles(scales).social_btn}\n                                                                                                onPress={() => handleLink(emmaPizzaRestaurant.instagram, 'inastagram')}\n                                                                                                activeOpacity={.8}\n                                                                                            >\n                                                                                                <IcoMoonIcon\n                                                                                                    name=\"social-media\"\n                                                                                                    color={app_styles(scales).colors.text.grey}\n                                                                                                    size={30}\n                                                                                                />\n                                                                                            </TouchableOpacity>\n                                                                                        </>\n                                                                                    )\n                                                                                    : null\n                                                                            }\n                                                                            {\n                                                                                notEmptyString(emmaPizzaRestaurant.youtube)\n                                                                                    ? (\n                                                                                        <>\n                                                                                            <TouchableOpacity\n                                                                                                style={styles(scales).social_btn}\n                                                                                                onPress={() => handleLink(emmaPizzaRestaurant.youtube, 'youtube')}\n                                                                                                activeOpacity={.8}\n                                                                                            >\n                                                                                                <IcoMoonIcon\n                                                                                                    name=\"youtube\"\n                                                                                                    color={app_styles(scales).colors.text.grey}\n                                                                                                    size={30}\n                                                                                                />\n                                                                                            </TouchableOpacity>\n                                                                                        </>\n                                                                                    )\n                                                                                    : null\n                                                                            }\n                                                                            {\n                                                                                notEmptyString(emmaPizzaRestaurant.tripadvisor)\n                                                                                    ? (\n                                                                                        <>\n                                                                                            <TouchableOpacity\n                                                                                                style={styles(scales).social_btn}\n                                                                                                onPress={() => handleLink(emmaPizzaRestaurant.tripadvisor, 'tripadvisor')}\n                                                                                                activeOpacity={.8}\n                                                                                            >\n                                                                                                <IcoMoonIcon\n                                                                                                    name=\"tripadvisor-seeklogocom\"\n                                                                                                    color={app_styles(scales).colors.text.grey}\n                                                                                                    size={30}\n                                                                                                />\n                                                                                            </TouchableOpacity>\n                                                                                        </>\n                                                                                    )\n                                                                                    : null\n                                                                            }\n                                                                        </View>\n                                                                        <Spacer spaceHeight={20}/>\n                                                                    </>\n                                                                )\n                                                                : null\n                                                        }\n                                                    </Block>\n                                                    {/* Contacts */}\n                                                    <View style={styles(scales).contacts_block}>\n                                                        {\n                                                            notEmptyString(emmaPizzaRestaurant.schedule)\n                                                                ? (\n                                                                    <>\n                                                                        <Spacer spaceHeight={14}/>\n                                                                        <Text style={styles(scales).contact_title}>{translator.translate(language, 'Графік роботи')}</Text>\n                                                                        <Spacer spaceHeight={5} />\n                                                                        <View style={app_styles(scales).row_start}>\n                                                                            <View style={styles(scales).icon_container}>\n                                                                                <IcoMoonIcon name=\"wall-clock\"\n                                                                                             color={app_styles(scales).colors.app.white}\n                                                                                             size={Math.round(scales.widthScale * 16)}/>\n                                                                            </View>\n                                                                            <View>\n                                                                                <Text\n                                                                                    style={styles(scales).text}>{emmaPizzaRestaurant.schedule}</Text>\n                                                                            </View>\n                                                                        </View>\n                                                                    </>\n                                                                )\n                                                                : null\n                                                        }\n                                                        {\n                                                            notEmptyString(emmaPizzaRestaurant.address)\n                                                                ? (\n                                                                    <>\n                                                                        <Spacer spaceHeight={14}/>\n                                                                        <Text style={styles(scales).contact_title}>{translator.translate(language, 'Адреса')}</Text>\n                                                                        <Spacer spaceHeight={5}/>\n                                                                        <View style={app_styles(scales).row_start}>\n                                                                            <View style={styles(scales).icon_container}>\n                                                                                <IcoMoonIcon name=\"pin\"\n                                                                                             color={app_styles(scales).colors.app.white}\n                                                                                             size={Math.round(scales.widthScale * 17)}/>\n                                                                            </View>\n                                                                            <TouchableOpacity onPress={openMap}\n                                                                                              activeOpacity={.7}>\n                                                                                <Text\n                                                                                    style={styles(scales).text}>{emmaPizzaRestaurant.address}</Text>\n                                                                            </TouchableOpacity>\n                                                                        </View>\n                                                                    </>\n                                                                )\n                                                                : null\n                                                        }\n                                                        {\n                                                            notEmptyString(emmaPizzaRestaurant.phone)\n                                                                ? (\n                                                                    <>\n                                                                        <Spacer spaceHeight={14}/>\n                                                                        <Text style={styles(scales).contact_title}>{translator.translate(language, 'Телефон')}</Text>\n                                                                        <Spacer spaceHeight={5} />\n                                                                        <View style={app_styles(scales).row_start}>\n                                                                            <View style={styles(scales).icon_container}>\n                                                                                <IcoMoonIcon name=\"phone-alt\"\n                                                                                             color={app_styles(scales).colors.app.white}\n                                                                                             size={Math.round(scales.widthScale * 16)}/>\n                                                                            </View>\n                                                                            <TouchableOpacity onPress={makeCall}\n                                                                                              activeOpacity={.7}>\n                                                                                <Text\n                                                                                    style={styles(scales).text}>{emmaPizzaRestaurant.phone}</Text>\n                                                                            </TouchableOpacity>\n                                                                        </View>\n                                                                    </>\n                                                                )\n                                                                : null\n                                                        }\n                                                        {\n                                                            notEmptyString(contacts.email)\n                                                                ? (\n                                                                    <>\n                                                                        <Spacer spaceHeight={14}/>\n                                                                        <Text style={styles(scales).contact_title}>Email</Text>\n                                                                        <Spacer spaceHeight={5} />\n                                                                        <View style={app_styles(scales).row_start}>\n                                                                            <View style={styles(scales).icon_container}>\n                                                                                <IcoMoonIcon name=\"envelope\"\n                                                                                             color={app_styles(scales).colors.app.light_black}\n                                                                                             size={Math.round(scales.widthScale * 16)}/>\n                                                                            </View>\n                                                                            <TouchableOpacity onPress={sendEmail}\n                                                                                              activeOpacity={.7}>\n                                                                                <Text\n                                                                                    style={styles(scales).text}>{contacts.email}</Text>\n                                                                            </TouchableOpacity>\n                                                                        </View>\n                                                                    </>\n                                                                )\n                                                                : null\n                                                        }\n                                                    </View>\n                                                </ScrollView>\n                                            )\n                                            : null\n                                    )\n                                    : <NetworkErrorModal\n                                        isOpened={settingsNetworkError}\n                                        closeCallback={clearSettingsNetworkError}\n                                    />\n                            )\n                            : <DataLoadingIndicator/>\n                    }\n                </View>\n            </SafeView>\n\n            {/* Menu Modal */}\n            {\n                hasMenu()\n                    ? <MenuModal\n                        menu={restaurant.menu_banner}\n                        isOpened={showMenuModal}\n                        closeCallback={() => setShowMenuModal(false)}\n                    />\n                    : null\n            }\n        </>\n    );\n}\n\n\n//----EXPORT----//\nexport default RestaurantScreen;"]},"metadata":{},"sourceType":"module"}