{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axiosWithErrorHandler from \"./axiosWithErrorHandler\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\naxiosWithErrorHandler.interceptors.request.use(function _callee(config) {\n  var token;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n        case 2:\n          token = _context.sent;\n\n          if (token) {\n            config.headers.common['Auth-Key'] = \"\" + token;\n          }\n\n          return _context.abrupt(\"return\", config);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}, function (err) {\n  Promise.reject(err);\n});\nexport default axiosWithErrorHandler;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/services/axiosWithToken.js"],"names":["axiosWithErrorHandler","interceptors","request","use","config","AsyncStorage","getItem","token","headers","common","err","Promise","reject"],"mappings":";AAAA,OAAOA,qBAAP;;AAIAA,qBAAqB,CAACC,YAAtB,CAAmCC,OAAnC,CAA2CC,GAA3C,CAA+C,iBAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACvBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADuB;;AAAA;AACrCC,UAAAA,KADqC;;AAG3C,cAAGA,KAAH,EAAS;AACLH,YAAAA,MAAM,CAACI,OAAP,CAAeC,MAAf,CAAsB,UAAtB,SAAuCF,KAAvC;AACH;;AAL0C,2CAOpCH,MAPoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/C,EAQG,UAAUM,GAAV,EAAe;AACdC,EAAAA,OAAO,CAACC,MAAR,CAAeF,GAAf;AACH,CAVD;AAYA,eAAeV,qBAAf","sourcesContent":["import axiosWithErrorHandler from './axiosWithErrorHandler'\nimport { AsyncStorage } from \"react-native\";\n\n\naxiosWithErrorHandler.interceptors.request.use(async function(config){\n    const token = await AsyncStorage.getItem('token');\n\n    if(token){\n        config.headers.common['Auth-Key'] = `${token}`\n    }\n\n    return config\n}, function (err) {\n    Promise.reject(err)\n})\n\nexport default axiosWithErrorHandler;"]},"metadata":{},"sourceType":"module"}