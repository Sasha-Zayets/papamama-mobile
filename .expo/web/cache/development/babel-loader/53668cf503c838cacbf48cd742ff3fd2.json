{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/components/inputs/DatePikerInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { useColorScheme } from 'react-native-appearance';\nimport moment from \"moment\";\nimport translator from \"../../translator/translator\";\nimport { Spacer } from \"../shared\";\nimport styles from \"../../styles/components/inputs/date-picker-input\";\nimport { app_styles } from \"../../styles/app_styles\";\n\nvar DatePikerInput = function DatePikerInput(_ref) {\n  var placeholder = _ref.placeholder,\n      error = _ref.error,\n      clearError = _ref.clearError,\n      callback = _ref.callback,\n      name = _ref.name,\n      currentValue = _ref.currentValue;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language;\n\n  var _useState = useState({\n    showDatePiker: false,\n    date: null,\n    notFormatedDate: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      defaultDate = _useState4[0],\n      setDefaultDate = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  useEffect(function () {\n    if (state.date) {\n      var inputValue = state.date;\n      setValue(inputValue);\n      moment.locale(\"uk\");\n      var unixTime = moment(inputValue, \"DD.MM.YYYY\").valueOf() / 1000;\n      callback(name, unixTime);\n\n      if (error) {\n        clearError(name);\n      }\n    }\n  }, [state]);\n\n  var handleSelectDate = function handleSelectDate(event, value) {\n    if (event.type === 'dismissed') {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        showDatePiker: false\n      }));\n      return;\n    }\n\n    ;\n\n    var _date = new Date(value);\n\n    _date.setMinutes(_date.getMinutes() - _date.getTimezoneOffset());\n\n    var formatedDate = formatDatePickerValue(_date);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      date: formatedDate,\n      notFormatedDate: value,\n      showDatePiker: Platform.OS === 'ios' ? true : false\n    }));\n  };\n\n  var formatDatePickerValue = function formatDatePickerValue(date) {\n    moment.locale(\"uk\");\n    var formatedDate = moment(date).format(\"DD.MM.YYYY\");\n    return formatedDate;\n  };\n\n  var reformatDate = function reformatDate(date) {\n    if (date && date.includes(\"-\")) {\n      return moment(date, \"YYYY-MM-DD\").format(\"DD.MM.YYYY\");\n    }\n\n    return date;\n  };\n\n  var colorSchemes = {\n    light: {\n      background: app_styles(scales).colors.app.white,\n      text: app_styles(scales).colors.text.primary,\n      free_space_background: \"rgba(0, 0, 0, 0.35)\"\n    },\n    dark: {\n      background: app_styles(scales).colors.text.primary,\n      text: app_styles(scales).colors.text.white,\n      free_space_background: \"rgba(255, 255, 255, 0.55)\"\n    }\n  };\n  var colorScheme = useColorScheme();\n  var colors = colorSchemes[colorScheme] || colorSchemes.light;\n  return React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        showDatePiker: true\n      }));\n    },\n    activeOpacity: .7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    pointerEvents: \"none\",\n    style: styles(scales).input_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles(scales).input,\n    placeholderTextColor: app_styles(scales).colors.text.light_grey,\n    placeholder: placeholder,\n    editable: false,\n    value: value || reformatDate(currentValue),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }))), error ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).error_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }, error))) : null, state.showDatePiker ? Platform.OS === 'ios' ? React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: state.showDatePiker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: styles(scales).modal_content_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles(scales).top_container, {\n      backgroundColor: colors.free_space_background\n    }],\n    onPress: function onPress() {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        showDatePiker: false\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }), React.createElement(View, {\n    style: [styles(scales).picker_container, {\n      backgroundColor: colors.background\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: [styles(scales).header, {\n      borderBottomColor: colors.text\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 41\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        showDatePiker: false\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: [styles(scales).close_piker, {\n      color: colors.text\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 49\n    }\n  }, translator.translate(language, \"Готово\")))), React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 41\n    }\n  }), React.createElement(View, {\n    style: {\n      flexGrow: 1,\n      backgroundColor: colors.background\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 41\n    }\n  }, React.createElement(DateTimePicker, {\n    value: state.notFormatedDate || defaultDate,\n    mode: \"date\",\n    display: \"calendar\",\n    maximumDate: defaultDate,\n    is24Hour: true,\n    onChange: handleSelectDate,\n    style: {\n      width: '100%',\n      backgroundColor: colors.background\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 45\n    }\n  }))))) : React.createElement(DateTimePicker, {\n    value: state.notFormatedDate || defaultDate,\n    mode: \"date\",\n    maximumDate: defaultDate,\n    is24Hour: true,\n    display: \"default\",\n    onChange: handleSelectDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 27\n    }\n  }) : null);\n};\n\nexport default DatePikerInput;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/inputs/DatePikerInput.js"],"names":["React","useContext","useState","useEffect","Context","AppSettingsContext","DateTimePicker","useColorScheme","moment","translator","Spacer","styles","app_styles","DatePikerInput","placeholder","error","clearError","callback","name","currentValue","state","scales","language","showDatePiker","date","notFormatedDate","setState","Date","defaultDate","setDefaultDate","value","setValue","inputValue","locale","unixTime","valueOf","handleSelectDate","event","type","_date","setMinutes","getMinutes","getTimezoneOffset","formatedDate","formatDatePickerValue","Platform","OS","format","reformatDate","includes","colorSchemes","light","background","colors","app","white","text","primary","free_space_background","dark","colorScheme","input_container","input","light_grey","error_text","modal_content_container","top_container","backgroundColor","picker_container","header","borderBottomColor","close_piker","color","translate","flexGrow","width"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext, useState, useEffect } from 'react';\n//React native\nimport { Text, View, TextInput, TouchableOpacity, Platform, Modal } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//Date Time Piker\nimport DateTimePicker from '@react-native-community/datetimepicker';\n//Expo\nimport { useColorScheme } from 'react-native-appearance';\n//Moment\nimport moment from \"moment\";\n//Localization\nimport translator from \"../../translator/translator\";\n//Components\nimport { Spacer } from '../shared';\n//Styles\nimport styles from \"../../styles/components/inputs/date-picker-input\";\nimport { app_styles } from '../../styles/app_styles';\n\n\n\n\n//----COMPONENT----//\nconst DatePikerInput = ({ placeholder, error, clearError, callback, name, currentValue }) => {\n    //Data and State\n    const { state: { scales, language } } = useContext(AppSettingsContext);\n    const [state, setState] = useState({\n        showDatePiker: false,\n        date: null,\n        notFormatedDate: null\n    });\n    const [defaultDate, setDefaultDate] = useState(new Date());\n    const [value, setValue] = useState(null);\n\n\n\n    //Hooks and Methods\n    useEffect(() => {\n        if (state.date) {\n            let inputValue = state.date;\n            setValue(inputValue);\n            moment.locale(\"uk\");\n            let unixTime = (moment(inputValue, \"DD.MM.YYYY\").valueOf()) / 1000;\n            callback(name, unixTime)\n            if (error) {\n                clearError(name)\n            }\n        }\n    }, [state]);\n\n\n    const handleSelectDate = (event, value) => {\n        if (event.type === 'dismissed') {\n            setState({ ...state, showDatePiker: false });\n            return;\n        };\n\n        let _date = new Date(value);\n            _date.setMinutes( _date.getMinutes() - _date.getTimezoneOffset());\n        let formatedDate = formatDatePickerValue(_date);\n\n        setState({ ...state, date: formatedDate, notFormatedDate: value, showDatePiker: Platform.OS === 'ios' ? true : false });\n    }\n\n\n    const formatDatePickerValue = (date) => {\n        moment.locale(\"uk\");\n        let formatedDate = moment(date).format(\"DD.MM.YYYY\");\n        return formatedDate;\n    }\n\n\n    const reformatDate = (date) => {\n        if (date && date.includes(\"-\")) {\n            return moment(date, \"YYYY-MM-DD\").format(\"DD.MM.YYYY\");\n        }\n        return date;\n    }\n\n\n\n    const colorSchemes = {\n        light: {\n            background: app_styles(scales).colors.app.white,\n            text: app_styles(scales).colors.text.primary,\n            free_space_background: \"rgba(0, 0, 0, 0.35)\"\n        },\n        dark: {\n            background: app_styles(scales).colors.text.primary,\n            text: app_styles(scales).colors.text.white,\n            free_space_background: \"rgba(255, 255, 255, 0.55)\"\n        },\n    };\n    const colorScheme = useColorScheme();\n    const colors = colorSchemes[colorScheme] || colorSchemes.light;\n\n\n    //Template\n    return (\n        <>\n            <TouchableOpacity onPress={() => setState({ ...state, showDatePiker: true })} activeOpacity={.7}>\n                <View pointerEvents=\"none\" style={styles(scales).input_container}>\n                    <TextInput\n                        style={styles(scales).input}\n                        placeholderTextColor={app_styles(scales).colors.text.light_grey}\n                        placeholder={placeholder}\n                        editable={false}\n                        value={value || reformatDate(currentValue)}\n                    />\n                </View>\n            </TouchableOpacity>\n            {\n                error ?\n                    (\n                        <>\n                            <Spacer spaceHeight={5} />\n                            <View>\n                                <Text style={styles(scales).error_text}>{error}</Text>\n                            </View>\n                        </>\n                    )\n                    : null\n            }\n            {\n                state.showDatePiker\n                    ? Platform.OS === 'ios'\n                        ? (\n                            <Modal\n                                animationType=\"fade\"\n                                transparent={true}\n                                visible={state.showDatePiker}\n                            >\n                                <View style={styles(scales).modal_content_container}>\n                                    <TouchableOpacity style={[styles(scales).top_container, {backgroundColor: colors.free_space_background}]} onPress={() => setState({ ...state, showDatePiker: false })}>\n                                    </TouchableOpacity>\n                                    <View style={[styles(scales).picker_container, { backgroundColor: colors.background }]}>\n                                        <View style={[styles(scales).header, {borderBottomColor: colors.text}]}>\n                                            <TouchableOpacity onPress={() => setState({ ...state, showDatePiker: false })}>\n                                                <Text style={[styles(scales).close_piker, { color: colors.text }]}>{translator.translate(language, \"Готово\")}</Text>\n                                            </TouchableOpacity>\n                                        </View>\n                                        <Spacer spaceHeight={10} />\n                                        <View style={{ flexGrow: 1, backgroundColor: colors.background }}>\n                                            <DateTimePicker\n                                                value={state.notFormatedDate || defaultDate}\n                                                mode=\"date\"\n                                                display=\"calendar\"\n                                                maximumDate={defaultDate}\n                                                is24Hour={true}\n                                                onChange={handleSelectDate}\n                                                style={{ width: '100%', backgroundColor: colors.background }}\n                                            />\n                                        </View>\n                                    </View>\n                                </View>\n                            </Modal>\n                        )\n                        : <DateTimePicker value={state.notFormatedDate || defaultDate}\n                            mode=\"date\"\n                            maximumDate={defaultDate}\n                            is24Hour={true}\n                            display=\"default\"\n                            onChange={handleSelectDate}\n                        />\n                    : null\n            }\n        </>\n    )\n}\n\n\n//----EXPORT----//\nexport default DatePikerInput;\n"]},"metadata":{},"sourceType":"module"}