{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/screens/ProductScreen.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport { Context as MenuContext } from \"../context/MenuContext\";\nimport { NavigationEvents } from 'react-navigation';\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport { getUniqueId, formatPrice, prepareLanguageToHttpRequest } from \"../helpers/helpers\";\nimport Header from \"../components/shared/Header\";\nimport { DataLoadingIndicator, Block, VerticalSpacer, SafeView, Spacer } from \"../components/shared\";\nimport { SelectIngredientsCategoryInput } from \"../components/inputs\";\nimport { NetworkErrorModal } from \"../components/modals\";\nimport { ButtonAddToCart } from \"../components/buttons\";\nimport { TextAreaInput } from \"../components/inputs\";\nimport ProductCard from \"../components/menu/ProductCard\";\nimport IngredientCard from \"../components/menu/IngredientCard\";\nimport axiosWithErrorHandler from \"../services/axiosWithToken\";\nimport { BASE_URL, APP_VERSION } from \"../different/global_vars\";\nimport styles from \"../styles/screens/product-screen\";\nimport { app_styles } from \"../styles/app_styles\";\nimport translator from \"../translator/translator\";\nimport axios from \"axios\";\n\nvar ProductScreen = function ProductScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language,\n      appSettings = _useContext$state.appSettings;\n\n  var _useContext2 = useContext(MenuContext),\n      addToCart = _useContext2.addToCart;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDataLoading = _useState2[0],\n      setIsDataLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      networkError = _useState4[0],\n      setNetworkError = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      product = _useState6[0],\n      setProduct = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      totalProductPrice = _useState8[0],\n      setTotalProductPrice = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      totalOneProductPrice = _useState10[0],\n      setTotalOneProductPrice = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      totalExtraIngredientsValue = _useState12[0],\n      setTotalExtraIngredientsValue = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      recalculate = _useState14[0],\n      setRecalculate = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      ingredients = _useState16[0],\n      setIngredients = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      ingredientsCategories = _useState18[0],\n      setIngredientsCategories = _useState18[1];\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      activeIngredientsCategory = _useState20[0],\n      setActiveIngredientsCategory = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      ingredientsLimit = _useState22[0],\n      setIngredientsLimit = _useState22[1];\n\n  useEffect(function () {\n    if (product) {\n      if (!product.size && !product.sauce) {\n        startProductManipulations();\n      }\n\n      totalPriceCalculator();\n    }\n  }, [product, recalculate]);\n\n  var handleFocus = function handleFocus() {\n    if (!product) {\n      return fetchProduct();\n    }\n  };\n\n  var fetchProduct = function fetchProduct() {\n    var productId, lang, url, response, product_data, ingredients_data, result, categories;\n    return _regeneratorRuntime.async(function fetchProduct$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (product) {\n              _context.next = 33;\n              break;\n            }\n\n            productId = navigation.getParam('productId');\n\n            if (productId) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            _context.prev = 4;\n            setIsDataLoading(true);\n            lang = prepareLanguageToHttpRequest(language);\n            url = BASE_URL + \"/product/product?product_id=\" + productId + \"&lang=\" + lang + \"&version=\" + APP_VERSION;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(axios.get(url));\n\n          case 10:\n            response = _context.sent;\n\n            if (!(response && response.data && response.data.data)) {\n              _context.next = 24;\n              break;\n            }\n\n            product_data = response.data.data;\n            ingredients_data = response.data.ingredient_categories;\n\n            if (!(product_data && Object.keys(product_data).length)) {\n              _context.next = 21;\n              break;\n            }\n\n            setProduct(product_data);\n\n            if (parseInt(product_data.ingredientLimit)) {\n              setIngredientsLimit(parseInt(product_data.ingredientLimit));\n            }\n\n            if (ingredients_data && ingredients_data.length) {\n              result = [];\n              categories = [{\n                id: null,\n                name: translator.translate(language, \"Всі складники\")\n              }];\n              ingredients_data.forEach(function (item) {\n                if (item.ingredients && item.ingredients.length) {\n                  result = [].concat(_toConsumableArray(result), _toConsumableArray(item.ingredients));\n                  categories.push({\n                    id: item.id,\n                    name: item.name\n                  });\n                }\n              });\n              setIngredients(result);\n              setIngredientsCategories(categories);\n              setActiveIngredientsCategory(categories[0]);\n            }\n\n            if (networkError) {\n              setNetworkError(false);\n            }\n\n            _context.next = 22;\n            break;\n\n          case 21:\n            throw new Error('Something went wrong');\n\n          case 22:\n            _context.next = 25;\n            break;\n\n          case 24:\n            throw new Error('Something went wrong');\n\n          case 25:\n            _context.next = 30;\n            break;\n\n          case 27:\n            _context.prev = 27;\n            _context.t0 = _context[\"catch\"](4);\n            setNetworkError(true);\n\n          case 30:\n            _context.prev = 30;\n            setIsDataLoading(false);\n            return _context.finish(30);\n\n          case 33:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 27, 30, 33]], Promise);\n  };\n\n  var extraIngredientsHandler = function extraIngredientsHandler(ingredientId, newQuantity, type) {\n    var noToggle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    ingredients.forEach(function (item) {\n      if (item.id === ingredientId) {\n        var itemPrice = parseFloat(item.price);\n        item.quantity = newQuantity;\n\n        if (noToggle) {\n          if (type === '+') {\n            changePrices(itemPrice, '+');\n            changesIngredientsLimit('-', 1);\n          } else {\n            changePrices(itemPrice, '-');\n            changesIngredientsLimit('+', 1);\n          }\n        } else {\n          var newCondition = toggleChecked(item.checked);\n          item.checked = newCondition;\n\n          if (newCondition === 1) {\n            changePrices(itemPrice, '+');\n            changesIngredientsLimit('-', item.quantity);\n          } else {\n            changePrices(itemPrice * item.quantity, '-');\n            changesIngredientsLimit('+', item.quantity);\n            item.quantity = 0;\n          }\n        }\n      }\n    });\n\n    function toggleChecked(checked) {\n      if (!checked) {\n        return 1;\n      }\n\n      return checked === 0 ? 1 : 0;\n    }\n\n    function changePrices(itemPrice, type) {\n      if (type === '+') {\n        setTotalExtraIngredientsValue(totalExtraIngredientsValue + itemPrice);\n      } else {\n        setTotalExtraIngredientsValue(totalExtraIngredientsValue - itemPrice);\n      }\n    }\n\n    function changesIngredientsLimit(type, number) {\n      if (type === '+') {\n        var newNumber = ingredientsLimit + number;\n        setIngredientsLimit(newNumber);\n      } else {\n        var _newNumber = ingredientsLimit - number;\n\n        if (_newNumber <= 0) {\n          return setIngredientsLimit(0);\n        }\n\n        setIngredientsLimit(_newNumber);\n      }\n    }\n\n    setRecalculate(!recalculate);\n  };\n\n  var quantityHandler = function quantityHandler(type) {\n    var newQuantity;\n\n    if (type === '+') {\n      newQuantity = product.quantity + 1;\n    } else {\n      newQuantity = product.quantity - 1;\n    }\n\n    product.quantity = newQuantity;\n    setRecalculate(!recalculate);\n  };\n\n  var variantHandler = function variantHandler(variant) {\n    product.size = variant;\n    setRecalculate(!recalculate);\n  };\n\n  var startProductManipulations = function startProductManipulations() {\n    product.size = product.variants[0]['size'];\n    product.quantity = 1;\n    product.uid = getUniqueId();\n  };\n\n  var totalPriceCalculator = function totalPriceCalculator() {\n    var extraIngradientsCost = totalExtraIngredientsValue * product.quantity;\n    var totalPizzasValue = getVariantPrice() * product.quantity;\n    setTotalProductPrice(extraIngradientsCost + totalPizzasValue);\n    var extraIngradientsCostOne = totalExtraIngredientsValue;\n    var totalPizzasValueOne = getVariantPrice();\n    setTotalOneProductPrice(extraIngradientsCostOne + totalPizzasValueOne);\n  };\n\n  var getVariantPrice = function getVariantPrice() {\n    var variant = product.variants.find(function (item) {\n      return item.size === product.size;\n    });\n    return parseFloat(variant['price']);\n  };\n\n  var addToCartHandler = function addToCartHandler() {\n    if (isPizzaProduct()) {\n      product.total_one_product_price = totalOneProductPrice;\n    }\n\n    product.total_product_price = totalProductPrice;\n    product.main_ingredients = addChosenIngredients();\n    addToCart(product);\n    navigation.goBack();\n  };\n\n  var addChosenIngredients = function addChosenIngredients() {\n    return ingredients.filter(function (item) {\n      return item.checked && item.checked === 1;\n    });\n  };\n\n  var handleComment = function handleComment(name, value) {\n    product.comment = value;\n  };\n\n  var isPizzaProduct = function isPizzaProduct() {\n    return !!(parseInt(product.category.id) === parseInt(appSettings.pizzaCategoryId));\n  };\n\n  var hasIngredients = function hasIngredients() {\n    return product.category.has_ingredients;\n  };\n\n  var getTotalIngrVal = function getTotalIngrVal() {\n    return totalExtraIngredientsValue * product.quantity;\n  };\n\n  var filteredIngredients = function filteredIngredients() {\n    var activeId = activeIngredientsCategory.id;\n    if (!activeId) return ingredients;\n    return ingredients.filter(function (item) {\n      return item.ingredient_category_id === activeId;\n    });\n  };\n\n  var ingredientsLimitReached = function ingredientsLimitReached() {\n    if (product.hasIngredientLimit === false) return false;\n    return ingredientsLimit <= 0;\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : null,\n    enabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, React.createElement(NavigationEvents, {\n    onWillFocus: handleFocus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }), React.createElement(Header, {\n    title: product && product.category && product.category.name ? product.category.name : ' ',\n    backAllowed: true,\n    navigation: navigation,\n    exclamation: true,\n    noBell: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    bounces: false,\n    keyboardShouldPersistTaps: 'always',\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, !networkError ? !isDataLoading ? product ? React.createElement(React.Fragment, null, React.createElement(ProductCard, {\n    product: product,\n    navigation: navigation,\n    quantityCallBack: quantityHandler,\n    variantCallback: variantHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 57\n    }\n  }), React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 57\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 61\n    }\n  }, hasIngredients() ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 81\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).extra_ingradient_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 81\n    }\n  }, translator.translate(language, \"Оберіть додаткові складники\"))) : null, isPizzaProduct() ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 81\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).extra_ingradient_note,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 81\n    }\n  }, translator.translate(language, \"У вартість входять основні складники піци. Усі додаткові інгредієнти оплачуються відповідно до вказаної ціни\"))) : null)), hasIngredients() && ingredients.length ? React.createElement(React.Fragment, null, (ingredientsLimit || ingredientsLimit === 0) && product.hasIngredientLimit ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 89\n    }\n  }), React.createElement(View, {\n    style: styles(scales).limit_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 89\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).limit_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 93\n    }\n  }, translator.translate(language, 'Можлива кількість складників'), \":\", React.createElement(Text, {\n    style: styles(scales).limit_quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 97\n    }\n  }, \" \", ingredientsLimit)))) : null, React.createElement(Spacer, {\n    spaceHeight: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 73\n    }\n  }), React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 73\n    }\n  }, React.createElement(SelectIngredientsCategoryInput, {\n    dataList: ingredientsCategories,\n    callback: function callback(value) {\n      return setActiveIngredientsCategory(value);\n    },\n    defaultValue: activeIngredientsCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 77\n    }\n  })), React.createElement(Spacer, {\n    spaceHeight: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 73\n    }\n  }), React.createElement(FlatList, {\n    extraData: totalExtraIngredientsValue,\n    contentContainerStyle: styles(scales).ingredients_flat_list_container,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(ingredient) {\n      return \"key\" + ingredient.id;\n    },\n    data: filteredIngredients(),\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(IngredientCard, {\n        ingredient: item,\n        decreaseOnly: ingredientsLimitReached(),\n        callback: extraIngredientsHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 101\n        }\n      });\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(VerticalSpacer, {\n        spaceWidth: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 107\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 73\n    }\n  })) : null, React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 57\n    }\n  }, React.createElement(Spacer, {\n    spaceHeight: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 61\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 61\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 65\n    }\n  }, translator.translate(language, \"Коментар\"))), React.createElement(Spacer, {\n    spaceHeight: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 61\n    }\n  }), React.createElement(TextAreaInput, {\n    placeholder: translator.translate(language, \"Ваш коментар...\"),\n    name: \"comment\",\n    callback: handleComment,\n    value: product.comment,\n    clearError: function clearError() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 61\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 61\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 61\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 65\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 69\n    }\n  }, translator.translate(language, \"Загальна вартість:\"))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 65\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 69\n    }\n  }, formatPrice(language, totalProductPrice), \" \", translator.translate(language, \"грн\")))), hasIngredients() ? React.createElement(React.Fragment, null, React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 77\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 81\n    }\n  }, isPizzaProduct() ? React.createElement(Text, {\n    style: styles(scales).total_value_subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 95\n    }\n  }, \"- \", translator.translate(language, \"піца:\")) : React.createElement(Text, {\n    style: styles(scales).total_value_subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 95\n    }\n  }, \"- \", translator.translate(language, \"основна страва:\"))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 81\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_subtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 85\n    }\n  }, formatPrice(language, totalProductPrice - getTotalIngrVal()), \" \", translator.translate(language, \"грн\")))), React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 77\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 81\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 85\n    }\n  }, \"- \", translator.translate(language, \"додаткові складники:\"))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 81\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_subtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 85\n    }\n  }, formatPrice(language, getTotalIngrVal()), \" \", translator.translate(language, \"грн\"))))) : null, React.createElement(Spacer, {\n    spaceHeight: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 61\n    }\n  }), React.createElement(ButtonAddToCart, {\n    callback: addToCartHandler,\n    title: translator.translate(language, 'Додати в кошик'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 61\n    }\n  })), React.createElement(Spacer, {\n    spaceHeight: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 57\n    }\n  })) : null : React.createElement(DataLoadingIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 43\n    }\n  }) : React.createElement(NetworkErrorModal, {\n    isOpened: networkError,\n    closeCallback: function closeCallback() {\n      return setNetworkError(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 35\n    }\n  })))));\n};\n\nexport default ProductScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/ProductScreen.js"],"names":["React","useContext","useEffect","useState","Context","AppSettingsContext","MenuContext","NavigationEvents","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","getUniqueId","formatPrice","prepareLanguageToHttpRequest","Header","DataLoadingIndicator","Block","VerticalSpacer","SafeView","Spacer","SelectIngredientsCategoryInput","NetworkErrorModal","ButtonAddToCart","TextAreaInput","ProductCard","IngredientCard","axiosWithErrorHandler","BASE_URL","APP_VERSION","styles","app_styles","translator","axios","ProductScreen","navigation","state","scales","language","appSettings","addToCart","isDataLoading","setIsDataLoading","networkError","setNetworkError","product","setProduct","totalProductPrice","setTotalProductPrice","totalOneProductPrice","setTotalOneProductPrice","totalExtraIngredientsValue","setTotalExtraIngredientsValue","recalculate","setRecalculate","ingredients","setIngredients","ingredientsCategories","setIngredientsCategories","activeIngredientsCategory","setActiveIngredientsCategory","ingredientsLimit","setIngredientsLimit","size","sauce","startProductManipulations","totalPriceCalculator","handleFocus","fetchProduct","productId","getParam","lang","url","get","response","data","product_data","ingredients_data","ingredient_categories","Object","keys","length","parseInt","ingredientLimit","result","categories","id","name","translate","forEach","item","push","Error","extraIngredientsHandler","ingredientId","newQuantity","type","noToggle","itemPrice","parseFloat","price","quantity","changePrices","changesIngredientsLimit","newCondition","toggleChecked","checked","number","newNumber","quantityHandler","variantHandler","variant","variants","uid","extraIngradientsCost","totalPizzasValue","getVariantPrice","extraIngradientsCostOne","totalPizzasValueOne","find","addToCartHandler","isPizzaProduct","total_one_product_price","total_product_price","main_ingredients","addChosenIngredients","goBack","filter","handleComment","value","comment","category","pizzaCategoryId","hasIngredients","has_ingredients","getTotalIngrVal","filteredIngredients","activeId","ingredient_category_id","ingredientsLimitReached","hasIngredientLimit","flex","Platform","OS","body","flexGrow","extra_ingradient_title","extra_ingradient_note","limit_container","limit_text","limit_quantity","ingredients_flat_list_container","ingredient","subtitle","row_between","total_value_title","total_value_text","total_value_subtitle","total_value_subtext"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, {useContext, useEffect, useState} from 'react';\n//React native\nimport {View, FlatList, Text, ScrollView, Image, KeyboardAvoidingView} from 'react-native';\n//Context\nimport {Context as AppSettingsContext} from \"../context/AppSettingsContext\";\nimport {Context as MenuContext} from \"../context/MenuContext\";\n//Navigation Events\nimport {NavigationEvents} from 'react-navigation';\n//React-native-vector-icons package\nimport {createIconSetFromIcoMoon} from 'react-native-vector-icons';\nimport icoMoonConfig from '../../selection.json';\n\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Helpers\nimport {getUniqueId, formatPrice, prepareLanguageToHttpRequest} from \"../helpers/helpers\";\n//Components\nimport Header from \"../components/shared/Header\";\nimport {DataLoadingIndicator, Block, VerticalSpacer, SafeView, Spacer} from \"../components/shared\";\nimport {SelectIngredientsCategoryInput} from \"../components/inputs\";\nimport {NetworkErrorModal} from \"../components/modals\";\nimport {ButtonAddToCart} from \"../components/buttons\";\nimport {TextAreaInput} from \"../components/inputs\";\nimport ProductCard from \"../components/menu/ProductCard\";\nimport IngredientCard from \"../components/menu/IngredientCard\";\n//Api\nimport axiosWithErrorHandler from '../services/axiosWithToken';\n//Global vars\nimport {BASE_URL, APP_VERSION} from \"../different/global_vars\";\n//Styles\nimport styles from '../styles/screens/product-screen';\nimport {app_styles} from '../styles/app_styles';\n//Localization\nimport translator from \"../translator/translator\";\nimport axios from \"axios\";\n\n\n//----COMPONENT----//\nconst ProductScreen = ({navigation}) => {\n    //Data and State\n    const {state: {scales, language, appSettings}} = useContext(AppSettingsContext);\n    const {addToCart} = useContext(MenuContext);\n\n    const [isDataLoading, setIsDataLoading] = useState(false);\n    const [networkError, setNetworkError] = useState(false);\n    const [product, setProduct] = useState(null);\n\n    const [totalProductPrice, setTotalProductPrice] = useState(0);\n    const [totalOneProductPrice, setTotalOneProductPrice] = useState(0); //Implemented for more convenient cart total price calculations\n    const [totalExtraIngredientsValue, setTotalExtraIngredientsValue] = useState(0);\n    const [recalculate, setRecalculate] = useState(false);\n\n    const [ingredients, setIngredients] = useState(null);\n\n    const [ingredientsCategories, setIngredientsCategories] = useState([]);\n    const [activeIngredientsCategory, setActiveIngredientsCategory] = useState(null);\n    const [ingredientsLimit, setIngredientsLimit] = useState(null);\n\n\n    //Methods and hooks\n    useEffect(() => {\n\n        if (product) {\n            if (!product.size && !product.sauce) {\n                startProductManipulations();\n            }\n            totalPriceCalculator();\n        }\n\n    }, [product, recalculate]);\n\n\n    const handleFocus = () => {\n        if (!product) {\n            return fetchProduct();\n        }\n    }\n\n\n    const fetchProduct = async () => {\n        if (!product) {\n            let productId = navigation.getParam('productId');\n\n            if (!productId) return;\n\n            try {\n                setIsDataLoading(true);\n                const lang = prepareLanguageToHttpRequest(language);\n                const url = `${BASE_URL}/product/product?product_id=${productId}&lang=${lang}&version=${APP_VERSION}`;\n                const response = await axios.get(url);\n\n                if (response && response.data && response.data.data) {\n                    let product_data = response.data.data;\n                    let ingredients_data = response.data.ingredient_categories;\n\n                    if (product_data && Object.keys(product_data).length) {\n\n                        setProduct(product_data);\n                        if(parseInt(product_data.ingredientLimit)){\n                            setIngredientsLimit(parseInt(product_data.ingredientLimit));\n                        }\n\n                        if (ingredients_data && ingredients_data.length) {\n                            let result = [];\n                            let categories = [{id: null, name: translator.translate(language, \"Всі складники\")}];\n                            ingredients_data.forEach(item => {\n                                if (item.ingredients && item.ingredients.length) {\n                                    result = [...result, ...item.ingredients]\n                                    categories.push({\n                                        id: item.id,\n                                        name: item.name\n                                    });\n                                }\n                            });\n                            setIngredients(result);\n                            setIngredientsCategories(categories);\n                            setActiveIngredientsCategory(categories[0])\n                        }\n\n                        if (networkError) {\n                            setNetworkError(false)\n                        }\n                    } else {\n                        throw new Error('Something went wrong')\n                    }\n                } else {\n                    throw new Error('Something went wrong')\n                }\n            } catch (error) {\n                setNetworkError(true)\n            } finally {\n                setIsDataLoading(false);\n            }\n        }\n    }\n\n\n    const extraIngredientsHandler = (ingredientId, newQuantity, type, noToggle = false) => {\n        ingredients.forEach(item => {\n            if (item.id === ingredientId) {\n                let itemPrice = parseFloat(item.price);\n                item.quantity = newQuantity\n\n                if (noToggle) {\n                    if (type === '+') {\n                        changePrices(itemPrice, '+')\n                        changesIngredientsLimit('-', 1)\n                    } else {\n                        changePrices(itemPrice, '-')\n                        changesIngredientsLimit('+', 1)\n                    }\n                } else {\n                    let newCondition = toggleChecked(item.checked);\n                    item.checked = newCondition;\n                    if (newCondition === 1) {\n                        changePrices(itemPrice, '+')\n                        changesIngredientsLimit('-', item.quantity)\n                    } else {\n                        changePrices(itemPrice * item.quantity, '-')\n                        changesIngredientsLimit('+', item.quantity)\n                        item.quantity = 0;\n                    }\n                }\n            }\n        });\n\n        function toggleChecked(checked) {\n            if(!checked){\n                return 1;\n            }\n            return checked === 0 ? 1 : 0\n        }\n\n        function changePrices(itemPrice, type) {\n            if (type === '+') {\n                setTotalExtraIngredientsValue(totalExtraIngredientsValue + itemPrice)\n            } else {\n                setTotalExtraIngredientsValue(totalExtraIngredientsValue - itemPrice)\n            }\n        }\n\n        function changesIngredientsLimit(type, number) {\n            if(type === '+'){\n                let newNumber = ingredientsLimit + number;\n                setIngredientsLimit(newNumber)\n            } else {\n                let newNumber = ingredientsLimit - number;\n                if(newNumber <= 0){\n                    return setIngredientsLimit(0)\n                }\n                setIngredientsLimit(newNumber)\n            }\n        }\n\n        setRecalculate(!recalculate)\n    }\n\n    const quantityHandler = (type) => {\n        let newQuantity;\n\n        if (type === '+') {\n            newQuantity = product.quantity + 1;\n        } else {\n            newQuantity = product.quantity - 1;\n        }\n\n        product.quantity = newQuantity;\n        setRecalculate(!recalculate)\n    }\n\n    const variantHandler = (variant) => {\n        product.size = variant;\n        setRecalculate(!recalculate)\n    }\n\n    const startProductManipulations = () => {\n        product.size = product.variants[0]['size'];\n        product.quantity = 1;\n        product.uid = getUniqueId();\n    }\n\n\n    const totalPriceCalculator = () => {\n        let extraIngradientsCost = totalExtraIngredientsValue * product.quantity;\n        let totalPizzasValue = getVariantPrice() * product.quantity;\n        setTotalProductPrice(extraIngradientsCost + totalPizzasValue);\n\n        let extraIngradientsCostOne = totalExtraIngredientsValue;\n        let totalPizzasValueOne = getVariantPrice();\n        setTotalOneProductPrice(extraIngradientsCostOne + totalPizzasValueOne);\n    }\n\n    const getVariantPrice = () => {\n        let variant = product.variants.find(item => item.size === product.size);\n        return parseFloat(variant['price']);\n    }\n\n    const addToCartHandler = () => {\n        if (isPizzaProduct()) {\n            product.total_one_product_price = totalOneProductPrice;\n        }\n\n        product.total_product_price = totalProductPrice;\n        product.main_ingredients = addChosenIngredients();\n        addToCart(product)\n        navigation.goBack();\n    }\n\n\n    const addChosenIngredients = () => {\n        return ingredients.filter(item => item.checked && item.checked === 1);\n    }\n\n    const handleComment = (name, value) => {\n        product.comment = value;\n    }\n\n    const isPizzaProduct = () => {\n        return !!(parseInt(product.category.id) === parseInt(appSettings.pizzaCategoryId))\n    }\n\n    const hasIngredients = () => {\n        return product.category.has_ingredients;\n    }\n\n    const getTotalIngrVal = () => {\n        return totalExtraIngredientsValue * product.quantity;\n    }\n\n    const filteredIngredients = () => {\n        let activeId = activeIngredientsCategory.id;\n        if (!activeId) return ingredients;\n        return ingredients.filter(item => item.ingredient_category_id === activeId);\n    }\n\n    const ingredientsLimitReached = () => {\n        if (product.hasIngredientLimit === false) return false;\n        return ingredientsLimit <= 0;\n    }\n\n\n    //Template\n    return (\n        <KeyboardAvoidingView style={{flex: 1}} behavior={Platform.OS === 'ios' ? 'padding' : null} enabled>\n            <SafeView>\n                <NavigationEvents\n                    onWillFocus={handleFocus}\n                />\n                <Header\n                    title={(product && product.category && product.category.name) ? product.category.name : ' '}\n                    backAllowed\n                    navigation={navigation}\n                    exclamation\n                    noBell\n                />\n                <View style={styles(scales).body}>\n                    <ScrollView showsVerticalScrollIndicator={false} bounces={false}\n                                keyboardShouldPersistTaps={'always'} contentContainerStyle={{flexGrow: 1}}>\n                        {\n                            !networkError\n                                ? (\n                                    !isDataLoading\n                                        ? (\n                                            product\n                                                ? (\n                                                    <>\n                                                        <ProductCard\n                                                            product={product}\n                                                            navigation={navigation}\n                                                            quantityCallBack={quantityHandler}\n                                                            variantCallback={variantHandler}\n                                                        />\n                                                        <Block>\n                                                            <View>\n                                                                {\n                                                                    hasIngredients()\n                                                                        ? (\n                                                                            <>\n                                                                                <Spacer spaceHeight={10}/>\n                                                                                <Text\n                                                                                    style={styles(scales).extra_ingradient_title}>{translator.translate(language, \"Оберіть додаткові складники\")}</Text>\n                                                                            </>\n                                                                        )\n                                                                        : null\n                                                                }\n                                                                {\n                                                                    isPizzaProduct()\n                                                                        ? (\n                                                                            <>\n                                                                                <Spacer spaceHeight={7}/>\n                                                                                <Text\n                                                                                    style={styles(scales).extra_ingradient_note}>{translator.translate(language, \"У вартість входять основні складники піци. Усі додаткові інгредієнти оплачуються відповідно до вказаної ціни\")}</Text>\n                                                                            </>\n                                                                        )\n                                                                        : null\n                                                                }\n                                                            </View>\n                                                        </Block>\n                                                        {\n                                                            hasIngredients() && ingredients.length\n                                                                ? (\n                                                                    <>\n                                                                        {\n                                                                            (ingredientsLimit || ingredientsLimit === 0) && product.hasIngredientLimit\n                                                                                ? (\n                                                                                    <>\n                                                                                        <Spacer spaceHeight={10}/>\n                                                                                        <View style={styles(scales).limit_container}>\n                                                                                            <Text style={styles(scales).limit_text}>{translator.translate(language, 'Можлива кількість складників')}:\n                                                                                                <Text style={styles(scales).limit_quantity}> {ingredientsLimit}</Text>\n                                                                                            </Text>\n                                                                                        </View>\n                                                                                    </>\n                                                                                )\n                                                                                : null\n                                                                        }\n                                                                        <Spacer spaceHeight={15} />\n                                                                        <Block>\n                                                                            <SelectIngredientsCategoryInput\n                                                                                dataList={ingredientsCategories}\n                                                                                callback={(value) => setActiveIngredientsCategory(value)}\n                                                                                defaultValue={activeIngredientsCategory}\n                                                                            />\n                                                                        </Block>\n                                                                        <Spacer spaceHeight={18}/>\n                                                                        <FlatList\n                                                                            extraData={totalExtraIngredientsValue}\n                                                                            contentContainerStyle={styles(scales).ingredients_flat_list_container}\n                                                                            horizontal\n                                                                            showsHorizontalScrollIndicator={false}\n                                                                            keyExtractor={ingredient => \"key\" + ingredient.id}\n                                                                            data={filteredIngredients()}\n                                                                            renderItem={({item}) => <IngredientCard ingredient={item}\n                                                                                                                    decreaseOnly={ingredientsLimitReached()}\n                                                                                                                    callback={extraIngredientsHandler}\n                                                                                                    />}\n                                                                            ItemSeparatorComponent={() => <VerticalSpacer\n                                                                                spaceWidth={10}/>}\n                                                                        />\n                                                                    </>\n                                                                )\n                                                                : null\n                                                        }\n                                                        <Block>\n                                                            <Spacer spaceHeight={18}/>\n                                                            <View>\n                                                                <Text\n                                                                    style={styles(scales).subtitle}>{translator.translate(language, \"Коментар\")}</Text>\n                                                            </View>\n                                                            <Spacer spaceHeight={7}/>\n                                                            <TextAreaInput\n                                                                placeholder={translator.translate(language, \"Ваш коментар...\")}\n                                                                name=\"comment\"\n                                                                callback={handleComment}\n                                                                value={product.comment}\n                                                                clearError={() => {\n                                                                }}\n                                                            />\n                                                            <Spacer spaceHeight={18}/>\n                                                            <View style={app_styles(scales).row_between}>\n                                                                <View>\n                                                                    <Text\n                                                                        style={styles(scales).total_value_title}>{translator.translate(language, \"Загальна вартість:\")}</Text>\n                                                                </View>\n                                                                <View>\n                                                                    <Text\n                                                                        style={styles(scales).total_value_text}>{formatPrice(language, totalProductPrice)} {translator.translate(language, \"грн\")}</Text>\n                                                                </View>\n                                                            </View>\n                                                            {\n                                                                hasIngredients()\n                                                                    ? (\n                                                                        <>\n                                                                            <View style={app_styles(scales).row_between}>\n                                                                                <View>\n                                                                                    {\n                                                                                        isPizzaProduct()\n                                                                                            ? <Text\n                                                                                                style={styles(scales).total_value_subtitle}>- {translator.translate(language, \"піца:\")}</Text>\n                                                                                            : <Text\n                                                                                                style={styles(scales).total_value_subtitle}>- {translator.translate(language, \"основна страва:\")}</Text>\n                                                                                    }\n                                                                                </View>\n                                                                                <View>\n                                                                                    <Text\n                                                                                        style={styles(scales).total_value_subtext}>{formatPrice(language, (totalProductPrice - getTotalIngrVal()))} {translator.translate(language, \"грн\")}</Text>\n                                                                                </View>\n                                                                            </View>\n                                                                            <View style={app_styles(scales).row_between}>\n                                                                                <View>\n                                                                                    <Text\n                                                                                        style={styles(scales).total_value_subtitle}>- {translator.translate(language, \"додаткові складники:\")}</Text>\n                                                                                </View>\n                                                                                <View>\n                                                                                    <Text\n                                                                                        style={styles(scales).total_value_subtext}>{formatPrice(language, getTotalIngrVal())} {translator.translate(language, \"грн\")}</Text>\n                                                                                </View>\n                                                                            </View>\n                                                                        </>\n                                                                    )\n                                                                    : null\n                                                            }\n                                                            <Spacer spaceHeight={25}/>\n                                                            <ButtonAddToCart\n                                                                callback={addToCartHandler}\n                                                                title={translator.translate(language, 'Додати в кошик')}\n                                                            />\n                                                        </Block>\n                                                        <Spacer spaceHeight={25}/>\n                                                    </>\n                                                )\n                                                : null\n                                        )\n                                        : <DataLoadingIndicator/>\n                                )\n                                : <NetworkErrorModal\n                                    isOpened={networkError}\n                                    closeCallback={() => setNetworkError(false)}\n                                />\n                        }\n                    </ScrollView>\n                </View>\n            </SafeView>\n        </KeyboardAvoidingView>\n    )\n}\n\n\n//----EXPORT----//\nexport default ProductScreen;"]},"metadata":{},"sourceType":"module"}