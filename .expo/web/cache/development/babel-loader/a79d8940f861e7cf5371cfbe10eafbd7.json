{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/screens/PizzaConstructorScreen.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport { Context as MenuContext } from \"../context/MenuContext\";\nimport { NavigationEvents } from 'react-navigation';\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport { getUniqueId, formatPrice, makeCopy, prepareLanguageToHttpRequest } from \"../helpers/helpers\";\nimport Header from \"../components/shared/Header\";\nimport { DataLoadingIndicator, Block, VerticalSpacer, SafeView, Spacer } from \"../components/shared\";\nimport { NetworkErrorModal } from \"../components/modals\";\nimport { ButtonAddToCart, ButtonOrder } from \"../components/buttons\";\nimport { SelectIngredientsCategoryInput, TextAreaInput } from \"../components/inputs\";\nimport ProductCard from \"../components/menu/ProductCard\";\nimport IngredientCard from \"../components/menu/IngredientCard\";\nimport styles from \"../styles/screens/pizza-constructor-screen\";\nimport { app_styles } from \"../styles/app_styles\";\nimport translator from \"../translator/translator\";\nimport { APP_VERSION, BASE_URL } from \"../different/global_vars\";\nimport axios from \"axios\";\n\nvar PizzaConstructorScreen = function PizzaConstructorScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language,\n      appSettings = _useContext$state.appSettings;\n\n  var _useContext2 = useContext(MenuContext),\n      addToCart = _useContext2.addToCart;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDataLoading = _useState2[0],\n      setIsDataLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      networkError = _useState4[0],\n      setNetworkError = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      product = _useState6[0],\n      setProduct = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ingredients = _useState8[0],\n      setIngredients = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      ingredientsCategories = _useState10[0],\n      setIngredientsCategories = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      activeIngredientsCategory = _useState12[0],\n      setActiveIngredientsCategory = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      ingredientsLimit = _useState14[0],\n      setIngredientsLimit = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      totalProductPrice = _useState16[0],\n      setTotalProductPrice = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      totalOneProductPrice = _useState18[0],\n      setTotalOneProductPrice = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      totalExtraIngredientsValue = _useState20[0],\n      setTotalExtraIngredientsValue = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      recalculate = _useState22[0],\n      setRecalculate = _useState22[1];\n\n  useEffect(function () {\n    if (product) {\n      if (!product.size && !product.sauce) {\n        startProductManipulations();\n      }\n\n      totalPriceCalculator();\n    }\n  }, [recalculate, product]);\n\n  var fetchProduct = function fetchProduct() {\n    var lang, url, response, product_data, ingredients_data, result, categories;\n    return _regeneratorRuntime.async(function fetchProduct$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (product) {\n              _context.next = 30;\n              break;\n            }\n\n            _context.prev = 1;\n            setIsDataLoading(true);\n            lang = prepareLanguageToHttpRequest(language);\n            url = BASE_URL + \"/product/pizza-constructor?lang=\" + lang;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.get(url));\n\n          case 7:\n            response = _context.sent;\n\n            if (!(response && response.data && response.data.data)) {\n              _context.next = 21;\n              break;\n            }\n\n            product_data = response.data.data;\n            ingredients_data = response.data.ingredient_categories;\n\n            if (!(product_data && Object.keys(product_data).length)) {\n              _context.next = 18;\n              break;\n            }\n\n            setProduct(product_data);\n\n            if (parseInt(product_data.ingredientLimit)) {\n              setIngredientsLimit(parseInt(product_data.ingredientLimit));\n            }\n\n            if (ingredients_data && ingredients_data.length) {\n              result = [];\n              categories = [{\n                id: null,\n                name: translator.translate(language, \"Всі складники\")\n              }];\n              ingredients_data.forEach(function (item) {\n                if (item.ingredients && item.ingredients.length) {\n                  result = [].concat(_toConsumableArray(result), _toConsumableArray(item.ingredients));\n                  categories.push({\n                    id: item.id,\n                    name: item.name\n                  });\n                }\n              });\n              setIngredients(result);\n              setIngredientsCategories(categories);\n              setActiveIngredientsCategory(categories[0]);\n            }\n\n            if (networkError) {\n              setNetworkError(false);\n            }\n\n            _context.next = 19;\n            break;\n\n          case 18:\n            throw new Error('Something went wrong');\n\n          case 19:\n            _context.next = 22;\n            break;\n\n          case 21:\n            throw new Error('Something went wrong');\n\n          case 22:\n            _context.next = 27;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t0 = _context[\"catch\"](1);\n            setNetworkError(true);\n\n          case 27:\n            _context.prev = 27;\n            setIsDataLoading(false);\n            return _context.finish(27);\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 24, 27, 30]], Promise);\n  };\n\n  var extraIngredientsHandler = function extraIngredientsHandler(ingredientId, newQuantity, type) {\n    var noToggle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    ingredients.forEach(function (item) {\n      if (item.id === ingredientId) {\n        var itemPrice = parseFloat(item.price);\n        item.quantity = newQuantity;\n\n        if (noToggle) {\n          if (type === '+') {\n            changePrices(itemPrice, '+');\n            changesIngredientsLimit('-', 1);\n          } else {\n            changePrices(itemPrice, '-');\n            changesIngredientsLimit('+', 1);\n          }\n        } else {\n          var newCondition = toggleChecked(item.checked);\n          item.checked = newCondition;\n\n          if (newCondition === 1) {\n            changePrices(itemPrice, '+');\n            changesIngredientsLimit('-', item.quantity);\n          } else {\n            changePrices(itemPrice * item.quantity, '-');\n            changesIngredientsLimit('+', item.quantity);\n            item.quantity = 0;\n          }\n        }\n      }\n    });\n\n    function toggleChecked(checked) {\n      if (!checked) {\n        return 1;\n      }\n\n      return checked === 0 ? 1 : 0;\n    }\n\n    function changePrices(itemPrice, type) {\n      if (type === '+') {\n        setTotalExtraIngredientsValue(totalExtraIngredientsValue + itemPrice);\n      } else {\n        setTotalExtraIngredientsValue(totalExtraIngredientsValue - itemPrice);\n      }\n    }\n\n    function changesIngredientsLimit(type, number) {\n      if (type === '+') {\n        var newNumber = ingredientsLimit + number;\n        setIngredientsLimit(newNumber);\n      } else {\n        var _newNumber = ingredientsLimit - number;\n\n        if (_newNumber <= 0) {\n          return setIngredientsLimit(0);\n        }\n\n        setIngredientsLimit(_newNumber);\n      }\n    }\n\n    setRecalculate(!recalculate);\n  };\n\n  var quantityHandler = function quantityHandler(type) {\n    var newQuantity;\n\n    if (type === '+') {\n      newQuantity = product.quantity + 1;\n    } else {\n      newQuantity = product.quantity - 1;\n    }\n\n    product.quantity = newQuantity;\n    setRecalculate(!recalculate);\n  };\n\n  var variantHandler = function variantHandler(variant) {\n    product.size = variant;\n    setRecalculate(!recalculate);\n  };\n\n  var startProductManipulations = function startProductManipulations() {\n    product.size = product.variants[0]['size'];\n    product.quantity = 1;\n    product.sauce = null;\n    product.uid = getUniqueId();\n  };\n\n  var sauceHandler = function sauceHandler(sauce) {\n    product.sauce = sauce;\n    setRecalculate(!recalculate);\n  };\n\n  var totalPriceCalculator = function totalPriceCalculator() {\n    var extraIngradientsCost = isPizzaProduct() ? totalExtraIngredientsValue * product.quantity : totalExtraIngredientsValue;\n    var totalPizzasValue = getVariantPrice() * product.quantity;\n    var sauceValues = getSauceValue() * product.quantity;\n    setTotalProductPrice(extraIngradientsCost + totalPizzasValue + sauceValues);\n    var extraIngradientsCostOne = totalExtraIngredientsValue;\n    var totalPizzasValueOne = getVariantPrice();\n    var sauceValue = getSauceValue();\n    setTotalOneProductPrice(extraIngradientsCostOne + totalPizzasValueOne + sauceValue);\n  };\n\n  var getVariantPrice = function getVariantPrice() {\n    var variant = product.variants.find(function (item) {\n      return item.size === product.size;\n    });\n    return parseFloat(variant['price']);\n  };\n\n  var getSauceValue = function getSauceValue() {\n    if (!product.properties || !product.properties.length) return;\n    if (!product.sauce) return 0;\n    return product.size === 2 ? product.sauce.price2 : product.sauce.price;\n  };\n\n  var addToCartHandler = function addToCartHandler() {\n    if (!pizzaBuilt()) return;\n    product.total_one_product_price = totalOneProductPrice;\n    product.total_product_price = totalProductPrice;\n    product.main_ingredients = addChosenIngredients();\n    addToCart(product);\n    navigation.goBack();\n  };\n\n  var handleComment = function handleComment(name, value) {\n    product.comment = value;\n  };\n\n  var addChosenIngredients = function addChosenIngredients() {\n    return ingredients.filter(function (item) {\n      return item.checked && item.checked === 1;\n    });\n  };\n\n  var isPizzaProduct = function isPizzaProduct() {\n    return !!(parseInt(product.category.id) === parseInt(appSettings.pizzaCategoryId));\n  };\n\n  var hasIngredients = function hasIngredients() {\n    return product.category.has_ingredients;\n  };\n\n  var getTotalIngrVal = function getTotalIngrVal() {\n    return isPizzaProduct() ? totalExtraIngredientsValue * product.quantity : totalExtraIngredientsValue;\n  };\n\n  var filteredIngredients = function filteredIngredients() {\n    var activeId = activeIngredientsCategory.id;\n    if (!activeId) return ingredients;\n    return ingredients.filter(function (item) {\n      return item.ingredient_category_id === activeId;\n    });\n  };\n\n  var ingredientsLimitReached = function ingredientsLimitReached() {\n    return ingredientsLimit <= 0;\n  };\n\n  var pizzaBuilt = function pizzaBuilt() {\n    if (!product.sauce) {\n      Alert.alert(translator.translate(language, \"Увага!\"), translator.translate(language, \"Ви забули вибрати соус.\"));\n      return false;\n    }\n\n    ;\n\n    if (getSelectedMainIngredientsNumber() < 2) {\n      Alert.alert(translator.translate(language, \"Увага!\"), translator.translate(language, \"Необхідно вибрати мінімум 2 основних інгредієнта.\"));\n      return false;\n    }\n\n    return true;\n  };\n\n  var buildChosenIngredientsString = function buildChosenIngredientsString() {\n    var result = [];\n    ingredients.forEach(function (item) {\n      if (item.checked && item.checked === 1) {\n        result.push(item.name + \" (x\" + item.quantity + \")\");\n      }\n    });\n    return result.length ? result.join(', ') : null;\n  };\n\n  var getSelectedMainIngredientsNumber = function getSelectedMainIngredientsNumber() {\n    return parseInt(product.ingredientLimit) - ingredientsLimit;\n  };\n\n  var getPizzaPrice = function getPizzaPrice() {\n    return totalProductPrice - getTotalIngrVal() - getSauceValue() * product.quantity;\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : null,\n    enabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, React.createElement(NavigationEvents, {\n    onWillFocus: function onWillFocus() {\n      return fetchProduct();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }), React.createElement(Header, {\n    title: translator.translate(language, \"Піца-Конструктор\"),\n    backAllowed: true,\n    navigation: navigation,\n    exclamation: true,\n    noBell: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    bounces: false,\n    keyboardShouldPersistTaps: 'always',\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }, !networkError ? !isDataLoading ? product ? React.createElement(React.Fragment, null, React.createElement(ProductCard, {\n    inConstructor: true,\n    product: product,\n    navigation: navigation,\n    quantityCallBack: quantityHandler,\n    variantCallback: variantHandler,\n    sauceCallback: sauceHandler,\n    chosenIngredientsString: buildChosenIngredientsString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 57\n    }\n  }), React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 57\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 61\n    }\n  }, hasIngredients() ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 81\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).extra_ingradient_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 81\n    }\n  }, translator.translate(language, \"Оберіть складники\"))) : null, isPizzaProduct() ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 81\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).extra_ingradient_note,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 81\n    }\n  }, translator.translate(language, \"Виберіть інгредієнти, з яких буде складатися Ваша піца.\"))) : null)), hasIngredients() && ingredients.length ? React.createElement(React.Fragment, null, ingredientsLimit || ingredientsLimit === 0 ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 89\n    }\n  }), React.createElement(View, {\n    style: styles(scales).limit_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 89\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).limit_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 93\n    }\n  }, translator.translate(language, 'Можлива кількість складників'), \":\", React.createElement(Text, {\n    style: styles(scales).limit_quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 97\n    }\n  }, \" \", ingredientsLimit)))) : null, React.createElement(Spacer, {\n    spaceHeight: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 73\n    }\n  }), React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 73\n    }\n  }, React.createElement(SelectIngredientsCategoryInput, {\n    dataList: ingredientsCategories,\n    callback: function callback(value) {\n      return setActiveIngredientsCategory(value);\n    },\n    defaultValue: activeIngredientsCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 77\n    }\n  })), React.createElement(Spacer, {\n    spaceHeight: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 73\n    }\n  }), React.createElement(FlatList, {\n    extraData: totalExtraIngredientsValue,\n    contentContainerStyle: styles(scales).ingredients_flat_list_container,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(ingredient) {\n      return \"key\" + ingredient.id;\n    },\n    data: filteredIngredients(),\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(IngredientCard, {\n        ingredient: item,\n        decreaseOnly: ingredientsLimitReached(),\n        callback: extraIngredientsHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 101\n        }\n      });\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(VerticalSpacer, {\n        spaceWidth: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 107\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 73\n    }\n  })) : null, React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 57\n    }\n  }, React.createElement(Spacer, {\n    spaceHeight: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 61\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 61\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 65\n    }\n  }, translator.translate(language, \"Коментар\"))), React.createElement(Spacer, {\n    spaceHeight: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 61\n    }\n  }), React.createElement(TextAreaInput, {\n    placeholder: translator.translate(language, \"Ваш коментар...\"),\n    name: \"comment\",\n    callback: handleComment,\n    value: product.comment,\n    clearError: function clearError() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 61\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 61\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 61\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 65\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 69\n    }\n  }, translator.translate(language, \"Загальна вартість:\"))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 65\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 69\n    }\n  }, formatPrice(language, totalProductPrice), \" \", translator.translate(language, \"грн\")))), hasIngredients() ? React.createElement(React.Fragment, null, React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 77\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 81\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 85\n    }\n  }, \"- \", translator.translate(language, \"піца:\"))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 81\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_subtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 85\n    }\n  }, formatPrice(language, getPizzaPrice()), \" \", translator.translate(language, \"грн\")))), React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 77\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 81\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 85\n    }\n  }, \"- \", translator.translate(language, \"додаткові складники:\"))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 81\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_subtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 85\n    }\n  }, formatPrice(language, getTotalIngrVal()), \" \", translator.translate(language, \"грн\")))), React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 77\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 81\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 85\n    }\n  }, \"- \", translator.translate(language, \"соус:\"))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 81\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_value_subtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 85\n    }\n  }, formatPrice(language, getSauceValue() * product.quantity), \" \", translator.translate(language, \"грн\"))))) : null, React.createElement(Spacer, {\n    spaceHeight: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 61\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 61\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 65\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_quantity_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 69\n    }\n  }, translator.translate(language, \"Кількість\"))), React.createElement(Spacer, {\n    spaceHeight: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 65\n    }\n  }), React.createElement(View, {\n    style: styles(scales).manipulators_block,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 65\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles(scales).button, {\n      backgroundColor: app_styles(scales).colors.app.blue\n    }],\n    onPress: function onPress() {\n      return quantityHandler('-');\n    },\n    activeOpacity: 0.8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 69\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"minus\",\n    color: app_styles(scales).colors.app.white,\n    size: Math.round(scales.widthScale * 16),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 73\n    }\n  })), React.createElement(View, {\n    style: styles(scales).product_quantity_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 69\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).product_quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 73\n    }\n  }, product.quantity)), React.createElement(TouchableOpacity, {\n    style: [styles(scales).button, {\n      backgroundColor: app_styles(scales).colors.app.blue\n    }],\n    onPress: function onPress() {\n      return quantityHandler('+');\n    },\n    activeOpacity: 0.8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 69\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"plus\",\n    color: app_styles(scales).colors.app.white,\n    size: Math.round(scales.widthScale * 16),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 73\n    }\n  })))), React.createElement(Spacer, {\n    spaceHeight: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 61\n    }\n  }), React.createElement(ButtonAddToCart, {\n    callback: addToCartHandler,\n    title: translator.translate(language, 'Додати в кошик'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 61\n    }\n  })), React.createElement(Spacer, {\n    spaceHeight: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 57\n    }\n  })) : null : React.createElement(DataLoadingIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 43\n    }\n  }) : React.createElement(NetworkErrorModal, {\n    isOpened: networkError,\n    closeCallback: function closeCallback() {\n      return setNetworkError(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 35\n    }\n  })))));\n};\n\nexport default PizzaConstructorScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/PizzaConstructorScreen.js"],"names":["React","useContext","useEffect","useState","Context","AppSettingsContext","MenuContext","NavigationEvents","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","getUniqueId","formatPrice","makeCopy","prepareLanguageToHttpRequest","Header","DataLoadingIndicator","Block","VerticalSpacer","SafeView","Spacer","NetworkErrorModal","ButtonAddToCart","ButtonOrder","SelectIngredientsCategoryInput","TextAreaInput","ProductCard","IngredientCard","styles","app_styles","translator","APP_VERSION","BASE_URL","axios","PizzaConstructorScreen","navigation","state","scales","language","appSettings","addToCart","isDataLoading","setIsDataLoading","networkError","setNetworkError","product","setProduct","ingredients","setIngredients","ingredientsCategories","setIngredientsCategories","activeIngredientsCategory","setActiveIngredientsCategory","ingredientsLimit","setIngredientsLimit","totalProductPrice","setTotalProductPrice","totalOneProductPrice","setTotalOneProductPrice","totalExtraIngredientsValue","setTotalExtraIngredientsValue","recalculate","setRecalculate","size","sauce","startProductManipulations","totalPriceCalculator","fetchProduct","lang","url","get","response","data","product_data","ingredients_data","ingredient_categories","Object","keys","length","parseInt","ingredientLimit","result","categories","id","name","translate","forEach","item","push","Error","extraIngredientsHandler","ingredientId","newQuantity","type","noToggle","itemPrice","parseFloat","price","quantity","changePrices","changesIngredientsLimit","newCondition","toggleChecked","checked","number","newNumber","quantityHandler","variantHandler","variant","variants","uid","sauceHandler","extraIngradientsCost","isPizzaProduct","totalPizzasValue","getVariantPrice","sauceValues","getSauceValue","extraIngradientsCostOne","totalPizzasValueOne","sauceValue","find","properties","price2","addToCartHandler","pizzaBuilt","total_one_product_price","total_product_price","main_ingredients","addChosenIngredients","goBack","handleComment","value","comment","filter","category","pizzaCategoryId","hasIngredients","has_ingredients","getTotalIngrVal","filteredIngredients","activeId","ingredient_category_id","ingredientsLimitReached","Alert","alert","getSelectedMainIngredientsNumber","buildChosenIngredientsString","join","getPizzaPrice","flex","Platform","OS","body","flexGrow","extra_ingradient_title","extra_ingradient_note","limit_container","limit_text","limit_quantity","ingredients_flat_list_container","ingredient","subtitle","row_between","total_value_title","total_value_text","total_value_subtitle","total_value_subtext","total_quantity_title","manipulators_block","button","backgroundColor","colors","app","blue","white","Math","round","widthScale","product_quantity_container","product_quantity"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, {useContext, useEffect, useState} from 'react';\n//React native\nimport {View, FlatList, Text, ScrollView, Image, KeyboardAvoidingView, TouchableOpacity, Alert} from 'react-native';\n//Context\nimport {Context as AppSettingsContext} from \"../context/AppSettingsContext\";\nimport {Context as MenuContext} from \"../context/MenuContext\";\n//Navigation Events\nimport {NavigationEvents} from 'react-navigation';\n//React-native-vector-icons package\nimport {createIconSetFromIcoMoon} from 'react-native-vector-icons';\nimport icoMoonConfig from '../../selection.json';\n\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Helpers\nimport {getUniqueId, formatPrice, makeCopy, prepareLanguageToHttpRequest} from \"../helpers/helpers\";\n//Components\nimport Header from \"../components/shared/Header\";\nimport {DataLoadingIndicator, Block, VerticalSpacer, SafeView, Spacer} from \"../components/shared\";\nimport {NetworkErrorModal} from \"../components/modals\";\nimport {ButtonAddToCart, ButtonOrder} from \"../components/buttons\";\nimport {SelectIngredientsCategoryInput, TextAreaInput} from \"../components/inputs\";\nimport ProductCard from \"../components/menu/ProductCard\";\nimport IngredientCard from \"../components/menu/IngredientCard\";\n//Styles\nimport styles from '../styles/screens/pizza-constructor-screen';\nimport {app_styles} from '../styles/app_styles';\n//Localization\nimport translator from \"../translator/translator\";\nimport {APP_VERSION, BASE_URL} from \"../different/global_vars\";\nimport axios from \"axios\";\n\n\n//----COMPONENT----//\nconst PizzaConstructorScreen = ({navigation}) => {\n    //Data and State\n    const {state: {scales, language, appSettings}} = useContext(AppSettingsContext);\n    const {addToCart} = useContext(MenuContext);\n\n    const [isDataLoading, setIsDataLoading] = useState(false);\n    const [networkError, setNetworkError] = useState(false);\n    const [product, setProduct] = useState(null);\n\n    const [ingredients, setIngredients] = useState(null);\n\n    const [ingredientsCategories, setIngredientsCategories] = useState([]);\n    const [activeIngredientsCategory, setActiveIngredientsCategory] = useState(null);\n    const [ingredientsLimit, setIngredientsLimit] = useState(null);\n\n\n    const [totalProductPrice, setTotalProductPrice] = useState(0);\n    const [totalOneProductPrice, setTotalOneProductPrice] = useState(0); //Implemented for more convinient cart total price calcuations\n    const [totalExtraIngredientsValue, setTotalExtraIngredientsValue] = useState(0);\n    const [recalculate, setRecalculate] = useState(false);\n\n\n    //Methods and hooks\n    useEffect(() => {\n        if (product) {\n            if (!product.size && !product.sauce) {\n                startProductManipulations();\n            }\n            totalPriceCalculator();\n        }\n\n    }, [recalculate, product]);\n\n\n    const fetchProduct = async () => {\n        if (!product) {\n            try {\n                setIsDataLoading(true);\n                const lang = prepareLanguageToHttpRequest(language);\n                const url = `${BASE_URL}/product/pizza-constructor?lang=${lang}`;\n\n                const response = await axios.get(url);\n\n                if (response && response.data && response.data.data) {\n                    let product_data = response.data.data;\n                    let ingredients_data = response.data.ingredient_categories;\n\n                    if (product_data && Object.keys(product_data).length) {\n\n                        setProduct(product_data);\n                        if (parseInt(product_data.ingredientLimit)) {\n                            setIngredientsLimit(parseInt(product_data.ingredientLimit));\n                        }\n\n                        if (ingredients_data && ingredients_data.length) {\n                            let result = [];\n                            let categories = [{id: null, name: translator.translate(language, \"Всі складники\")}];\n                            ingredients_data.forEach(item => {\n                                if (item.ingredients && item.ingredients.length) {\n                                    result = [...result, ...item.ingredients]\n                                    categories.push({\n                                        id: item.id,\n                                        name: item.name\n                                    });\n                                }\n                            });\n                            setIngredients(result);\n                            setIngredientsCategories(categories);\n                            setActiveIngredientsCategory(categories[0])\n                        }\n\n                        if (networkError) {\n                            setNetworkError(false)\n                        }\n                    } else {\n                        throw new Error('Something went wrong')\n                    }\n                } else {\n                    throw new Error('Something went wrong')\n                }\n            } catch (error) {\n                setNetworkError(true)\n            } finally {\n                setIsDataLoading(false);\n            }\n        }\n    }\n\n    const extraIngredientsHandler = (ingredientId, newQuantity, type, noToggle = false) => {\n        ingredients.forEach(item => {\n            if (item.id === ingredientId) {\n                let itemPrice = parseFloat(item.price);\n                item.quantity = newQuantity\n\n                if (noToggle) {\n                    if (type === '+') {\n                        changePrices(itemPrice, '+')\n                        changesIngredientsLimit('-', 1)\n                    } else {\n                        changePrices(itemPrice, '-')\n                        changesIngredientsLimit('+', 1)\n                    }\n                } else {\n                    let newCondition = toggleChecked(item.checked);\n                    item.checked = newCondition;\n                    if (newCondition === 1) {\n                        changePrices(itemPrice, '+')\n                        changesIngredientsLimit('-', item.quantity)\n                    } else {\n                        changePrices(itemPrice * item.quantity, '-')\n                        changesIngredientsLimit('+', item.quantity)\n                        item.quantity = 0;\n                    }\n                }\n            }\n        });\n\n        function toggleChecked(checked) {\n            if (!checked) {\n                return 1;\n            }\n            return checked === 0 ? 1 : 0\n        }\n\n        function changePrices(itemPrice, type) {\n            if (type === '+') {\n                setTotalExtraIngredientsValue(totalExtraIngredientsValue + itemPrice)\n            } else {\n                setTotalExtraIngredientsValue(totalExtraIngredientsValue - itemPrice)\n            }\n        }\n\n        function changesIngredientsLimit(type, number) {\n            if (type === '+') {\n                let newNumber = ingredientsLimit + number;\n                setIngredientsLimit(newNumber)\n            } else {\n                let newNumber = ingredientsLimit - number;\n                if (newNumber <= 0) {\n                    return setIngredientsLimit(0)\n                }\n                setIngredientsLimit(newNumber)\n            }\n        }\n\n        setRecalculate(!recalculate)\n    }\n\n    const quantityHandler = (type) => {\n        let newQuantity;\n\n        if (type === '+') {\n            newQuantity = product.quantity + 1;\n        } else {\n            newQuantity = product.quantity - 1;\n        }\n\n        product.quantity = newQuantity;\n        setRecalculate(!recalculate)\n    }\n\n    const variantHandler = (variant) => {\n        product.size = variant;\n        setRecalculate(!recalculate)\n    }\n\n    const startProductManipulations = () => {\n        product.size = product.variants[0]['size'];\n        product.quantity = 1;\n        product.sauce = null;\n        product.uid = getUniqueId();\n    }\n\n    const sauceHandler = (sauce) => {\n        product.sauce = sauce;\n        setRecalculate(!recalculate)\n    }\n\n    const totalPriceCalculator = () => {\n        let extraIngradientsCost = isPizzaProduct() ? totalExtraIngredientsValue * product.quantity : totalExtraIngredientsValue;\n        let totalPizzasValue = getVariantPrice() * product.quantity;\n        let sauceValues = getSauceValue() * product.quantity;\n        setTotalProductPrice(extraIngradientsCost + totalPizzasValue + sauceValues);\n\n        let extraIngradientsCostOne = totalExtraIngredientsValue;\n        let totalPizzasValueOne = getVariantPrice();\n        let sauceValue = getSauceValue();\n        setTotalOneProductPrice(extraIngradientsCostOne + totalPizzasValueOne + sauceValue);\n    }\n\n    const getVariantPrice = () => {\n        let variant = product.variants.find(item => item.size === product.size);\n        return parseFloat(variant['price']);\n    }\n\n    const getSauceValue = () => {\n        if (!product.properties || !product.properties.length ) return;\n        if (!product.sauce) return 0;\n        return product.size === 2 ? product.sauce.price2 : product.sauce.price;\n    }\n\n    const addToCartHandler = () => {\n        if(!pizzaBuilt()) return;\n        product.total_one_product_price = totalOneProductPrice;\n        product.total_product_price = totalProductPrice;\n        product.main_ingredients = addChosenIngredients();\n        addToCart(product)\n        navigation.goBack();\n    }\n\n    const handleComment = (name, value) => {\n        product.comment = value;\n    }\n\n\n    const addChosenIngredients = () => {\n        return ingredients.filter(item => item.checked && item.checked === 1);\n    }\n\n\n    const isPizzaProduct = () => {\n        return !!(parseInt(product.category.id) === parseInt(appSettings.pizzaCategoryId))\n    }\n\n    const hasIngredients = () => {\n        return product.category.has_ingredients;\n    }\n\n    const getTotalIngrVal = () => {\n        return isPizzaProduct() ? totalExtraIngredientsValue * product.quantity : totalExtraIngredientsValue;\n    }\n\n\n    const filteredIngredients = () => {\n        let activeId = activeIngredientsCategory.id;\n        if (!activeId) return ingredients;\n        return ingredients.filter(item => item.ingredient_category_id === activeId);\n    }\n\n    const ingredientsLimitReached = () => {\n        return ingredientsLimit <= 0;\n    }\n\n\n    const pizzaBuilt = () => {\n        if (!product.sauce) {\n            Alert.alert(translator.translate(language, \"Увага!\"), translator.translate(language, \"Ви забули вибрати соус.\"));\n            return false;\n        }\n        ;\n        if (getSelectedMainIngredientsNumber() < 2) {\n            Alert.alert(translator.translate(language, \"Увага!\"), translator.translate(language, \"Необхідно вибрати мінімум 2 основних інгредієнта.\"));\n            return false;\n        }\n        return true;\n    }\n\n\n    const buildChosenIngredientsString = () => {\n        let result = [];\n        ingredients.forEach(item => {\n            if(item.checked && item.checked === 1){\n                result.push(`${item.name} (x${item.quantity})`)\n            }\n        })\n        return result.length ? result.join(', ') : null;\n    }\n\n    const getSelectedMainIngredientsNumber = () => {\n        return parseInt(product.ingredientLimit) - ingredientsLimit;\n    }\n\n\n    const getPizzaPrice = () => {\n        return totalProductPrice - getTotalIngrVal() - (getSauceValue() * product.quantity);\n    }\n\n\n    //Template\n    return (\n        <KeyboardAvoidingView style={{flex: 1}} behavior={Platform.OS === 'ios' ? 'padding' : null} enabled>\n            <SafeView>\n                <NavigationEvents\n                    onWillFocus={() => fetchProduct()}\n                />\n                <Header\n                    title={translator.translate(language, \"Піца-Конструктор\")}\n                    backAllowed\n                    navigation={navigation}\n                    exclamation\n                    noBell\n                />\n                <View style={styles(scales).body}>\n                    <ScrollView showsVerticalScrollIndicator={false} bounces={false}\n                                keyboardShouldPersistTaps={'always'} contentContainerStyle={{flexGrow: 1}}>\n                        {\n                            !networkError\n                                ? (\n                                    !isDataLoading\n                                        ? (\n\n                                            product\n                                                ? (\n                                                    <>\n                                                        <ProductCard\n                                                            inConstructor\n                                                            product={product}\n                                                            navigation={navigation}\n                                                            quantityCallBack={quantityHandler}\n                                                            variantCallback={variantHandler}\n                                                            sauceCallback={sauceHandler}\n                                                            chosenIngredientsString={buildChosenIngredientsString()}\n                                                        />\n                                                        <Block>\n                                                            <View>\n                                                                {\n                                                                    hasIngredients()\n                                                                        ? (\n                                                                            <>\n                                                                                <Spacer spaceHeight={10}/>\n                                                                                <Text\n                                                                                    style={styles(scales).extra_ingradient_title}>{translator.translate(language, \"Оберіть складники\")}</Text>\n                                                                            </>\n                                                                        )\n                                                                        : null\n                                                                }\n                                                                {\n                                                                    isPizzaProduct()\n                                                                        ? (\n                                                                            <>\n                                                                                <Spacer spaceHeight={7}/>\n                                                                                <Text\n                                                                                    style={styles(scales).extra_ingradient_note}>{translator.translate(language, \"Виберіть інгредієнти, з яких буде складатися Ваша піца.\")}</Text>\n                                                                            </>\n                                                                        )\n                                                                        : null\n                                                                }\n                                                            </View>\n                                                        </Block>\n                                                        {\n                                                            hasIngredients() && ingredients.length\n                                                                ? (\n                                                                    <>\n                                                                        {\n                                                                            ingredientsLimit || ingredientsLimit === 0\n                                                                                ? (\n                                                                                    <>\n                                                                                        <Spacer spaceHeight={10}/>\n                                                                                        <View style={styles(scales).limit_container}>\n                                                                                            <Text\n                                                                                                style={styles(scales).limit_text}>{translator.translate(language, 'Можлива кількість складників')}:\n                                                                                                <Text\n                                                                                                    style={styles(scales).limit_quantity}> {ingredientsLimit}</Text>\n                                                                                            </Text>\n                                                                                        </View>\n                                                                                    </>\n                                                                                )\n                                                                                : null\n                                                                        }\n                                                                        <Spacer spaceHeight={15}/>\n                                                                        <Block>\n                                                                            <SelectIngredientsCategoryInput\n                                                                                dataList={ingredientsCategories}\n                                                                                callback={(value) => setActiveIngredientsCategory(value)}\n                                                                                defaultValue={activeIngredientsCategory}\n                                                                            />\n                                                                        </Block>\n                                                                        <Spacer spaceHeight={18}/>\n                                                                        <FlatList\n                                                                            extraData={totalExtraIngredientsValue}\n                                                                            contentContainerStyle={styles(scales).ingredients_flat_list_container}\n                                                                            horizontal\n                                                                            showsHorizontalScrollIndicator={false}\n                                                                            keyExtractor={ingredient => \"key\" + ingredient.id}\n                                                                            data={filteredIngredients()}\n                                                                            renderItem={({item}) => <IngredientCard ingredient={item}\n                                                                                                                    decreaseOnly={ingredientsLimitReached()}\n                                                                                                                    callback={extraIngredientsHandler}\n                                                                                                    />}\n                                                                            ItemSeparatorComponent={() => <VerticalSpacer\n                                                                                spaceWidth={10}/>}\n                                                                        />\n                                                                    </>\n                                                                )\n                                                                : null\n                                                        }\n                                                        <Block>\n                                                            <Spacer spaceHeight={18}/>\n                                                            <View>\n                                                                <Text\n                                                                    style={styles(scales).subtitle}>{translator.translate(language, \"Коментар\")}</Text>\n                                                            </View>\n                                                            <Spacer spaceHeight={7}/>\n                                                            <TextAreaInput\n                                                                placeholder={translator.translate(language, \"Ваш коментар...\")}\n                                                                name=\"comment\"\n                                                                callback={handleComment}\n                                                                value={product.comment}\n                                                                clearError={() => {\n                                                                }}\n                                                            />\n                                                            <Spacer spaceHeight={18}/>\n                                                            <View style={app_styles(scales).row_between}>\n                                                                <View>\n                                                                    <Text\n                                                                        style={styles(scales).total_value_title}>{translator.translate(language, \"Загальна вартість:\")}</Text>\n                                                                </View>\n                                                                <View>\n                                                                    <Text\n                                                                        style={styles(scales).total_value_text}>{formatPrice(language, totalProductPrice)} {translator.translate(language, \"грн\")}</Text>\n                                                                </View>\n                                                            </View>\n                                                            {\n                                                                hasIngredients()\n                                                                    ? (\n                                                                        <>\n                                                                            <View style={app_styles(scales).row_between}>\n                                                                                <View>\n                                                                                    <Text\n                                                                                        style={styles(scales).total_value_subtitle}>- {translator.translate(language, \"піца:\")}</Text>\n                                                                                </View>\n                                                                                <View>\n                                                                                    <Text\n                                                                                        style={styles(scales).total_value_subtext}>{formatPrice(language, getPizzaPrice())} {translator.translate(language, \"грн\")}</Text>\n                                                                                </View>\n                                                                            </View>\n                                                                            <View style={app_styles(scales).row_between}>\n                                                                                <View>\n                                                                                    <Text\n                                                                                        style={styles(scales).total_value_subtitle}>- {translator.translate(language, \"додаткові складники:\")}</Text>\n                                                                                </View>\n                                                                                <View>\n                                                                                    <Text\n                                                                                        style={styles(scales).total_value_subtext}>{formatPrice(language, getTotalIngrVal())} {translator.translate(language, \"грн\")}</Text>\n                                                                                </View>\n                                                                            </View>\n                                                                            <View style={app_styles(scales).row_between}>\n                                                                                <View>\n                                                                                    <Text\n                                                                                        style={styles(scales).total_value_subtitle}>- {translator.translate(language, \"соус:\")}</Text>\n                                                                                </View>\n                                                                                <View>\n                                                                                    <Text\n                                                                                        style={styles(scales).total_value_subtext}>{formatPrice(language, (getSauceValue() * product.quantity))} {translator.translate(language, \"грн\")}</Text>\n                                                                                </View>\n                                                                            </View>\n                                                                        </>\n                                                                    )\n                                                                    : null\n                                                            }\n                                                            <Spacer spaceHeight={18}/>\n                                                            <View>\n                                                                <View style={{flex: 1}}>\n                                                                    <Text\n                                                                        style={styles(scales).total_quantity_title}>{translator.translate(language, \"Кількість\")}</Text>\n                                                                </View>\n                                                                <Spacer spaceHeight={15}/>\n                                                                <View style={styles(scales).manipulators_block}>\n                                                                    <TouchableOpacity\n                                                                        style={[styles(scales).button, {backgroundColor: app_styles(scales).colors.app.blue}]}\n                                                                        onPress={() => quantityHandler('-')}\n                                                                        activeOpacity={0.8}\n                                                                    >\n                                                                        <IcoMoonIcon name=\"minus\"\n                                                                                     color={app_styles(scales).colors.app.white}\n                                                                                     size={Math.round(scales.widthScale * 16)}/>\n                                                                    </TouchableOpacity>\n                                                                    <View style={styles(scales).product_quantity_container}>\n                                                                        <Text\n                                                                            style={styles(scales).product_quantity}>{product.quantity}</Text>\n                                                                    </View>\n                                                                    <TouchableOpacity\n                                                                        style={[styles(scales).button, {backgroundColor: app_styles(scales).colors.app.blue}]}\n                                                                        onPress={() => quantityHandler('+')}\n                                                                        activeOpacity={0.8}\n                                                                    >\n                                                                        <IcoMoonIcon name=\"plus\"\n                                                                                     color={app_styles(scales).colors.app.white}\n                                                                                     size={Math.round(scales.widthScale * 16)}/>\n                                                                    </TouchableOpacity>\n                                                                </View>\n                                                            </View>\n                                                            <Spacer spaceHeight={25}/>\n                                                            <ButtonAddToCart\n                                                                callback={addToCartHandler}\n                                                                title={translator.translate(language, 'Додати в кошик')}\n                                                            />\n\n                                                        </Block>\n                                                        <Spacer spaceHeight={25}/>\n                                                    </>\n                                                )\n                                                : null\n                                        )\n                                        : <DataLoadingIndicator/>\n                                )\n                                : <NetworkErrorModal\n                                    isOpened={networkError}\n                                    closeCallback={() => setNetworkError(false)}\n                                />\n                        }\n                    </ScrollView>\n                </View>\n            </SafeView>\n        </KeyboardAvoidingView>\n    )\n}\n\n\n//----EXPORT----//\nexport default PizzaConstructorScreen;"]},"metadata":{},"sourceType":"module"}