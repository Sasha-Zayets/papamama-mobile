{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/components/inputs/PhoneInput.js\";\nimport React, { useContext, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Spacer } from \"../shared\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport styles from \"../../styles/components/inputs/phone-input\";\nimport { app_styles } from \"../../styles/app_styles\";\n\nvar PhoneInput = function PhoneInput(_ref) {\n  var value = _ref.value,\n      placeholder = _ref.placeholder,\n      error = _ref.error,\n      clearError = _ref.clearError,\n      callback = _ref.callback,\n      name = _ref.name;\n\n  var _useContext = useContext(AppSettingsContext),\n      scales = _useContext.state.scales;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setIsFocused = _useState2[1];\n\n  var arrangeFocus = function arrangeFocus() {\n    clearError(name);\n    setIsFocused(true);\n\n    if (!value) {\n      handleInput(\"+380\");\n    }\n  };\n\n  var handleBlur = function handleBlur() {\n    setIsFocused(false);\n\n    if (value.length < 6) {\n      callback(null);\n    }\n  };\n\n  var handleInput = function handleInput(value) {\n    callback(value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles(scales).input_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: [styles(scales).input, {\n      borderBottomWidth: Math.round(scales.widthScale * 1),\n      borderBottomColor: isFocused ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.light_grey\n    }],\n    placeholderTextColor: app_styles(scales).colors.text.light_grey,\n    placeholder: placeholder,\n    autocapitalize: \"none\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(value) {\n      return handleInput(value);\n    },\n    value: value,\n    onFocus: arrangeFocus,\n    onBlur: handleBlur,\n    keyboardType: \"phone-pad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), error ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).error_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, error))) : null);\n};\n\nexport default PhoneInput;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/inputs/PhoneInput.js"],"names":["React","useContext","useState","Spacer","Context","AppSettingsContext","styles","app_styles","PhoneInput","value","placeholder","error","clearError","callback","name","scales","state","isFocused","setIsFocused","arrangeFocus","handleInput","handleBlur","length","input_container","input","borderBottomWidth","Math","round","widthScale","borderBottomColor","colors","app","blue","text","light_grey","error_text"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext, useState} from 'react';\n//React native\nimport { Text, View, TextInput } from 'react-native';\n//Components\nimport { Spacer } from '../shared';\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//Styles\nimport styles from \"../../styles/components/inputs/phone-input\";\nimport { app_styles } from '../../styles/app_styles';\n\n\n\n\n//----COMPONENT----//\nconst PhoneInput = ({ value, placeholder, error, clearError, callback, name }) => {\n    //Data and State\n    const { state: { scales } } = useContext(AppSettingsContext);\n    const [isFocused, setIsFocused] = useState(false);\n\n    //Hooks and Methods\n    const arrangeFocus = () => {\n        clearError(name);\n        setIsFocused(true);\n        if (!value) {\n            handleInput(\"+380\")\n        }\n    }\n\n\n    const handleBlur = () => {\n        setIsFocused(false);\n        if (value.length < 6) {\n            callback(null)\n        }\n    }\n\n\n    const handleInput = (value) => {\n        callback(value)\n    }\n\n\n    //Template\n    return (\n        <>\n            <View style={styles(scales).input_container}>\n                <TextInput\n                    style={[styles(scales).input, { borderBottomWidth: Math.round(scales.widthScale * 1), borderBottomColor: isFocused ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.light_grey }]}\n                    placeholderTextColor={app_styles(scales).colors.text.light_grey}\n                    placeholder={placeholder}\n                    autocapitalize=\"none\"\n                    autoCorrect={false}\n                    onChangeText={(value) => handleInput(value)}\n                    value={value}\n                    onFocus={arrangeFocus}\n                    onBlur={handleBlur}\n                    keyboardType=\"phone-pad\"\n                />\n            </View>\n            {\n                error ?\n                    (\n                        <>\n                            <Spacer spaceHeight={5} />\n                            <View>\n                                <Text style={styles(scales).error_text}>{error}</Text>\n                            </View>\n                        </>\n                    )\n                    : null\n            }\n        </>\n    )\n}\n\n\n//----EXPORT----//\nexport default PhoneInput;\n"]},"metadata":{},"sourceType":"module"}