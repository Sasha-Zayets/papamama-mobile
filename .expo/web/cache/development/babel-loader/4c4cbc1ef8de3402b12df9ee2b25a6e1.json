{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/screens/CartScreen.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport { Context as MenuContext } from \"../context/MenuContext\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer, VerticalSpacer } from \"../components/shared\";\nimport { ButtonClearCart, ButtonPrimary } from \"../components/buttons\";\nimport ProductCardCart from \"../components/menu/ProductCardCart\";\nimport EmptyCartBlock from \"../components/menu/EmptyCartBlock\";\nimport translator from \"../translator/translator\";\nimport { formatPrice } from \"../helpers/helpers\";\nimport styles from \"../styles/screens/cart-screen\";\nimport { app_styles } from \"../styles/app_styles\";\n\nvar CartScreen = function CartScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language,\n      appSettings = _useContext$state.appSettings;\n\n  var _useContext2 = useContext(MenuContext),\n      cart = _useContext2.state.cart,\n      clearCart = _useContext2.clearCart;\n\n  var _useState = useState({\n    total: 0,\n    extraIngredients: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalProductsPrice = _useState2[0],\n      setTotalProductsPrice = _useState2[1];\n\n  useEffect(function () {\n    setTotalProductsPrice(calculatePrice());\n  }, [language, cart]);\n\n  var populateCartProducts = function populateCartProducts() {\n    var products = cart.map(function (product, index) {\n      return React.createElement(View, {\n        key: product.uid || product.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, React.createElement(ProductCardCart, {\n        product: product,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }), index < cart.length - 1 ? React.createElement(Spacer, {\n        spaceHeight: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 31\n        }\n      }) : null);\n    });\n    return products;\n  };\n\n  var calculatePrice = function calculatePrice() {\n    var total = 0;\n    var extraIngredients = 0;\n    cart.forEach(function (item) {\n      total += Number(item.quantity) * getProductPrice(item);\n\n      if (!isPizza(item)) {\n        if (hasIngredients(item)) {\n          var value = 0;\n          item.main_ingredients.forEach(function (ingr) {\n            if (ingr.checked) {\n              value += parseFloat(ingr.quantity) * parseFloat(ingr.price);\n            }\n          });\n          extraIngredients += value * item.quantity;\n        }\n      }\n    });\n    return {\n      total: total,\n      extraIngredients: extraIngredients\n    };\n  };\n\n  var getProductPrice = function getProductPrice(product) {\n    if (product.total_one_product_price) {\n      return parseFloat(product.total_one_product_price);\n    }\n\n    return getVariantPrice(product);\n  };\n\n  var getVariantPrice = function getVariantPrice(product) {\n    var variant = product.variants.find(function (item) {\n      return item.size === product.size;\n    });\n    return variant ? parseFloat(variant['price']) : product.variants[0]['price'];\n  };\n\n  var isPizza = function isPizza(product) {\n    return !!(product.category.id === parseInt(appSettings.pizzaCategoryId));\n  };\n\n  var hasIngredients = function hasIngredients(product) {\n    return !!product.category.has_ingredients;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    title: translator.translate(language, \"Кошик\"),\n    backAllowed: true,\n    exclamationForCart: true,\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, cart.length ? React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    bounces: false,\n    keyboardShouldPersistTaps: 'always',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, populateCartProducts(), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }), React.createElement(ButtonClearCart, {\n    callback: clearCart,\n    title: translator.translate(language, \"Очистити кошик\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }), React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }\n  }, React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 41\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 45\n    }\n  }, translator.translate(language, \"Всього на суму\")), React.createElement(Text, {\n    style: styles(scales).total_price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }, formatPrice(language, totalProductsPrice.total + totalProductsPrice.extraIngredients), \" \", translator.translate(language, \"грн\"))), React.createElement(Spacer, {\n    spaceHeight: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 41\n    }\n  }), React.createElement(ButtonPrimary, {\n    color: app_styles(scales).colors.app.blue,\n    callback: function callback() {\n      return navigation.navigate('MakeOrder');\n    },\n    title: translator.translate(language, \"Оформити замовлення\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 41\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 42,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 41\n    }\n  }))) : React.createElement(EmptyCartBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 31\n    }\n  }))));\n};\n\nexport default CartScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/CartScreen.js"],"names":["React","useEffect","useState","useContext","Context","AppSettingsContext","MenuContext","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","Header","SafeView","Block","Spacer","VerticalSpacer","ButtonClearCart","ButtonPrimary","ProductCardCart","EmptyCartBlock","translator","formatPrice","styles","app_styles","CartScreen","navigation","state","scales","language","appSettings","cart","clearCart","total","extraIngredients","totalProductsPrice","setTotalProductsPrice","calculatePrice","populateCartProducts","products","map","product","index","uid","id","length","forEach","item","Number","quantity","getProductPrice","isPizza","hasIngredients","value","main_ingredients","ingr","checked","parseFloat","price","total_one_product_price","getVariantPrice","variant","variants","find","size","category","parseInt","pizzaCategoryId","has_ingredients","translate","body","row_between","total_title","total_price","colors","app","blue","navigate"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, {useEffect, useState, useContext} from 'react';\n//React native\nimport {View, Text, ScrollView, TouchableOpacity} from 'react-native';\n//Context\nimport {Context as AppSettingsContext} from \"../context/AppSettingsContext\";\nimport {Context as MenuContext} from \"../context/MenuContext\";\n//React-native-vector-icons package\nimport {createIconSetFromIcoMoon} from 'react-native-vector-icons';\nimport icoMoonConfig from '../../selection.json';\n\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Componetns\nimport Header from \"../components/shared/Header\";\nimport {SafeView, Block, Spacer, VerticalSpacer} from \"../components/shared\";\nimport {ButtonClearCart, ButtonPrimary} from \"../components/buttons\";\nimport ProductCardCart from \"../components/menu/ProductCardCart\";\nimport EmptyCartBlock from \"../components/menu/EmptyCartBlock\";\n//Localization\nimport translator from \"../translator/translator\";\n//Helpers\nimport {formatPrice} from \"../helpers/helpers\";\n//Styles\nimport styles from '../styles/screens/cart-screen';\nimport {app_styles} from '../styles/app_styles';\n\n\n//----COMPONENT----//\nconst CartScreen = ({navigation}) => {\n    //Data and State\n    const {state: {scales, language, appSettings}} = useContext(AppSettingsContext);\n    const {state: {cart}, clearCart} = useContext(MenuContext);\n    const [totalProductsPrice, setTotalProductsPrice] = useState({\n        total: 0,\n        extraIngredients: 0\n    });\n\n\n\n    useEffect(() => {\n        setTotalProductsPrice(calculatePrice())\n    }, [language, cart])\n\n\n    const populateCartProducts = () => {\n        let products = cart.map((product, index) => {\n            return (\n                <View key={product.uid || product.id}>\n                    <ProductCardCart product={product}/>\n                    {\n                        (index < (cart.length - 1))\n                            ? <Spacer spaceHeight={20}/>\n                            : null\n                    }\n                </View>\n            )\n        });\n        return products;\n    }\n\n\n\n    const calculatePrice = () => {\n        let total = 0;\n        let extraIngredients = 0;\n\n        cart.forEach(item => {\n            total += (Number(item.quantity) * getProductPrice(item))\n            if (!isPizza(item)) {\n                if (hasIngredients(item)) {\n                    let value = 0;\n                    item.main_ingredients.forEach(ingr => {\n                        if (ingr.checked) {\n                            value += (parseFloat(ingr.quantity) * parseFloat(ingr.price))\n                        }\n                    });\n                    extraIngredients += (value * item.quantity);\n                }\n            }\n        });\n\n        return {total, extraIngredients};\n    }\n\n\n    const getProductPrice = (product) => {\n        if (product.total_one_product_price) {\n            return parseFloat(product.total_one_product_price);\n        }\n        return getVariantPrice(product);\n    }\n\n\n    const getVariantPrice = (product) => {\n        let variant = product.variants.find(item => item.size === product.size);\n        return variant ? parseFloat(variant['price']) : product.variants[0]['price'];\n    }\n\n\n    const isPizza = (product) => {\n        return !!(product.category.id === parseInt(appSettings.pizzaCategoryId));\n    }\n\n\n    const hasIngredients = (product) => {\n        return !!product.category.has_ingredients;\n    }\n\n\n    //Template\n    return (\n        <>\n            <SafeView>\n                <Header\n                    title={translator.translate(language, \"Кошик\")}\n                    backAllowed\n                    exclamationForCart\n                    navigation={navigation}\n                />\n                <View style={styles(scales).body}>\n                    {\n                        cart.length\n                            ? (\n                                <ScrollView showsVerticalScrollIndicator={false} bounces={false}\n                                            keyboardShouldPersistTaps={'always'}>\n                                    {populateCartProducts()}\n                                    <Spacer spaceHeight={20}/>\n                                    <ButtonClearCart\n                                        callback={clearCart}\n                                        title={translator.translate(language, \"Очистити кошик\")}\n                                    />\n                                    <Spacer spaceHeight={30}/>\n                                    {/* Order info */}\n                                    <Block>\n                                        <Spacer spaceHeight={10}/>\n                                        <View style={app_styles(scales).row_between}>\n                                            <Text\n                                                style={styles(scales).total_title}>{translator.translate(language, \"Всього на суму\")}</Text>\n                                            <Text\n                                                style={styles(scales).total_price}>{formatPrice(language, (totalProductsPrice.total + totalProductsPrice.extraIngredients))} {translator.translate(language, \"грн\")}</Text>\n\n                                        </View>\n                                        <Spacer spaceHeight={40}/>\n                                        <ButtonPrimary\n                                            color={app_styles(scales).colors.app.blue}\n                                            callback={() => navigation.navigate('MakeOrder')}\n                                            title={translator.translate(language, \"Оформити замовлення\")}\n                                        />\n                                        <Spacer spaceHeight={42}/>\n                                    </Block>\n                                </ScrollView>\n                            )\n                            : <EmptyCartBlock/>\n                    }\n                </View>\n            </SafeView>\n        </>\n    );\n}\n\n\n//----EXPORT----//\nexport default CartScreen;"]},"metadata":{},"sourceType":"module"}