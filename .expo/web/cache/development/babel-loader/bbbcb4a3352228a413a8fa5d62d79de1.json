{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/components/modals/MenuModal.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport translator from \"../../translator/translator\";\nimport styles from \"../../styles/components/modals/menu-modal\";\nimport { app_styles } from \"../../styles/app_styles\";\n\nvar MenuModal = function MenuModal(_ref) {\n  var isOpened = _ref.isOpened,\n      closeCallback = _ref.closeCallback,\n      menu = _ref.menu;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language,\n      contacts = _useContext$state.contacts;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      pageIndex = _useState2[0],\n      setPageIndex = _useState2[1];\n\n  useEffect(function () {}, []);\n\n  var changePage = function changePage(type) {\n    if (type === '-') {\n      if (pageIndex < 1) {\n        return;\n      } else {\n        setPageIndex(pageIndex - 1);\n      }\n    } else {\n      if (pageIndex >= menu.images.length - 1) {\n        return;\n      } else {\n        setPageIndex(pageIndex + 1);\n      }\n    }\n  };\n\n  return React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: isOpened,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles(scales).modal_card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [app_styles(scales).row_between, styles(scales).header_cont],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, translator.translate(language, \"Меню Ресторану\")), React.createElement(TouchableOpacity, {\n    onPress: closeCallback,\n    style: styles(scales).close_modal_button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"cancel\",\n    color: app_styles(scales).colors.text.primary,\n    size: Math.round(scales.widthScale * 14),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }))), React.createElement(View, {\n    style: styles(scales).card_body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: menu.images[pageIndex]['image']\n    },\n    style: styles(scales).thumbnail_menu_image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles(scales).btn_group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles(scales).btn_manipulator,\n    activeOpacity: .8,\n    onPress: function onPress() {\n      return changePage('-');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"arrow_back\",\n    size: Math.round(scales.widthScale * 20),\n    color: app_styles(scales).colors.app.black,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    style: styles(scales).pages_cont,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, translator.translate(language, \"Сторінка\"), \": \"), React.createElement(Text, {\n    style: styles(scales).page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, pageIndex + 1, \" / \", menu.images.length)), React.createElement(TouchableOpacity, {\n    style: styles(scales).btn_manipulator,\n    activeOpacity: .8,\n    onPress: function onPress() {\n      return changePage('+');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"arrow_forward\",\n    size: Math.round(scales.widthScale * 20),\n    color: app_styles(scales).colors.app.white,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default MenuModal;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/modals/MenuModal.js"],"names":["React","useContext","useState","useEffect","Context","AppSettingsContext","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","translator","styles","app_styles","MenuModal","isOpened","closeCallback","menu","state","scales","language","contacts","pageIndex","setPageIndex","changePage","type","images","length","modal_card","row_between","header_cont","title","translate","close_modal_button","colors","text","primary","Math","round","widthScale","card_body","uri","thumbnail_menu_image","btn_group","btn_manipulator","app","black","pages_cont","page","white"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext, useState, useEffect } from 'react';\n//React native\nimport { View, Text, Modal, TouchableOpacity, Image, Dimensions } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//React-native-vector-icons package\nimport { createIconSetFromIcoMoon } from 'react-native-vector-icons';\nimport icoMoonConfig from '../../../selection.json';\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Translator\nimport translator from \"../../translator/translator\";\n//Styles\nimport styles from \"../../styles/components/modals/menu-modal\";\nimport { app_styles } from \"../../styles/app_styles\";\n\n\n\n//----COMPONENT----//\nconst MenuModal = ({ isOpened, closeCallback, menu }) => {\n    //Data and State\n    const { state: { scales, language, contacts } } = useContext(AppSettingsContext);\n    const [pageIndex, setPageIndex] = useState(0);\n\n\n\n    //hooks and Methods\n    useEffect(() => {\n    }, []);\n\n\n\n    const changePage = (type) => {\n        if (type === '-') {\n            if (pageIndex < 1) {\n                return;\n            } else {\n                setPageIndex(pageIndex - 1)\n            }\n        } else {\n            if (pageIndex >= menu.images.length - 1) {\n                return\n            } else {\n                setPageIndex(pageIndex + 1)\n            }\n        }\n\n    }\n\n\n\n\n    //Template\n    return (\n        <Modal\n            animationType=\"fade\"\n            transparent={true}\n            visible={isOpened}\n        >\n            <View style={styles(scales).modal_card}>\n                {/* Card Header */}\n                <View style={[app_styles(scales).row_between, styles(scales).header_cont]}>\n                    <Text style={styles(scales).title}>{translator.translate(language, \"Меню Ресторану\")}</Text>\n                    <TouchableOpacity onPress={closeCallback} style={styles(scales).close_modal_button}>\n                        <IcoMoonIcon name=\"cancel\" color={app_styles(scales).colors.text.primary} size={Math.round(scales.widthScale * 14)} />\n                    </TouchableOpacity>\n                </View>\n                {/* Card body */}\n                <View style={styles(scales).card_body}>\n                    <Image\n                        source={{ uri: menu.images[pageIndex]['image'] }}\n                        style={styles(scales).thumbnail_menu_image}\n                    />\n                    <View style={styles(scales).btn_group}>\n                        <TouchableOpacity style={styles(scales).btn_manipulator} activeOpacity={.8} onPress={() => changePage('-')}>\n                            <IcoMoonIcon\n                                name=\"arrow_back\"\n                                size={Math.round(scales.widthScale * 20)}\n                                color={app_styles(scales).colors.app.black}\n                            />\n                        </TouchableOpacity>\n                        <View style={styles(scales).pages_cont}>\n                            <Text style={styles(scales).page}>{translator.translate(language, \"Сторінка\")}: </Text>\n                            <Text style={styles(scales).page}>{pageIndex + 1} / {menu.images.length}</Text>\n                        </View>\n                        <TouchableOpacity style={styles(scales).btn_manipulator} activeOpacity={.8} onPress={() => changePage('+')}>\n                            <IcoMoonIcon\n                                name=\"arrow_forward\"\n                                size={Math.round(scales.widthScale * 20)}\n                                color={app_styles(scales).colors.app.white}\n                            />\n                        </TouchableOpacity>\n                    </View>\n                </View>\n            </View>\n        </Modal>\n    )\n}\n\n\n\n\n//----EXPORT----//\nexport default MenuModal;"]},"metadata":{},"sourceType":"module"}