{"ast":null,"code":"var _jsxFileName = \"/home/alex/workspace/papamama/src/components/buttons/ButtonFacebook.js\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport styles from \"../../styles/components/buttons/button-facebook\";\nimport { app_styles } from \"../../styles/app_styles.js\";\n\nvar ButtonPrimary = function ButtonPrimary(_ref) {\n  var title = _ref.title,\n      callback = _ref.callback,\n      color = _ref.color,\n      isDataLoading = _ref.isDataLoading;\n\n  var _useContext = useContext(AppSettingsContext),\n      scales = _useContext.state.scales;\n\n  return React.createElement(TouchableOpacity, {\n    style: [styles(scales).button, {\n      backgroundColor: color\n    }],\n    onPress: callback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, isDataLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: app_styles(scales).colors.app.white,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  }) : React.createElement(View, {\n    style: styles(scales).inner_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../../assets/images/facebook.png\"),\n    style: styles(scales).logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }, title)));\n};\n\nexport default ButtonPrimary;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/buttons/ButtonFacebook.js"],"names":["React","useContext","Context","AppSettingsContext","styles","app_styles","ButtonPrimary","title","callback","color","isDataLoading","scales","state","button","backgroundColor","colors","app","white","inner_container","require","logo"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;;AAIA,SAASC,OAAO,IAAIC,kBAApB;AAEA,OAAOC,MAAP;AACA,SAASC,UAAT;;AAMA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA+C;AAAA,MAA5CC,KAA4C,QAA5CA,KAA4C;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;AAAA,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AAAA,oBAEnCT,UAAU,CAACE,kBAAD,CAFyB;AAAA,MAEhDQ,MAFgD,eAEzDC,KAFyD,CAEhDD,MAFgD;;AAKjE,SACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,CAACP,MAAM,CAACO,MAAD,CAAN,CAAeE,MAAhB,EAAwB;AAACC,MAAAA,eAAe,EAAEL;AAAlB,KAAxB,CAAzB;AAA4E,IAAA,OAAO,EAAED,QAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,aAAa,GACP,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEL,UAAU,CAACM,MAAD,CAAV,CAAmBI,MAAnB,CAA0BC,GAA1B,CAA8BC,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAGL,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACO,MAAD,CAAN,CAAeO,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEC,OAAO,uCADnB;AAEI,IAAA,KAAK,EAAEf,MAAM,CAACO,MAAD,CAAN,CAAeS,IAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACO,MAAD,CAAN,CAAeJ,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCA,KAApC,CALJ,CALhB,CADJ;AAiBH,CAtBD;;AA4BA,eAAeD,aAAf","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext } from 'react';\n//React native\nimport { View, Text, TouchableOpacity, ActivityIndicator, Image } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//Styles\nimport styles from \"../../styles/components/buttons/button-facebook\";\nimport { app_styles } from '../../styles/app_styles.js';\n\n\n\n\n//----COMPONENT----//\nconst ButtonPrimary = ({ title, callback, color, isDataLoading }) => {\n    //Data and State\n    const { state: { scales } } = useContext(AppSettingsContext);\n\n    //Template\n    return (\n        <TouchableOpacity style={[styles(scales).button, {backgroundColor: color}]} onPress={callback}>\n            {\n                isDataLoading\n                    ? <ActivityIndicator size=\"small\" color={app_styles(scales).colors.app.white} />\n                    : (\n                        <View style={styles(scales).inner_container}>\n                            <Image \n                                source={require(\"../../../assets/images/facebook.png\")}\n                                style={styles(scales).logo}\n                            />\n                            <Text style={styles(scales).title}>{title}</Text>\n                        </View>\n                    )\n            }\n        </TouchableOpacity>\n    );\n}\n\n\n\n\n//----EXPORT----//\nexport default ButtonPrimary;"]},"metadata":{},"sourceType":"module"}