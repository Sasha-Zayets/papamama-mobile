{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { navigate } from \"../_navigationRefs\";\nvar axiosWithErrorHandler = axios.create({\n  timeout: 8000\n});\naxiosWithErrorHandler.interceptors.response.use(function _callee(config) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(config.data.status === 'error')) {\n            _context.next = 4;\n            break;\n          }\n\n          if (!(Number(config.data.code) === 524)) {\n            _context.next = 3;\n            break;\n          }\n\n          return _context.abrupt(\"return\", navigate('UpdateApp', {\n            'message': config.data.message\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", Promise.reject(config));\n\n        case 4:\n          return _context.abrupt(\"return\", config);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}, function (err) {\n  return Promise.reject(err);\n});\nexport default axiosWithErrorHandler;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/services/axiosWithErrorHandler.js"],"names":["axios","navigate","axiosWithErrorHandler","create","timeout","interceptors","response","use","config","data","status","Number","code","message","Promise","reject","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT;AAKA,IAAMC,qBAAqB,GAAGF,KAAK,CAACG,MAAN,CAAa;AACvCC,EAAAA,OAAO,EAAE;AAD8B,CAAb,CAA9B;AAKAF,qBAAqB,CAACG,YAAtB,CAAmCC,QAAnC,CAA4CC,GAA5C,CAAgD,iBAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBACxCA,MAAM,CAACC,IAAP,CAAYC,MAAZ,KAAuB,OADiB;AAAA;AAAA;AAAA;;AAAA,gBAEpCC,MAAM,CAACH,MAAM,CAACC,IAAP,CAAYG,IAAb,CAAN,KAA6B,GAFO;AAAA;AAAA;AAAA;;AAAA,2CAG7BX,QAAQ,CAAC,WAAD,EAAc;AAAC,uBAAWO,MAAM,CAACC,IAAP,CAAYI;AAAxB,WAAd,CAHqB;;AAAA;AAAA,2CAKjCC,OAAO,CAACC,MAAR,CAAeP,MAAf,CALiC;;AAAA;AAAA,2CAOrCA,MAPqC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhD,EAQG,UAAUQ,GAAV,EAAe;AACd,SAAOF,OAAO,CAACC,MAAR,CAAeC,GAAf,CAAP;AACH,CAVD;AAYA,eAAed,qBAAf","sourcesContent":["import axios from 'axios';\nimport { navigate } from \"../_navigationRefs\";\n\n\n\n\nconst axiosWithErrorHandler = axios.create({\n    timeout: 8000\n});\n\n\naxiosWithErrorHandler.interceptors.response.use(async function (config) {        \n    if (config.data.status === 'error') {        \n        if (Number(config.data.code) === 524) {\n            return navigate('UpdateApp', {'message': config.data.message})\n        } \n        return Promise.reject(config);\n    }\n    return config;\n}, function (err) {\n    return Promise.reject(err)\n})\n\nexport default axiosWithErrorHandler;"]},"metadata":{},"sourceType":"module"}