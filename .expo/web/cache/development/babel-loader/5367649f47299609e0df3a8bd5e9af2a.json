{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/screens/NewsScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport axios from \"axios\";\nimport { BASE_URL, APP_VERSION } from \"../different/global_vars\";\nimport { prepareLanguageToHttpRequest } from \"../helpers/helpers\";\nimport { NavigationEvents } from 'react-navigation';\nimport { SafeView, DataLoadingIndicator, FlatListFooter, Block, Spacer } from \"../components/shared\";\nimport Header from \"../components/shared/Header\";\nimport NoContentBlock from \"../components/shared/NoContentBlock\";\nimport { NetworkErrorModal } from \"../components/modals\";\nimport NewsCard from \"../components/news/NewsCard\";\nimport translator from \"../translator/translator\";\nimport styles from \"../styles/screens/news-screen\";\n\nvar NewsScreen = function NewsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      news = _useState2[0],\n      setNews = _useState2[1];\n\n  var _useState3 = useState({\n    language: null\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newsMetaData = _useState4[0],\n      setNewsMetaData = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDataLoading = _useState6[0],\n      setIsDataLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isMoreDataLoading = _useState8[0],\n      setIsMoreDataLoading = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isDataRefreshing = _useState10[0],\n      setIsDataRefreshing = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  useEffect(function () {}, [language]);\n\n  var fetchNews = function fetchNews() {\n    var isRefresh,\n        isMore,\n        page,\n        lang,\n        url,\n        response,\n        news_data,\n        meta,\n        data,\n        _args = arguments;\n    return _regeneratorRuntime.async(function fetchNews$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            isRefresh = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n            isMore = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n            page = _args.length > 2 && _args[2] !== undefined ? _args[2] : 1;\n            _context.prev = 3;\n\n            if (isMore) {\n              setIsMoreDataLoading(true);\n            } else if (isRefresh) {\n              setIsDataRefreshing(true);\n            } else {\n              setIsDataLoading(true);\n            }\n\n            lang = prepareLanguageToHttpRequest(language);\n            url = BASE_URL + \"/event/events?lang=\" + lang + \"&version=\" + APP_VERSION + \"&page=\" + page + \"&limit=4\";\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(axios.get(url));\n\n          case 9:\n            response = _context.sent;\n\n            if (!(response && response.data && response.data.data)) {\n              _context.next = 25;\n              break;\n            }\n\n            news_data = response.data.data;\n            meta = _objectSpread({\n              language: language\n            }, response.data.meta);\n\n            if (!(news_data && news_data.length)) {\n              _context.next = 21;\n              break;\n            }\n\n            data = isMore ? [].concat(_toConsumableArray(news), _toConsumableArray(news_data)) : news_data;\n            setNews(data);\n            setNewsMetaData(meta);\n            setError(false);\n            return _context.abrupt(\"return\", news_data);\n\n          case 21:\n            setNews(true);\n            setError(false);\n\n          case 23:\n            _context.next = 27;\n            break;\n\n          case 25:\n            setNews(false);\n            setError(true);\n\n          case 27:\n            _context.next = 33;\n            break;\n\n          case 29:\n            _context.prev = 29;\n            _context.t0 = _context[\"catch\"](3);\n            setNews(false);\n            setError(true);\n\n          case 33:\n            _context.prev = 33;\n\n            if (isMore) {\n              setIsMoreDataLoading(false);\n            } else if (isRefresh) {\n              setIsDataRefreshing(false);\n            } else {\n              setIsDataLoading(false);\n            }\n\n            return _context.finish(33);\n\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 29, 33, 36]], Promise);\n  };\n\n  var handleFocus = function handleFocus() {\n    if (!news || !news.length || newsMetaData.language !== language) {\n      return fetchNews();\n    }\n  };\n\n  var downloadMoreNews = function downloadMoreNews() {\n    if (isMoreDataLoading) return;\n    var currentPage = parseInt(newsMetaData.current_page);\n    var lastPage = parseInt(newsMetaData.total_pages);\n    var nextPage = currentPage + 1;\n    if (nextPage > lastPage) return;\n    return fetchNews(false, true, nextPage);\n  };\n\n  var renderListFooterComponent = function renderListFooterComponent() {\n    return isMoreDataLoading ? React.createElement(FlatListFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 36\n      }\n    }) : null;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, React.createElement(NavigationEvents, {\n    onWillFocus: handleFocus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), React.createElement(Header, {\n    title: translator.translate(language, \"Новини\"),\n    backAllowed: true,\n    navigation: navigation,\n    noIcons: true,\n    appMenu: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, !error ? !isDataLoading ? news ? news.length ? React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 57\n    }\n  }, React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    keyExtractor: function keyExtractor(post) {\n      return \"key\" + post.id;\n    },\n    data: news,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(NewsCard, {\n        navigation: navigation,\n        preview: true,\n        post: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 96\n        }\n      });\n    },\n    contentContainerStyle: {\n      paddingVertical: Math.round(scales.heightScale * 20)\n    },\n    ListFooterComponent: function ListFooterComponent() {\n      return renderListFooterComponent();\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(Spacer, {\n        spaceHeight: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 95\n        }\n      });\n    },\n    bounces: false,\n    onEndReached: downloadMoreNews,\n    onEndReachedThreshold: 0.05,\n    onRefresh: function onRefresh() {\n      return fetchNews(true);\n    },\n    refreshing: isDataRefreshing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 61\n    }\n  })) : React.createElement(NoContentBlock, {\n    icon: \"news\",\n    title: translator.translate(language, \"Вибачте\"),\n    note: translator.translate(language, \"Наданий момент актуальні новини відстуні.\"),\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 55\n    }\n  }) : null : React.createElement(DataLoadingIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 39\n    }\n  }) : React.createElement(NetworkErrorModal, {\n    isOpened: error,\n    closeCallback: function closeCallback() {\n      return setError(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 31\n    }\n  }))));\n};\n\nexport default NewsScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/NewsScreen.js"],"names":["React","useContext","useEffect","useState","Context","AppSettingsContext","axios","BASE_URL","APP_VERSION","prepareLanguageToHttpRequest","NavigationEvents","SafeView","DataLoadingIndicator","FlatListFooter","Block","Spacer","Header","NoContentBlock","NetworkErrorModal","NewsCard","translator","styles","NewsScreen","navigation","state","scales","language","news","setNews","newsMetaData","setNewsMetaData","isDataLoading","setIsDataLoading","isMoreDataLoading","setIsMoreDataLoading","isDataRefreshing","setIsDataRefreshing","error","setError","fetchNews","isRefresh","isMore","page","lang","url","get","response","data","news_data","meta","length","handleFocus","downloadMoreNews","currentPage","parseInt","current_page","lastPage","total_pages","nextPage","renderListFooterComponent","translate","body","post","id","item","index","paddingVertical","Math","round","heightScale"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, {useContext, useEffect, useState} from 'react';\n//React native\nimport {FlatList, View, Text} from 'react-native';\n//Context\nimport {Context as AppSettingsContext} from \"../context/AppSettingsContext\";\n//Api\nimport axios from \"axios\";\n//Global vars\nimport {BASE_URL, APP_VERSION} from \"../different/global_vars\";\n//Helpers\nimport {prepareLanguageToHttpRequest} from \"../helpers/helpers\";\n//Navigation Events\nimport {NavigationEvents} from 'react-navigation';\n//Components\nimport {SafeView, DataLoadingIndicator, FlatListFooter, Block, Spacer} from \"../components/shared\";\nimport Header from \"../components/shared/Header\";\nimport NoContentBlock from \"../components/shared/NoContentBlock\";\nimport {NetworkErrorModal} from \"../components/modals\";\nimport NewsCard from \"../components/news/NewsCard\";\n//Localization\nimport translator from \"../translator/translator\";\n//Styles\nimport styles from \"../styles/screens/news-screen\";\n\n\n//----COMPONENT----//\nconst NewsScreen = ({navigation}) => {\n    //Data and State\n    const {state: {scales, language}} = useContext(AppSettingsContext);\n    const [news, setNews] = useState(false);\n    const [newsMetaData, setNewsMetaData] = useState({\n        language: null\n    });\n    const [isDataLoading, setIsDataLoading] = useState(false);\n    const [isMoreDataLoading, setIsMoreDataLoading] = useState(false);\n    const [isDataRefreshing, setIsDataRefreshing] = useState(false);\n    const [error, setError] = useState(false);\n\n\n    //Methods and hooks\n    useEffect(() => {\n\n    }, [language]);\n\n\n    const fetchNews = async (isRefresh = false, isMore = false, page = 1) => {\n        try {\n            if (isMore) {\n                setIsMoreDataLoading(true);\n            } else if (isRefresh) {\n                setIsDataRefreshing(true);\n            } else {\n                setIsDataLoading(true);\n            }\n\n            const lang = prepareLanguageToHttpRequest(language);\n            const url = `${BASE_URL}/event/events?lang=${lang}&version=${APP_VERSION}&page=${page}&limit=4`;\n\n            const response = await axios.get(url);\n\n            if (response && response.data && response.data.data) {\n                let news_data = response.data.data;\n                let meta = {language, ...response.data.meta}\n\n                if (news_data && news_data.length) {\n                    let data = isMore ? [...news, ...news_data] : news_data;\n                    setNews(data);\n                    setNewsMetaData(meta);\n                    setError(false);\n                    return news_data;\n                } else {\n                    setNews(true);\n                    setError(false);\n                }\n            } else {\n                setNews(false);\n                setError(true);\n            }\n        } catch (error) {\n            setNews(false);\n            setError(true);\n        } finally {\n            if (isMore) {\n                setIsMoreDataLoading(false);\n            } else if (isRefresh) {\n                setIsDataRefreshing(false);\n            } else {\n                setIsDataLoading(false);\n            }\n        }\n    }\n\n\n    const handleFocus = () => {\n        if (!news || !news.length || newsMetaData.language !== language) {\n            return fetchNews();\n        }\n    }\n\n\n    const downloadMoreNews = () => {\n        if (isMoreDataLoading) return;\n\n        let currentPage = parseInt(newsMetaData.current_page);\n        let lastPage = parseInt(newsMetaData.total_pages);\n        let nextPage = currentPage + 1;\n\n        if (nextPage > lastPage) return;\n        return fetchNews(false, true, nextPage);\n    }\n\n\n    const renderListFooterComponent = () => {\n        return isMoreDataLoading ? <FlatListFooter/> : null\n    }\n\n\n    //Template\n    return (\n        <>\n            <SafeView>\n                <NavigationEvents\n                    onWillFocus={handleFocus}\n                />\n                <Header\n                    title={translator.translate(language, \"Новини\")}\n                    backAllowed\n                    navigation={navigation}\n                    noIcons\n                    appMenu\n                />\n                <View style={styles(scales).body}>\n                    {\n                        !error\n                            ? (\n                                !isDataLoading\n                                    ? (\n                                        news\n                                            ? (\n                                                news.length\n                                                    ? (\n                                                        <Block>\n                                                            <FlatList\n                                                                showsVerticalScrollIndicator={false}\n                                                                keyExtractor={post => \"key\" + post.id}\n                                                                data={news}\n                                                                renderItem={({item, index}) => <NewsCard navigation={navigation} preview\n                                                                                                         post={item}/>}\n                                                                contentContainerStyle={{paddingVertical: Math.round(scales.heightScale * 20)}}\n                                                                ListFooterComponent={() => renderListFooterComponent()}\n                                                                ItemSeparatorComponent={() => <Spacer spaceHeight={24}/>}\n                                                                bounces={false}\n                                                                onEndReached={downloadMoreNews}\n                                                                onEndReachedThreshold={0.05}\n                                                                onRefresh={() => fetchNews(true)}\n                                                                refreshing={isDataRefreshing}\n                                                            />\n                                                        </Block>\n                                                    )\n                                                    : <NoContentBlock\n                                                        icon=\"news\"\n                                                        title={translator.translate(language, \"Вибачте\")}\n                                                        note={translator.translate(language, \"Наданий момент актуальні новини відстуні.\")}\n                                                        navigation={navigation}\n                                                    />\n                                            )\n                                            : null\n                                    )\n                                    : <DataLoadingIndicator/>\n                            )\n                            : <NetworkErrorModal\n                                isOpened={error}\n                                closeCallback={() => setError(false)}\n                            />\n                    }\n                </View>\n            </SafeView>\n        </>\n    )\n}\n\n\n//----EXPORT----//\nexport default NewsScreen;"]},"metadata":{},"sourceType":"module"}