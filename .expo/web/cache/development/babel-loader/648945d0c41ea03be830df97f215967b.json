{"ast":null,"code":"var _jsxFileName = \"/home/alex/workspace/papamama/src/components/inputs/TextAreaInput.js\";\nimport React, { useContext, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport { Spacer } from \"../shared\";\nimport styles from \"../../styles/components/inputs/textarea-input\";\nimport { app_styles } from \"../../styles/app_styles\";\n\nvar TextAreaInput = function TextAreaInput(_ref) {\n  var value = _ref.value,\n      placeholder = _ref.placeholder,\n      error = _ref.error,\n      clearError = _ref.clearError,\n      callback = _ref.callback,\n      name = _ref.name,\n      onMakeOrder = _ref.onMakeOrder;\n\n  var _useContext = useContext(AppSettingsContext),\n      scales = _useContext.state.scales;\n\n  var arrangeFocus = function arrangeFocus() {\n    if (error) {\n      clearError(name);\n    }\n  };\n\n  var handleInput = function handleInput(value) {\n    callback(name, value);\n  };\n\n  var extraInputStyles = function extraInputStyles() {\n    return {\n      borderWidth: Math.round(scales.widthScale * 1),\n      borderColor: value ? app_styles(scales).colors.text.primary : app_styles(scales).colors.text.light_grey,\n      color: value ? app_styles(scales).colors.text.primary : app_styles(scales).colors.text.light_grey,\n      fontSize: onMakeOrder ? Math.round(scales.fontScale * 16) : Math.round(scales.fontScale * 12)\n    };\n  };\n\n  var extraPlaceholderStyles = function extraPlaceholderStyles() {\n    return {\n      fontSize: onMakeOrder ? Math.round(scales.fontScale * 16) : Math.round(scales.fontScale * 12)\n    };\n  };\n\n  return React.createElement(View, {\n    style: styles(scales).main_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles(scales).input_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: [styles(scales).input, extraInputStyles()],\n    placeholderTextColor: app_styles(scales).colors.text.light_grey,\n    placeholderStyle: [styles(scales).placeholder_style, extraPlaceholderStyles()],\n    placeholder: placeholder,\n    autocapitalize: \"none\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(value) {\n      return handleInput(value);\n    },\n    value: value,\n    onFocus: function onFocus() {\n      return arrangeFocus(name);\n    },\n    multiline: true,\n    numberOfLines: Platform.OS === 'ios' ? null : onMakeOrder ? Math.round(scales.heightScale * 4) : Math.round(scales.heightScale * 5),\n    minHeight: Platform.OS === 'ios' ? Math.round(scales.heightScale * (40 * 4)) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), error ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).error_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, error))) : null);\n};\n\nexport default TextAreaInput;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/inputs/TextAreaInput.js"],"names":["React","useContext","useState","Context","AppSettingsContext","Spacer","styles","app_styles","TextAreaInput","value","placeholder","error","clearError","callback","name","onMakeOrder","scales","state","arrangeFocus","handleInput","extraInputStyles","borderWidth","Math","round","widthScale","borderColor","colors","text","primary","light_grey","color","fontSize","fontScale","extraPlaceholderStyles","main_container","input_container","input","placeholder_style","Platform","OS","heightScale","error_text"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext, useState } from 'react';\n//React native\nimport { Text, View, TextInput, Platform } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//Components\nimport { Spacer } from '../shared';\n//Styles\nimport styles from \"../../styles/components/inputs/textarea-input\";\nimport { app_styles } from '../../styles/app_styles';\n\n\n\n\n//----COMPONENT----//\nconst TextAreaInput = ({ value, placeholder, error, clearError, callback, name, onMakeOrder }) => {\n    //Data and State\n    const { state: { scales } } = useContext(AppSettingsContext);\n\n\n    //Hooks and Methods\n    const arrangeFocus = () => {\n        if(error){\n            clearError(name);\n        }\n    }\n\n    const handleInput = (value) => {\n        callback(name, value)\n    }\n\n\n\n    const extraInputStyles = () => {\n        return { \n            borderWidth: Math.round(scales.widthScale * 1), \n            borderColor: value ? app_styles(scales).colors.text.primary : app_styles(scales).colors.text.light_grey,\n            color: value ? app_styles(scales).colors.text.primary : app_styles(scales).colors.text.light_grey,\n            fontSize: onMakeOrder ? Math.round(scales.fontScale * 16) : Math.round(scales.fontScale * 12)\n        }\n    }\n\n    const extraPlaceholderStyles = () => {\n        return {\n            fontSize: onMakeOrder ? Math.round(scales.fontScale * 16) : Math.round(scales.fontScale * 12)\n        }\n    }\n\n\n\n\n    //Template\n    return (\n        <View style={styles(scales).main_container}>\n            <View style={styles(scales).input_container}>\n                <TextInput\n                    style={[styles(scales).input, extraInputStyles()]}\n                    placeholderTextColor={app_styles(scales).colors.text.light_grey}\n                    placeholderStyle={[styles(scales).placeholder_style, extraPlaceholderStyles()]}\n                    placeholder={placeholder}\n                    autocapitalize=\"none\"\n                    autoCorrect={false}\n                    onChangeText={(value) => handleInput(value)}\n                    value={value}\n                    onFocus={() => arrangeFocus(name)}\n                    multiline={true}\n                    numberOfLines={Platform.OS === 'ios' ? null : (onMakeOrder ? Math.round(scales.heightScale * 4) : Math.round(scales.heightScale * 5))}\n                    minHeight={Platform.OS === 'ios' ? Math.round(scales.heightScale * (40 * 4)) : null}\n                />\n            </View>\n            {\n                error ?\n                    (\n                        <>\n                            <Spacer spaceHeight={5} />\n                            <View>\n                                <Text style={styles(scales).error_text}>{error}</Text>\n                            </View>\n                        </>\n                    )\n                    : null\n            }\n        </View>\n    )\n}\n\n\n//----EXPORT----//\nexport default TextAreaInput;\n"]},"metadata":{},"sourceType":"module"}