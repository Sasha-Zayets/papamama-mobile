{"ast":null,"code":"var _jsxFileName = \"/home/alex/workspace/papamama/src/components/modals/ClearCartModal.js\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport translator from \"../../translator/translator\";\nimport { Spacer, VerticalSpacer, Block } from \"../shared\";\nimport { ButtonModal } from \"../buttons\";\nimport styles from \"../../styles/components/modals/shared-modal-styles\";\nimport { app_styles } from \"../../styles/app_styles\";\n\nvar ClearCartModal = function ClearCartModal(_ref) {\n  var isOpened = _ref.isOpened,\n      clearCallback = _ref.clearCallback,\n      cancelCallback = _ref.cancelCallback;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language;\n\n  return React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: isOpened,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles(scales).modal_content_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles(scales).modal_card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles(scales).card_body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles(scales).icon_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"question\",\n    color: app_styles(scales).colors.app.black,\n    size: Math.round(scales.widthScale * 50),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  })), React.createElement(Spacer, {\n    spaceHeight: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).card_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, translator.translate(language, \"Очистити кошик?\")), React.createElement(Spacer, {\n    spaceHeight: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: styles(scales).info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, translator.translate(language, \"Після очищення кошика, Вас буде переадресовано до 'Меню'\")), React.createElement(Spacer, {\n    spaceHeight: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, React.createElement(ButtonModal, {\n    title: translator.translate(language, \"Відміна\"),\n    callback: cancelCallback,\n    color: app_styles(scales).colors.app.blue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }), React.createElement(VerticalSpacer, {\n    spaceWidth: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 30\n    }\n  }), React.createElement(ButtonModal, {\n    title: translator.translate(language, \"Очистити\"),\n    callback: clearCallback,\n    color: app_styles(scales).colors.app.green,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default ClearCartModal;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/modals/ClearCartModal.js"],"names":["React","useContext","Context","AppSettingsContext","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","translator","Spacer","VerticalSpacer","Block","ButtonModal","styles","app_styles","ClearCartModal","isOpened","clearCallback","cancelCallback","state","scales","language","modal_content_container","modal_card","card_body","icon_container","colors","app","black","Math","round","widthScale","card_title","translate","info","row_between","blue","green"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext } from 'react';\n//React native\nimport { View, Text, Modal, TouchableOpacity } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//React-native-vector-icons package\nimport { createIconSetFromIcoMoon } from 'react-native-vector-icons';\nimport icoMoonConfig from '../../../selection.json';\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Translator\nimport translator from \"../../translator/translator\";\n//Components\nimport { Spacer, VerticalSpacer, Block } from \"../shared\";\nimport { ButtonModal } from \"../buttons\";\n//Styles\nimport styles from \"../../styles/components/modals/shared-modal-styles\";\nimport { app_styles } from \"../../styles/app_styles\";\n\n\n\n//----COMPONENT----//\nconst ClearCartModal = ({ isOpened, clearCallback, cancelCallback }) => {\n    //Data and State\n    const { state: { scales, language } } = useContext(AppSettingsContext);\n\n\n    //Template\n    return (\n        <Modal\n            animationType=\"fade\"\n            transparent={true}\n            visible={isOpened}\n        >\n            <View style={styles(scales).modal_content_container}>\n                <View style={styles(scales).modal_card}>\n                    {/* Card body */}\n                    <View style={styles(scales).card_body}>\n                        <View style={styles(scales).icon_container}>\n                            <IcoMoonIcon name=\"question\" color={app_styles(scales).colors.app.black} size={Math.round(scales.widthScale * 50)} />\n                        </View>\n                        <Spacer spaceHeight={16} />\n                        <Text style={styles(scales).card_title}>{translator.translate(language, \"Очистити кошик?\")}</Text>\n                        <Spacer spaceHeight={8} />\n                        <Text style={styles(scales).info}>{translator.translate(language, \"Після очищення кошика, Вас буде переадресовано до 'Меню'\")}</Text>\n                        <Spacer spaceHeight={30} />\n                        <View style={app_styles(scales).row_between}>\n                            <ButtonModal\n                                title={translator.translate(language, \"Відміна\")}\n                                callback={cancelCallback}\n                                color={app_styles(scales).colors.app.blue}\n                            />\n                             <VerticalSpacer spaceWidth={40} />\n                            <ButtonModal\n                                title={translator.translate(language, \"Очистити\")}\n                                callback={clearCallback}\n                                color={app_styles(scales).colors.app.green}\n                            />\n                        </View>\n                    </View>\n                </View>\n            </View>\n        </Modal>\n    )\n}\n\n\n\n\n//----EXPORT----//\nexport default ClearCartModal;\n"]},"metadata":{},"sourceType":"module"}