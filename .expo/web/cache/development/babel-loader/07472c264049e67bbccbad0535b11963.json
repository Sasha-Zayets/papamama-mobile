{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/components/inputs/SelectSauceInput.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport { HorizontalDivider } from \"../shared\";\nimport styles from \"../../styles/components/inputs/select-sauce-input\";\nimport { app_styles } from \"../../styles/app_styles\";\nimport translator from \"../../translator/translator\";\n\nvar SelectSauceInput = function SelectSauceInput(_ref) {\n  var callback = _ref.callback,\n      data = _ref.data;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      listOpened = _useState2[0],\n      setListOpened = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var handleSelect = function handleSelect(val) {\n    callback(val);\n    setValue(val);\n    setListOpened(false);\n  };\n\n  var getArrowPosition = function getArrowPosition() {\n    return listOpened ? \"-180deg\" : \"0deg\";\n  };\n\n  var handlePress = function handlePress() {\n    setListOpened(!listOpened);\n  };\n\n  var fetchSauceName = function fetchSauceName() {\n    return value.property;\n  };\n\n  var defineColor = function defineColor() {\n    return value ? app_styles(scales).colors.text.primary : app_styles(scales).colors.text.light_grey;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles(scales).input,\n    onPress: handlePress,\n    activeOpacity: .9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, value ? React.createElement(Text, {\n    style: [styles(scales).val, {\n      color: defineColor()\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }, fetchSauceName()) : React.createElement(Text, {\n    numberOfLines: 1,\n    style: [styles(scales).val, {\n      color: defineColor()\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }\n  }, translator.translate(language, \"Оберіть зі списку...\")), React.createElement(View, {\n    style: styles(scales).icon_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, React.createElement(IcoMoonIcon, {\n    size: Math.round(scales.widthScale * 8),\n    style: {\n      transform: [{\n        rotate: getArrowPosition()\n      }]\n    },\n    name: \"arrow-point-down\",\n    color: app_styles(scales).colors.text.light_grey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }))), React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: listOpened,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles(scales).modal_content_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles(scales).modal_card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles(scales).card_header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).card_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, translator.translate(language, \"Оберіть соус\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setListOpened(!listOpened);\n    },\n    style: styles(scales).close_modal_button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"cancel\",\n    color: app_styles(scales).colors.app.white,\n    size: Math.round(scales.widthScale * 12),\n    style: styles(scales).cancel_icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }))), React.createElement(View, {\n    style: styles(scales).card_body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      borderBottomLeftRadius: Math.round(scales.heightScale * 8),\n      borderBottomRightRadius: Math.round(scales.heightScale * 8),\n      flexGrow: 1,\n      height: 100,\n      flexBasis: 'auto'\n    },\n    showsVerticalScrollIndicator: false,\n    keyExtractor: function keyExtractor(item, index) {\n      return index + 'key';\n    },\n    data: data,\n    contentContainerStyle: {\n      borderBottomLeftRadius: Math.round(scales.heightScale * 8),\n      borderBottomRightRadius: Math.round(scales.heightScale * 8)\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleSelect(item);\n        },\n        style: {\n          borderBottomLeftRadius: Math.round(scales.heightScale * 8),\n          borderBottomRightRadius: Math.round(scales.heightScale * 8)\n        },\n        activeOpacity: .7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 41\n        }\n      }, React.createElement(View, {\n        style: styles(scales).item_list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 45\n        }\n      }, React.createElement(Text, {\n        style: styles(scales).items_list_title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 49\n        }\n      }, item.property)));\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(HorizontalDivider, {\n        color: app_styles(scales).colors.app.light_grey,\n        height: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 63\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default SelectSauceInput;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/inputs/SelectSauceInput.js"],"names":["React","useContext","useState","useEffect","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","Context","AppSettingsContext","HorizontalDivider","styles","app_styles","translator","SelectSauceInput","callback","data","state","scales","language","listOpened","setListOpened","value","setValue","handleSelect","val","getArrowPosition","handlePress","fetchSauceName","property","defineColor","colors","text","primary","light_grey","input","color","translate","icon_container","Math","round","widthScale","transform","rotate","modal_content_container","modal_card","card_header","card_title","close_modal_button","app","white","cancel_icon","card_body","borderBottomLeftRadius","heightScale","borderBottomRightRadius","flexGrow","height","flexBasis","item","index","item_list","items_list_title"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext, useState, useEffect } from 'react';\n//React native\nimport { TouchableOpacity, Text, View, Modal, TextInput, FlatList } from 'react-native';\n//React-native-vector-icons package\nimport { createIconSetFromIcoMoon } from 'react-native-vector-icons';\nimport icoMoonConfig from '../../../selection.json';\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//Components\nimport { HorizontalDivider } from \"../shared\";\n//Styles\nimport styles from \"../../styles/components/inputs/select-sauce-input\";\nimport { app_styles } from '../../styles/app_styles';\n//Localization\nimport translator from '../../translator/translator';\n\n\n\n\n//----COMPONENT----//\nconst SelectSauceInput = ({ callback, data }) => {\n    //Data and State\n    const { state: { scales, language } } = useContext(AppSettingsContext);\n    const [listOpened, setListOpened] = useState(false);\n    const [value, setValue] = useState(null);\n\n\n    //Hooks and Methods\n    const handleSelect = (val) => {\n        callback(val);\n        setValue(val);\n        setListOpened(false);\n    }\n\n\n    const getArrowPosition = () => {\n        return listOpened ? \"-180deg\" : \"0deg\";\n    }\n\n\n    const handlePress = () => {\n        setListOpened(!listOpened)\n    }\n\n    \n\n    const fetchSauceName = () => {\n        return value.property\n    }\n\n\n    const defineColor = () => {\n        return value ? app_styles(scales).colors.text.primary : app_styles(scales).colors.text.light_grey\n    }\n\n\n    \n    //Template\n    return (\n        <>\n            <TouchableOpacity style={styles(scales).input} onPress={handlePress} activeOpacity={.9}>\n                {\n                    value\n                    ? <Text style={[styles(scales).val, {color: defineColor()}]}>{fetchSauceName()}</Text>\n                    : <Text numberOfLines={1} style={[styles(scales).val, {color: defineColor()}]}>{translator.translate(language, \"Оберіть зі списку...\")}</Text>\n                }\n                <View style={styles(scales).icon_container}>\n                    <IcoMoonIcon\n                        size={Math.round(scales.widthScale * 8)}\n                        style={{ transform: [{ rotate: getArrowPosition() }] }}\n                        name=\"arrow-point-down\"\n                        color={app_styles(scales).colors.text.light_grey}\n                    />\n                </View>\n            </TouchableOpacity>\n            {/* Modal */}\n            <Modal\n                animationType=\"fade\"\n                transparent={true}\n                visible={listOpened}\n            >\n                <View style={styles(scales).modal_content_container}>\n                    <View style={styles(scales).modal_card}>\n                        {/* Card head */}\n                        <View style={styles(scales).card_header}>\n                            <Text style={styles(scales).card_title}>{translator.translate(language, \"Оберіть соус\")}</Text>\n                            <TouchableOpacity onPress={() => setListOpened(!listOpened)} style={styles(scales).close_modal_button}>\n                                <IcoMoonIcon name=\"cancel\" color={app_styles(scales).colors.app.white} size={Math.round(scales.widthScale * 12)} style={styles(scales).cancel_icon} />\n                            </TouchableOpacity>\n                        </View>\n                        {/* Card body */}\n                        <View style={styles(scales).card_body}>                            \n                            <FlatList\n                                style={{ borderBottomLeftRadius: Math.round(scales.heightScale * 8), borderBottomRightRadius: Math.round(scales.heightScale * 8), flexGrow: 1,  height: 100, flexBasis: 'auto'}}\n                                showsVerticalScrollIndicator={false}\n                                keyExtractor={(item, index) => index + 'key'}\n                                data={data}\n                                contentContainerStyle={{ borderBottomLeftRadius: Math.round(scales.heightScale * 8), borderBottomRightRadius: Math.round(scales.heightScale * 8) }}\n                                renderItem={({ item }) => {\n                                    return (\n                                        <TouchableOpacity onPress={() => handleSelect(item)} style={{ borderBottomLeftRadius: Math.round(scales.heightScale * 8), borderBottomRightRadius: Math.round(scales.heightScale * 8) }} activeOpacity={.7}>\n                                            <View style={styles(scales).item_list}>\n                                                <Text style={styles(scales).items_list_title}>{item.property}</Text>\n                                            </View>\n                                        </TouchableOpacity>\n                                    );\n                                }}\n                                ItemSeparatorComponent={() => <HorizontalDivider color={app_styles(scales).colors.app.light_grey} height={1} />}\n                            />\n                        </View>\n                    </View>\n                </View>\n            </Modal>\n        </>\n    )\n}\n\n\n//----EXPORT----//\nexport default SelectSauceInput;\n"]},"metadata":{},"sourceType":"module"}