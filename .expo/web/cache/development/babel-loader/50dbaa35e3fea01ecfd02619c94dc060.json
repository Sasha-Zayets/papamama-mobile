{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/screens/LogInScreen.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nimport * as Facebook from 'expo-facebook';\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer } from \"../components/shared\";\nimport { ButtonPrimary, ButtonFacebook, ButtonSimpleLink } from \"../components/buttons\";\nimport { PhoneInput, PasswordInput } from \"../components/inputs\";\nimport { NetworkErrorModal } from \"../components/modals\";\nimport translator from \"../translator/translator\";\nimport styles from \"../styles/screens/log-in-screen\";\nimport { app_styles } from \"../styles/app_styles\";\n\nvar LogInScreen = function LogInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      language = _useContext$state.language,\n      scales = _useContext$state.scales;\n\n  var _useContext2 = useContext(AuthContext),\n      _useContext2$state = _useContext2.state,\n      validationErrors = _useContext2$state.validationErrors,\n      networkError = _useContext2$state.networkError,\n      clearValidationErrors = _useContext2.clearValidationErrors,\n      setCustomerData = _useContext2.setCustomerData,\n      setValidationErrors = _useContext2.setValidationErrors,\n      clearNetworkError = _useContext2.clearNetworkError,\n      login = _useContext2.login,\n      facebookLogin = _useContext2.facebookLogin,\n      clearAllValidationsErrors = _useContext2.clearAllValidationsErrors;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoginProcess = _useState2[0],\n      setIsLoginProcess = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFacebookLoginProcess = _useState4[0],\n      setIsFacebookLoginProcess = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  useEffect(function () {\n    return function () {\n      clearAllValidationsErrors();\n    };\n  }, []);\n\n  var handlePhoneInput = function handlePhoneInput(value) {\n    autocompletePhone(value);\n  };\n\n  var autocompletePhone = function autocompletePhone(value) {\n    if (value !== null && value.length <= 5) {\n      setCustomerPhone(\"+380 \");\n    } else {\n      if (value === null) {\n        setCustomerPhone(null);\n        return;\n      }\n\n      if (value.length <= 17) {\n        refactorCurrentPhoneValue(value, [7, 11, 14], \" \");\n      } else if (value.length > 17) {\n        refactorCurrentPhoneValue(value, [7, 11, 14], \" \");\n        var phoneNumber = phone.substring(0, 17);\n        setCustomerPhone(phoneNumber);\n      }\n    }\n  };\n\n  var refactorCurrentPhoneValue = function refactorCurrentPhoneValue(value, charPositions, symbol) {\n    var splitedVal = value.split(\"\");\n\n    for (var i = 0; i < charPositions.length; i++) {\n      if (splitedVal[charPositions[i]] && splitedVal[charPositions[i]] !== symbol) {\n        var phoneNumber = phone.substring(0, charPositions[i]) + symbol + phone.substring(charPositions[i]) + value.substr(-1, 1);\n        setCustomerPhone(phoneNumber);\n        return;\n      } else {\n        setCustomerPhone(value);\n      }\n    }\n  };\n\n  var setCustomerPhone = function setCustomerPhone(value) {\n    setPhone(value);\n  };\n\n  var handlePasswordInput = function handlePasswordInput(name, value) {\n    setPassword(value);\n  };\n\n  var submitForm = function submitForm() {\n    var formData, cleanedPhone, form;\n    return _regeneratorRuntime.async(function submitForm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setIsLoginProcess(true);\n            formData = {\n              phone: phone,\n              password: password\n            };\n\n            if (!hasEmptyFields(formData)) {\n              _context.next = 6;\n              break;\n            }\n\n            setIsLoginProcess(false);\n            return _context.abrupt(\"return\");\n\n          case 6:\n            cleanedPhone = phone.replace(/\\s/g, '');\n            form = new FormData();\n            form.append('phone', cleanedPhone);\n            form.append('password', password);\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(login(form));\n\n          case 12:\n            setIsLoginProcess(false);\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            setIsLoginProcess(false);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n\n  var hasEmptyFields = function hasEmptyFields(data) {\n    var errors = {};\n\n    for (var key in data) {\n      if (!data[key]) {\n        errors[key] = translator.translate(language, \"Поле не може бути порожнім!\");\n      }\n\n      ;\n    }\n\n    if (Object.keys(errors).length) {\n      setValidationErrors(errors);\n      return true;\n    }\n\n    return false;\n  };\n\n  var loginWithFacebook = function loginWithFacebook() {\n    var _await$Facebook$logIn, type, token, form, message;\n\n    return _regeneratorRuntime.async(function loginWithFacebook$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsFacebookLoginProcess(true);\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(Facebook.initializeAsync(\"668596570367881\"));\n\n          case 4:\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync(\"668596570367881\", {\n              permissions: [\"public_profile\", \"email\"]\n            }));\n\n          case 6:\n            _await$Facebook$logIn = _context2.sent;\n            type = _await$Facebook$logIn.type;\n            token = _await$Facebook$logIn.token;\n\n            if (!(type === \"success\")) {\n              _context2.next = 22;\n              break;\n            }\n\n            _context2.prev = 10;\n            form = new FormData();\n            form.append('token', token);\n            _context2.next = 15;\n            return _regeneratorRuntime.awrap(facebookLogin(form));\n\n          case 15:\n            _context2.next = 20;\n            break;\n\n          case 17:\n            _context2.prev = 17;\n            _context2.t0 = _context2[\"catch\"](10);\n            Alert.alert(\"Помилка!\", \"Помилка авторизації через Facebook\");\n\n          case 20:\n            _context2.next = 23;\n            break;\n\n          case 22:\n            Alert.alert(\"Помилка!\", \"Помилка авторизації через Facebook\");\n\n          case 23:\n            _context2.next = 29;\n            break;\n\n          case 25:\n            _context2.prev = 25;\n            _context2.t1 = _context2[\"catch\"](1);\n            message = _context2.t1.message;\n            Alert.alert(\"Помилка!\", \"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0456\\u0457 \\u0447\\u0435\\u0440\\u0435\\u0437 Facebook \" + message);\n\n          case 29:\n            _context2.prev = 29;\n            setIsFacebookLoginProcess(false);\n            return _context2.finish(29);\n\n          case 32:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 25, 29, 32], [10, 17]], Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    title: translator.translate(language, \"Вхід\"),\n    backAllowed: true,\n    navigation: navigation,\n    noIcons: true,\n    appMenu: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, !networkError ? React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, React.createElement(Spacer, {\n    spaceHeight: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }), React.createElement(View, {\n    style: styles(scales).logo_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 37\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"logo_emma\",\n    size: Math.round(scales.widthScale * 75),\n    color: app_styles(scales).colors.app.blue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 41\n    }\n  })), React.createElement(Spacer, {\n    spaceHeight: 45,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }), React.createElement(PhoneInput, {\n    callback: handlePhoneInput,\n    clearError: clearValidationErrors,\n    value: phone,\n    name: \"phone\",\n    error: validationErrors.phone,\n    placeholder: translator.translate(language, \"Телефон\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 37\n    }\n  }), React.createElement(PasswordInput, {\n    callback: handlePasswordInput,\n    placeholder: translator.translate(language, \"Пароль\"),\n    clearError: clearValidationErrors,\n    value: password,\n    error: validationErrors.password,\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 37\n    }\n  }), React.createElement(ButtonPrimary, {\n    title: translator.translate(language, \"Увійти\"),\n    color: app_styles(scales).colors.app.blue,\n    isDataLoading: isLoginProcess,\n    callback: submitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 37\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 37\n    }\n  }), React.createElement(ButtonFacebook, {\n    title: translator.translate(language, \"Вхід через Facebook\"),\n    color: \"#4167B2\",\n    isDataLoading: isFacebookLoginProcess,\n    callback: loginWithFacebook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 37\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 60,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }), React.createElement(View, {\n    style: styles(scales).links_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 37\n    }\n  }, React.createElement(ButtonSimpleLink, {\n    title: translator.translate(language, \"Зареєструватися\"),\n    callback: function callback() {\n      return navigation.navigate('Registration');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 41\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 41\n    }\n  }), React.createElement(ButtonSimpleLink, {\n    title: translator.translate(language, \"Забули пароль?\"),\n    callback: function callback() {\n      return navigation.navigate('PasswordForgot');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 41\n    }\n  }))) : React.createElement(NetworkErrorModal, {\n    isOpened: networkError,\n    closeCallback: clearNetworkError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 31\n    }\n  }))));\n};\n\nexport default LogInScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/LogInScreen.js"],"names":["React","useEffect","useState","useContext","Context","AppSettingsContext","AuthContext","Facebook","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","Header","SafeView","Block","Spacer","ButtonPrimary","ButtonFacebook","ButtonSimpleLink","PhoneInput","PasswordInput","NetworkErrorModal","translator","styles","app_styles","LogInScreen","navigation","state","language","scales","validationErrors","networkError","clearValidationErrors","setCustomerData","setValidationErrors","clearNetworkError","login","facebookLogin","clearAllValidationsErrors","isLoginProcess","setIsLoginProcess","isFacebookLoginProcess","setIsFacebookLoginProcess","phone","setPhone","password","setPassword","handlePhoneInput","value","autocompletePhone","length","setCustomerPhone","refactorCurrentPhoneValue","phoneNumber","substring","charPositions","symbol","splitedVal","split","i","substr","handlePasswordInput","name","submitForm","formData","hasEmptyFields","cleanedPhone","replace","form","FormData","append","data","errors","key","translate","Object","keys","loginWithFacebook","initializeAsync","logInWithReadPermissionsAsync","permissions","type","token","Alert","alert","message","body","logo_container","Math","round","widthScale","colors","app","blue","links_container","navigate"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useEffect, useState, useContext } from 'react';\n//React native\nimport { View, Alert, Image } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\n//Expo\nimport * as Facebook from 'expo-facebook';\n//React-native-vector-icons package\nimport {createIconSetFromIcoMoon} from 'react-native-vector-icons';\nimport icoMoonConfig from '../../selection.json';\n\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Componetns\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer } from \"../components/shared\";\nimport { ButtonPrimary, ButtonFacebook, ButtonSimpleLink } from \"../components/buttons\";\nimport { PhoneInput, PasswordInput } from \"../components/inputs\";\nimport { NetworkErrorModal } from \"../components/modals\";\n//Localization\nimport translator from \"../translator/translator\";\n//Styles\nimport styles from '../styles/screens/log-in-screen';\nimport { app_styles } from '../styles/app_styles';\n\n\n\n//----COMPONENT----//\nconst LogInScreen = ({ navigation }) => {\n    //Data and State\n    const { state: { language, scales } } = useContext(AppSettingsContext);\n    const { state: { validationErrors, networkError }, clearValidationErrors, setCustomerData, setValidationErrors, clearNetworkError, login, facebookLogin, clearAllValidationsErrors } = useContext(AuthContext);\n    const [isLoginProcess, setIsLoginProcess] = useState(false);\n    const [isFacebookLoginProcess, setIsFacebookLoginProcess] = useState(false);\n    const [phone, setPhone] = useState(null);\n    const [password, setPassword] = useState(null);\n\n\n    //Hooks and Methods\n    useEffect(() => {\n\n        return () => {\n            clearAllValidationsErrors()\n        }\n    }, []);\n\n\n    /*Customer input handler*/\n    const handlePhoneInput = (value) => {\n        autocompletePhone(value)\n    }\n\n\n    /*For formating phone number according to design*/\n    const autocompletePhone = (value) => {\n        if (value !== null && value.length <= 5) {\n            setCustomerPhone(\"+380 \");\n        } else {\n            if (value === null) {\n                setCustomerPhone(null);\n                return;\n            }\n            if (value.length <= 17) {\n                refactorCurrentPhoneValue(value, [7, 11, 14], \" \");\n            } else if (value.length > 17) {\n                refactorCurrentPhoneValue(value, [7, 11, 14], \" \");\n                let phoneNumber = phone.substring(0, 17);\n                setCustomerPhone(phoneNumber);\n            }\n        }\n    }\n\n    /*Used in handlePhoneInput method*/\n    const refactorCurrentPhoneValue = (value, charPositions, symbol) => {\n        let splitedVal = value.split(\"\");\n\n        for (let i = 0; i < charPositions.length; i++) {\n            if (\n                splitedVal[charPositions[i]] &&\n                splitedVal[charPositions[i]] !== symbol\n            ) {\n                let phoneNumber = phone.substring(0, charPositions[i]) + symbol + phone.substring(charPositions[i]) + value.substr(-1, 1);\n                setCustomerPhone(phoneNumber);\n                return;\n            } else {\n                setCustomerPhone(value);\n            }\n        }\n    }\n\n    /*For avoiding code dublication*/\n    const setCustomerPhone = (value) => {\n        setPhone(value);\n    }\n\n    const handlePasswordInput = (name, value) => {\n        setPassword(value);\n    }\n\n    const submitForm = async () => {\n        try {\n            setIsLoginProcess(true)\n            let formData = {\n                phone,\n                password\n            }\n\n            if (hasEmptyFields(formData)) {\n                setIsLoginProcess(false)\n                return;\n            }\n\n            let cleanedPhone = phone.replace(/\\s/g, '');\n            let form = new FormData();\n            form.append('phone', cleanedPhone);\n            form.append('password', password);\n\n            await login(form);\n            setIsLoginProcess(false);\n        } catch (error) {\n            setIsLoginProcess(false);\n        }\n    }\n\n    const hasEmptyFields = (data) => {\n        let errors = {};\n        for (let key in data) {\n            if (!data[key]) {\n                errors[key] = translator.translate(language, \"Поле не може бути порожнім!\")\n            };\n        }\n        if (Object.keys(errors).length) {\n            setValidationErrors(errors);\n            return true;\n        }\n        return false;\n    }\n\n    //Facebook login\n    const loginWithFacebook = async () => {\n        setIsFacebookLoginProcess(true)\n        try {\n            await Facebook.initializeAsync(\"668596570367881\");\n\n            const {\n                type,\n                token,\n            } = await Facebook.logInWithReadPermissionsAsync(\"668596570367881\", {\n                permissions: [\"public_profile\", \"email\"]\n            });\n            if (type === \"success\") {\n                try {\n                    let form = new FormData();\n                    form.append('token', token);\n                    await facebookLogin(form)\n                } catch (error) {\n                    Alert.alert(\"Помилка!\", \"Помилка авторизації через Facebook\");\n                }\n            } else {\n                Alert.alert(\"Помилка!\", \"Помилка авторизації через Facebook\");\n            }\n        } catch ({ message }) {\n            Alert.alert(\"Помилка!\", `Помилка авторизації через Facebook ${message}`);\n        } finally {\n            setIsFacebookLoginProcess(false)\n        }\n    }\n\n\n\n\n\n    //Template\n    return (\n        <>\n            <SafeView>\n                <Header\n                    title={translator.translate(language, \"Вхід\")}\n                    backAllowed\n                    navigation={navigation}\n                    noIcons\n                    appMenu\n                />\n                <View style={styles(scales).body}>\n                    {\n                        !networkError\n                            ? (\n                                <Block>\n                                    <Spacer spaceHeight={15} />\n                                    <View style={styles(scales).logo_container}>\n                                        <IcoMoonIcon\n                                            name={\"logo_emma\"}\n                                            size={Math.round(scales.widthScale * 75)}\n                                            color={app_styles(scales).colors.app.blue}\n                                        />\n                                    </View>\n                                    <Spacer spaceHeight={45} />\n                                    <PhoneInput\n                                        callback={handlePhoneInput}\n                                        clearError={clearValidationErrors}\n                                        value={phone}\n                                        name=\"phone\"\n                                        error={validationErrors.phone}\n                                        placeholder={translator.translate(language, \"Телефон\")}\n                                    />\n                                    <Spacer spaceHeight={25} />\n                                    <PasswordInput\n                                        callback={handlePasswordInput}\n                                        placeholder={translator.translate(language, \"Пароль\")}\n                                        clearError={clearValidationErrors}\n                                        value={password}\n                                        error={validationErrors.password}\n                                        name=\"password\"\n                                    />\n                                    <Spacer spaceHeight={30} />\n                                    <ButtonPrimary\n                                        title={translator.translate(language, \"Увійти\")}\n                                        color={app_styles(scales).colors.app.blue}\n                                        isDataLoading={isLoginProcess}\n                                        callback={submitForm}\n                                    />\n                                    <Spacer spaceHeight={20} />\n                                    <ButtonFacebook\n                                        title={translator.translate(language, \"Вхід через Facebook\")}\n                                        color=\"#4167B2\"\n                                        isDataLoading={isFacebookLoginProcess}\n                                        callback={loginWithFacebook}\n                                    />\n                                    <Spacer spaceHeight={60} />\n                                    <View style={styles(scales).links_container}>\n                                        <ButtonSimpleLink\n                                            title={translator.translate(language, \"Зареєструватися\")}\n                                            callback={() => navigation.navigate('Registration')}\n                                        />\n                                        <Spacer spaceHeight={20} />\n                                        <ButtonSimpleLink\n                                            title={translator.translate(language, \"Забули пароль?\")}\n                                            callback={() => navigation.navigate('PasswordForgot')}\n                                        />\n                                    </View>\n                                </Block>\n                            )\n                            : <NetworkErrorModal\n                                isOpened={networkError}\n                                closeCallback={clearNetworkError}\n                            />\n                    }\n                </View>\n            </SafeView>\n        </>\n    );\n}\n\n\n\n//----EXPORT----//\nexport default LogInScreen;"]},"metadata":{},"sourceType":"module"}