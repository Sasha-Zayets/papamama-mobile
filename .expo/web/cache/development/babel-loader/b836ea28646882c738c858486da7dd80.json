{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport createDataContext from \"./createDataContext\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { navigate } from \"../_navigationRefs\";\nimport axios from 'axios';\nimport axiosWithErrorHandler from \"../services/axiosWithToken\";\nimport axiosWithToken from \"../services/axiosWithToken\";\nimport { prepareLanguageToHttpRequest, checkAuth } from \"../helpers/helpers\";\nimport { BASE_URL, APP_VERSION } from \"../different/global_vars\";\nimport translator from \"../translator/translator\";\n\nvar menuReducer = function menuReducer(state, action) {\n  switch (action.type) {\n    case 'addToCart':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: [].concat(_toConsumableArray(state.cart), [action.payload]),\n        itemsInCart: state.itemsInCart + action.payload.quantity\n      });\n\n    case 'setPaymentWidgetHtml':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        paymentWidgetHtml: action.payload,\n        isDataFetching: false,\n        networkError: false\n      });\n\n    case 'removeFromCart':\n      var newCart;\n      var product_id = action.payload.id;\n      var uid = action.payload.uid;\n\n      if (uid) {\n        newCart = state.cart.filter(function (item) {\n          return item.uid !== uid;\n        });\n      } else {\n        newCart = state.cart.filter(function (item) {\n          return item.id !== product_id;\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: newCart,\n        itemsInCart: state.itemsInCart - action.payload.quantity\n      });\n\n    case 'updateCart':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: action.payload.cart,\n        itemsInCart: action.payload.itemsInCart\n      });\n\n    case 'clearCart':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: [],\n        itemsInCart: 0,\n        paymentWidgetHtml: null\n      });\n\n    case 'clearNetworkError':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        networkError: false,\n        isDataFetching: false,\n        isProductsFetching: false,\n        isProductsListRefreshing: false,\n        isMoreDataLoading: false\n      });\n\n    case 'clearValidationErrors':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        validationErrors: _objectSpread(_objectSpread({}, state.validationErrors), {}, _defineProperty({}, action.payload, null))\n      });\n\n    case 'setNetworkError':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        networkError: action.payload,\n        isDataFetching: false\n      });\n\n    case 'setValidationErrors':\n      showErrorsAlert();\n      return _objectSpread(_objectSpread({}, state), {}, {\n        validationErrors: action.payload,\n        networkError: false,\n        isDataFetching: false\n      });\n\n    case 'setIsDataFetching':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDataFetching: true\n      });\n\n    case 'clearAllValidationsErrors':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        validationErrors: {}\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nvar addToCart = function addToCart(dispatch) {\n  return function (product) {\n    dispatch({\n      type: 'addToCart',\n      payload: product\n    });\n  };\n};\n\nvar removeFromCart = function removeFromCart(dispatch) {\n  return function (product) {\n    dispatch({\n      type: 'removeFromCart',\n      payload: product\n    });\n  };\n};\n\nvar updateCart = function updateCart(dispatch) {\n  return function (cart) {\n    var cartProductsQuantity = 0;\n    var newCart = cart.filter(function (item) {\n      cartProductsQuantity += item.quantity;\n      return item.quantity !== 0;\n    });\n    dispatch({\n      type: 'updateCart',\n      payload: {\n        cart: newCart,\n        itemsInCart: cartProductsQuantity\n      }\n    });\n  };\n};\n\nvar clearCart = function clearCart(dispatch) {\n  return function () {\n    var redirect = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    dispatch({\n      type: 'clearCart'\n    });\n\n    if (redirect) {\n      navigate('Menu');\n    }\n  };\n};\n\nvar clearNetworkError = function clearNetworkError(dispatch) {\n  return function () {\n    dispatch({\n      type: 'clearNetworkError'\n    });\n  };\n};\n\nvar clearValidationErrors = function clearValidationErrors(dispatch) {\n  return function (field) {\n    dispatch({\n      type: 'clearValidationErrors',\n      payload: field\n    });\n  };\n};\n\nvar makeOrder = function makeOrder(dispatch) {\n  return function _callee(formData) {\n    var language, lang, url, response, errors;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('language'));\n\n          case 3:\n            language = _context.sent;\n            lang = prepareLanguageToHttpRequest(language);\n            url = BASE_URL + \"/order/create?lang=\" + lang + \"&version=\" + APP_VERSION;\n\n            if (!checkAuth()) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(axiosWithToken.post(url, formData));\n\n          case 9:\n            response = _context.sent;\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(axiosWithErrorHandler.post(url, formData));\n\n          case 14:\n            response = _context.sent;\n\n          case 15:\n            if (!(response && response.data)) {\n              _context.next = 18;\n              break;\n            }\n\n            if (response.data.payment_url) {\n              dispatch({\n                type: 'setPaymentWidgetHtml',\n                payload: response.data.payment_url\n              });\n            }\n\n            return _context.abrupt(\"return\", response.data);\n\n          case 18:\n            throw new Error('Make order failed');\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (_context.t0 && _context.t0.response && _context.t0.response.data && _context.t0.response.data.errors) {\n              errors = _context.t0.response.data.errors;\n              dispatch({\n                type: 'setValidationErrors',\n                payload: errors\n              });\n            } else {\n              dispatch({\n                type: 'setNetworkError',\n                payload: true\n              });\n            }\n\n            throw new Error('Make order failed');\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 21]], Promise);\n  };\n};\n\nvar showErrorsAlert = function showErrorsAlert() {\n  var language;\n  return _regeneratorRuntime.async(function showErrorsAlert$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('language'));\n\n        case 2:\n          language = _context2.sent;\n          Alert.alert(translator.translate(language, \"Важливо!\"), translator.translate(language, \"Форма містить помилки\"), [{\n            text: 'OK',\n            onPress: function onPress() {}\n          }], {\n            cancelable: false\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar clearAllValidationsErrors = function clearAllValidationsErrors(dispatch) {\n  return function () {\n    dispatch({\n      type: 'clearAllValidationsErrors'\n    });\n  };\n};\n\nvar setValidationErrors = function setValidationErrors(dispatch) {\n  return function (errors) {\n    dispatch({\n      type: 'setValidationErrors',\n      payload: errors\n    });\n  };\n};\n\nvar _createDataContext = createDataContext(menuReducer, {\n  clearNetworkError: clearNetworkError,\n  addToCart: addToCart,\n  clearCart: clearCart,\n  removeFromCart: removeFromCart,\n  clearValidationErrors: clearValidationErrors,\n  clearAllValidationsErrors: clearAllValidationsErrors,\n  updateCart: updateCart,\n  setValidationErrors: setValidationErrors,\n  makeOrder: makeOrder\n}, {\n  validationErrors: {},\n  paymentWidgetHtml: null,\n  networkError: false,\n  isDataFetching: false,\n  product: null,\n  cart: [],\n  itemsInCart: 0\n}),\n    Provider = _createDataContext.Provider,\n    Context = _createDataContext.Context;\n\nexport { Provider, Context };","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/context/MenuContext.js"],"names":["React","createDataContext","navigate","axios","axiosWithErrorHandler","axiosWithToken","prepareLanguageToHttpRequest","checkAuth","BASE_URL","APP_VERSION","translator","menuReducer","state","action","type","cart","payload","itemsInCart","quantity","paymentWidgetHtml","isDataFetching","networkError","newCart","product_id","id","uid","filter","item","isProductsFetching","isProductsListRefreshing","isMoreDataLoading","validationErrors","showErrorsAlert","addToCart","dispatch","product","removeFromCart","updateCart","cartProductsQuantity","clearCart","redirect","clearNetworkError","clearValidationErrors","field","makeOrder","formData","AsyncStorage","getItem","language","lang","url","post","response","data","payment_url","Error","errors","Alert","alert","translate","text","onPress","cancelable","clearAllValidationsErrors","setValidationErrors","Provider","Context"],"mappings":"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","sourcesContent":["//Imports\nimport React from 'react';\nimport createDataContext from \"./createDataContext\";\nimport { AsyncStorage, Alert } from 'react-native';\n//Navigation\nimport { navigate } from \"../_navigationRefs\";\n//Api\nimport axios from 'axios';\nimport axiosWithErrorHandler from '../services/axiosWithToken';\nimport axiosWithToken from \"../services/axiosWithToken\";\n//Helpers\nimport { prepareLanguageToHttpRequest, checkAuth } from \"../helpers/helpers\";\n//Global vars\nimport { BASE_URL, APP_VERSION } from \"../different/global_vars\";\n//Localization\nimport translator from \"../translator/translator\";\n\n\n\n\n//Reducer\nconst menuReducer = (state, action) => {\n    switch (action.type) {\n        case 'addToCart':\n            return { ...state, cart: [...state.cart, action.payload], itemsInCart: state.itemsInCart + action.payload.quantity }\n        case 'setPaymentWidgetHtml':\n            return { ...state, paymentWidgetHtml: action.payload, isDataFetching: false, networkError: false }\n        case 'removeFromCart':\n            let newCart;\n            let product_id = action.payload.id;\n            let uid = action.payload.uid;\n            if (uid) {\n                newCart = state.cart.filter(item => item.uid !== uid)\n            } else {\n                newCart = state.cart.filter(item => item.id !== product_id);\n            }            \n            return { ...state, cart: newCart, itemsInCart: state.itemsInCart - action.payload.quantity }\n        case 'updateCart':\n            return { ...state, cart: action.payload.cart, itemsInCart: action.payload.itemsInCart }\n        case 'clearCart':\n            return { ...state, cart: [], itemsInCart: 0, paymentWidgetHtml: null }\n        case 'clearNetworkError':\n            return { ...state, networkError: false, isDataFetching: false, isProductsFetching: false, isProductsListRefreshing: false, isMoreDataLoading: false }\n        case 'clearValidationErrors':\n            return { ...state, validationErrors: { ...state.validationErrors, [action.payload]: null } };\n        case 'setNetworkError':\n            return { ...state, networkError: action.payload, isDataFetching: false }\n        case 'setValidationErrors':\n            showErrorsAlert();\n            return { ...state, validationErrors: action.payload, networkError: false, isDataFetching: false };\n        case 'setIsDataFetching':\n            return { ...state, isDataFetching: true }\n        case 'clearAllValidationsErrors':\n            return { ...state, validationErrors: {} }\n        default:\n            return { ...state }\n    }\n};\n\n\n//Actions\nconst addToCart = dispatch => (product) => {\n    dispatch({ type: 'addToCart', payload: product });\n}\n\nconst removeFromCart = dispatch => (product) => {\n    dispatch({ type: 'removeFromCart', payload: product });\n}\n\nconst updateCart = dispatch => (cart) => {\n    let cartProductsQuantity = 0;\n\n    let newCart = cart.filter(item => {\n        cartProductsQuantity += item.quantity\n        return item.quantity !== 0;\n    });\n\n    dispatch({ type: 'updateCart', payload: { cart: newCart, itemsInCart: cartProductsQuantity } })\n}\n\nconst clearCart = dispatch => (redirect = true) => {\n    dispatch({ type: 'clearCart' });\n    if (redirect) {\n        navigate('Menu');\n    }\n}\n\nconst clearNetworkError = dispatch => () => {\n    dispatch({ type: 'clearNetworkError' });\n}\n\nconst clearValidationErrors = dispatch => (field) => {\n    dispatch({ type: 'clearValidationErrors', payload: field });\n}\n\nconst makeOrder = dispatch => async (formData) => {\n    try {\n        const language = await AsyncStorage.getItem('language');\n        const lang = prepareLanguageToHttpRequest(language);\n        const url = `${BASE_URL}/order/create?lang=${lang}&version=${APP_VERSION}`;\n\n        let response;\n        if (checkAuth()) {\n            response = await axiosWithToken.post(url, formData);\n        } else {\n            response = await axiosWithErrorHandler.post(url, formData);\n        }\n\n        if (response && response.data) {\n            if (response.data.payment_url) {\n                dispatch({ type: 'setPaymentWidgetHtml', payload: response.data.payment_url })\n            }\n            return response.data\n        }\n        throw new Error('Make order failed');\n    } catch (error) {\n        if (error && error.response && error.response.data && error.response.data.errors) {\n            let errors = error.response.data.errors;\n            dispatch({ type: 'setValidationErrors', payload: errors });\n        } else {\n            dispatch({ type: 'setNetworkError', payload: true });\n        }\n        throw new Error('Make order failed');\n    }\n}\n\nconst showErrorsAlert = async () => {\n    const language = await AsyncStorage.getItem('language');\n    Alert.alert(\n        translator.translate(language, \"Важливо!\"),\n        translator.translate(language, \"Форма містить помилки\"),\n        [\n            { text: 'OK', onPress: () => { } },\n        ],\n        { cancelable: false }\n    )\n}\n\nconst clearAllValidationsErrors = dispatch => () => {\n    dispatch({ type: 'clearAllValidationsErrors' });\n}\n\nconst setValidationErrors = dispatch => (errors) => {\n    dispatch({ type: 'setValidationErrors', payload: errors });\n}\n\n\n\n\n\n\n\n\n\n\n//Export\nexport const { Provider, Context } = createDataContext(\n    menuReducer,\n    {\n        clearNetworkError,\n        addToCart,\n        clearCart,\n        removeFromCart,\n        clearValidationErrors,\n        clearAllValidationsErrors,\n        updateCart,\n        setValidationErrors,\n        makeOrder,\n    },\n    {\n        validationErrors: {},\n        paymentWidgetHtml: null,\n        networkError: false,\n        isDataFetching: false,\n        product: null,\n        cart: [],\n        itemsInCart: 0,\n    }\n);\n"]},"metadata":{},"sourceType":"module"}