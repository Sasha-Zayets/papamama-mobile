{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/components/news/NewsCard.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport HTML from \"react-native-render-html\";\nimport { notEmptyString, prepareLanguageToHttpRequest } from \"../../helpers/helpers\";\nimport styles from \"../../styles/components/news/news-card\";\nimport { app_styles } from \"../../styles/app_styles\";\nimport moment from \"moment\";\nimport 'moment/locale/uk';\nimport 'moment/locale/ru';\nimport { Block, IntelligentImage, Spacer, VerticalSpacer } from \"../shared\";\nimport translator from \"../../translator/translator\";\n\nvar NewsCard = function NewsCard(_ref) {\n  var navigation = _ref.navigation,\n      post = _ref.post,\n      preview = _ref.preview;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      bodyTextStyles = _useState2[0],\n      setBodyTextStyles = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      paragraphStyles = _useState4[0],\n      setParagraphStyles = _useState4[1];\n\n  useEffect(function () {\n    setBodyTextStyles({\n      fontFamily: app_styles(scales).fonts.weight.regular,\n      fontSize: Math.round(scales.fontScale * 14),\n      color: app_styles(scales).colors.text.primary\n    });\n    setParagraphStyles({\n      textAlign: \"justify\",\n      marginBottom: Math.round(scales.heightScale * 10)\n    });\n  }, []);\n\n  var handleUrl = function handleUrl(event, href) {\n    return notEmptyString(href) ? Linking.openURL(href) : false;\n  };\n\n  var transformUnixTime = function transformUnixTime(time) {\n    var lang = prepareLanguageToHttpRequest(language);\n    moment.locale(lang);\n    return moment(parseInt(time) * 1000).format('DD MMMM YYYY');\n  };\n\n  var populateTags = function populateTags() {\n    return post.tags.map(function (item, index) {\n      return React.createElement(View, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles(scales).tag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }\n      }, \"# \", item.name));\n    });\n  };\n\n  var renderDateAndTags = function renderDateAndTags() {\n    return React.createElement(View, {\n      style: app_styles(scales).row_start,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles(scales).date_container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles(scales).date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, transformUnixTime(post.date))), post.tags && post.tags.length ? React.createElement(React.Fragment, null, React.createElement(VerticalSpacer, {\n      spaceWidth: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }), React.createElement(View, {\n      style: styles(scales).tags_container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, populateTags())) : null);\n  };\n\n  var generateThumbnailExtraStyles = function generateThumbnailExtraStyles() {\n    return {\n      borderTopLeftRadius: preview ? Math.round(scales.widthScale * 6) : 0,\n      borderTopRightRadius: preview ? Math.round(scales.widthScale * 6) : 0\n    };\n  };\n\n  var hasGallery = function hasGallery() {\n    return !!(post && post.gallery && post.gallery.images && post.gallery.images.length);\n  };\n\n  var filteredGallery = function filteredGallery() {\n    if (hasGallery()) {\n      return post.gallery.images.filter(function (item) {\n        var needle = 'image/placeholder.png';\n        return !item.image.includes(needle);\n      });\n    }\n  };\n\n  var generateGalleryCard = function generateGalleryCard(item) {\n    return React.createElement(View, {\n      style: styles(scales).gallery_card_container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, React.createElement(IntelligentImage, {\n      thumbnailStyles: styles(scales).thumbnail_image,\n      thumbnailSource: item.image_preview,\n      fullSizeSource: item.image,\n      fullSizeStyles: styles(scales).full_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles(scales).card_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles(scales).thumbnail_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: post.image_preview || post.image\n    },\n    style: [styles(scales).thumbnail, generateThumbnailExtraStyles()],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      backgroundColor: preview ? '#F3F3F3' : '#FFFFFF'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, post.title)), React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  })), preview ? React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  }, renderDateAndTags(), React.createElement(Spacer, {\n    spaceHeight: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 37\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Post', {\n        'postId': post.id\n      });\n    },\n    activeOpacity: .8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).read_more,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 41\n    }\n  }, translator.translate(language, \"Читати\")))) : React.createElement(React.Fragment, null, React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }, React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 41\n    }\n  }), React.createElement(HTML, {\n    baseFontStyle: bodyTextStyles,\n    html: post.text,\n    onLinkPress: function onLinkPress(event, href) {\n      return handleUrl(event, href);\n    },\n    imagesMaxWidth: Dimensions.get('window').width,\n    tagsStyles: {\n      p: paragraphStyles\n    },\n    listsPrefixesRenderers: {\n      ol: function ol() {\n        return React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 60\n          }\n        });\n      },\n      ul: function ul() {\n        return React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 60\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 41\n    }\n  })), hasGallery() ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 53\n    }\n  }), React.createElement(FlatList, {\n    horizontal: true,\n    contentContainerStyle: {\n      paddingHorizontal: Math.round(scales.widthScale * 16)\n    },\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(image) {\n      return \"key\" + image.id;\n    },\n    data: filteredGallery(),\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return generateGalleryCard(item);\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(VerticalSpacer, {\n        spaceWidth: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 87\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 53\n    }\n  })) : null, React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 37\n    }\n  }), React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 37\n    }\n  }, renderDateAndTags()))), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default NewsCard;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/news/NewsCard.js"],"names":["React","useContext","useEffect","useState","Context","AppSettingsContext","HTML","notEmptyString","prepareLanguageToHttpRequest","styles","app_styles","moment","Block","IntelligentImage","Spacer","VerticalSpacer","translator","NewsCard","navigation","post","preview","state","scales","language","bodyTextStyles","setBodyTextStyles","paragraphStyles","setParagraphStyles","fontFamily","fonts","weight","regular","fontSize","Math","round","fontScale","color","colors","text","primary","textAlign","marginBottom","heightScale","handleUrl","event","href","Linking","openURL","transformUnixTime","time","lang","locale","parseInt","format","populateTags","tags","map","item","index","tag","name","renderDateAndTags","row_start","date_container","date","length","tags_container","generateThumbnailExtraStyles","borderTopLeftRadius","widthScale","borderTopRightRadius","hasGallery","gallery","images","filteredGallery","filter","needle","image","includes","generateGalleryCard","gallery_card_container","thumbnail_image","image_preview","full_image","card_container","thumbnail_container","uri","thumbnail","backgroundColor","flex","title","navigate","id","read_more","translate","Dimensions","get","width","p","ol","ul","paddingHorizontal"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, {useContext, useEffect, useState} from 'react';\n//React native\nimport {View, Text, Image, Linking, TouchableOpacity, Dimensions, FlatList} from 'react-native';\n//Context\nimport {Context as AppSettingsContext} from \"../../context/AppSettingsContext\";\n//HTML-render\nimport HTML from \"react-native-render-html\";\n//Helpres\nimport {notEmptyString, prepareLanguageToHttpRequest} from \"../../helpers/helpers\";\n//Styles\nimport styles from '../../styles/components/news/news-card';\nimport {app_styles} from \"../../styles/app_styles\";\n//Moment\nimport moment from \"moment\";\nimport 'moment/locale/uk';\nimport 'moment/locale/ru';\n//Components\nimport {Block, IntelligentImage, Spacer, VerticalSpacer} from \"../shared\";\n//Localization\nimport translator from \"../../translator/translator\";\n\n\n//----COMPONENT----//\nconst NewsCard = ({navigation, post, preview}) => {\n    //Data and State\n    const {state: {scales, language}} = useContext(AppSettingsContext);\n    const [bodyTextStyles, setBodyTextStyles] = useState({});\n    const [paragraphStyles, setParagraphStyles] = useState({});\n\n\n    //Hooks\n    useEffect(() => {\n        setBodyTextStyles({\n            fontFamily: app_styles(scales).fonts.weight.regular,\n            fontSize: Math.round(scales.fontScale * 14),\n            color: app_styles(scales).colors.text.primary\n        });\n        setParagraphStyles({\n            textAlign: \"justify\",\n            marginBottom: Math.round(scales.heightScale * 10)\n        });\n    }, []);\n\n\n    //Methods\n    const handleUrl = (event, href) => {\n        return notEmptyString(href) ? Linking.openURL(href) : false;\n    }\n\n\n    const transformUnixTime = (time) => {\n        const lang = prepareLanguageToHttpRequest(language);\n        moment.locale(lang);\n        return moment(parseInt(time) * 1000).format('DD MMMM YYYY');\n    }\n\n    const populateTags = () => {\n        return post.tags.map((item, index) => {\n            return (\n                <View key={index}>\n                   <Text style={styles(scales).tag}># {item.name}</Text>\n                </View>\n            );\n        })\n    }\n\n\n    const renderDateAndTags = () => {\n        return (\n            <View style={app_styles(scales).row_start}>\n                <View style={styles(scales).date_container}>\n                    <Text style={styles(scales).date}>{transformUnixTime(post.date)}</Text>\n                </View>\n                {\n                    post.tags && post.tags.length\n                        ? (\n                            <>\n                                <VerticalSpacer spaceWidth={14}/>\n                                <View style={styles(scales).tags_container}>\n                                    {populateTags()}\n                                </View>\n                            </>\n                        )\n                        : null\n                }\n            </View>\n        );\n    }\n\n\n    const generateThumbnailExtraStyles = () => {\n        return {\n            borderTopLeftRadius: preview ? Math.round(scales.widthScale * 6) : 0,\n            borderTopRightRadius: preview ? Math.round(scales.widthScale * 6) : 0,\n        }\n    }\n\n\n\n\n    const hasGallery = () => {\n        return !!(post && post.gallery && post.gallery.images && post.gallery.images.length)\n    }\n\n\n    const filteredGallery = () => {\n        if(hasGallery()){\n            return post.gallery.images.filter(item => {\n                let needle = 'image/placeholder.png';\n                return !item.image.includes(needle);\n            });\n        }\n    }\n\n\n    const generateGalleryCard = (item) => {\n        return (\n            <View style={styles(scales).gallery_card_container}>\n                <IntelligentImage\n                    thumbnailStyles={styles(scales).thumbnail_image}\n                    thumbnailSource={item.image_preview}\n                    fullSizeSource={item.image}\n                    fullSizeStyles={styles(scales).full_image}\n                />\n            </View>\n        );\n    }\n\n\n\n\n    //Template\n    return (\n        <View style={styles(scales).card_container}>\n            {/* Thumbnail */}\n            <View style={styles(scales).thumbnail_container}>\n                <Image\n                    source={{uri: post.image_preview || post.image}}\n                    style={[styles(scales).thumbnail, generateThumbnailExtraStyles()]}\n                />\n            </View>\n            <View style={{ backgroundColor: preview ? '#F3F3F3' : '#FFFFFF' }}>\n                <Spacer spaceHeight={20}/>\n                <View>\n                    {/* Title */}\n                    <Block>\n                        <View style={{flex: 1}}>\n                            <Text style={styles(scales).title}>{post.title}</Text>\n                        </View>\n                        <Spacer spaceHeight={10}/>\n                    </Block>\n                    {/* Body or preview */}\n                    {\n                        preview\n                            ? (\n                                <Block>\n                                    { renderDateAndTags() }\n                                    <Spacer spaceHeight={15} />\n                                    <TouchableOpacity onPress={() => navigation.navigate('Post', {'postId': post.id})}\n                                                      activeOpacity={.8}>\n                                        <Text style={styles(scales).read_more}>{translator.translate(language, \"Читати\")}</Text>\n                                    </TouchableOpacity>\n                                </Block>\n                            )\n                            : (\n                                <>\n                                    <Block>\n                                        <Spacer spaceHeight={10}/>\n                                        <HTML\n                                            baseFontStyle={bodyTextStyles}\n                                            html={post.text}\n                                            onLinkPress={(event, href) => handleUrl(event, href)}\n                                            imagesMaxWidth={Dimensions.get('window').width}\n                                            tagsStyles={{ p: paragraphStyles }}\n                                            listsPrefixesRenderers={{\n                                                ol: () => {\n                                                    return <Text></Text>\n                                                },\n                                                ul: () => {\n                                                    return <Text></Text>\n                                                },\n                                            }}\n                                        />\n                                    </Block>\n                                    {\n                                        hasGallery()\n                                            ? (\n                                                <>\n                                                    <Spacer spaceHeight={15} />\n                                                    <FlatList\n                                                        horizontal\n                                                        contentContainerStyle={{paddingHorizontal: Math.round(scales.widthScale * 16)}}\n                                                        showsHorizontalScrollIndicator={false}\n                                                        keyExtractor={image => \"key\" + image.id}\n                                                        data={filteredGallery()}\n                                                        renderItem={({item}) => generateGalleryCard(item)}\n                                                        ItemSeparatorComponent={() => <VerticalSpacer spaceWidth={15}/>}\n                                                    />\n                                                </>\n                                            )\n                                            : null\n                                    }\n                                    <Spacer spaceHeight={20} />\n                                    <Block>\n                                        { renderDateAndTags() }\n                                    </Block>\n                                </>\n                            )\n                    }\n                </View>\n                <Spacer spaceHeight={20}/>\n            </View>\n        </View>\n    );\n}\n\n\n//----EXPORT----//\nexport default NewsCard;"]},"metadata":{},"sourceType":"module"}