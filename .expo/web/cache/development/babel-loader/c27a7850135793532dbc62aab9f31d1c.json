{"ast":null,"code":"var _jsxFileName = \"/home/alex/workspace/papamama/src/screens/NotificationsScreen.js\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, DataLoadingIndicator, Spacer, IntelligentImage } from \"../components/shared\";\nimport NoContentBlock from \"../components/shared/NoContentBlock\";\nimport NotificationCard from \"../components/notifications/NotificationCard\";\nimport { NetworkErrorModal } from \"../components/modals\";\nimport styles from \"../styles/screens/notifications-screen\";\nimport translator from \"../translator/translator\";\n\nvar NotificationsScreen = function NotificationsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language;\n\n  var _useContext2 = useContext(AuthContext),\n      _useContext2$state = _useContext2.state,\n      networkError = _useContext2$state.networkError,\n      notifications = _useContext2$state.notifications,\n      clearNetworkError = _useContext2.clearNetworkError;\n\n  function getUniqueNumber() {\n    if (typeof getUniqueNumber.count === 'undefined') {\n      getUniqueNumber.count = 0;\n    }\n\n    return ++getUniqueNumber.count;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    title: translator.translate(language, \"Повідомлення\"),\n    backAllowed: true,\n    navigation: navigation,\n    noIcons: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, !networkError ? notifications && notifications.length ? React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 41\n    }\n  }, React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    keyExtractor: function keyExtractor(notification) {\n      return \"key\" + notification.id + getUniqueNumber();\n    },\n    data: notifications,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(NotificationCard, {\n        notification: item,\n        navigation: navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 75\n        }\n      });\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(Spacer, {\n        spaceHeight: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 79\n        }\n      });\n    },\n    contentContainerStyle: {\n      paddingVertical: Math.round(scales.heightScale * 20)\n    },\n    bounces: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 45\n    }\n  })) : React.createElement(NoContentBlock, {\n    navigation: navigation,\n    title: translator.translate(language, \"Історія порожня\"),\n    note: translator.translate(language, \"На даний момент Вам не надсилалося жодного push-повідомлення\"),\n    toMainLink: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 39\n    }\n  }) : React.createElement(NetworkErrorModal, {\n    isOpened: networkError,\n    closeCallback: clearNetworkError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }\n  }))));\n};\n\nexport default NotificationsScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/NotificationsScreen.js"],"names":["React","useContext","Context","AppSettingsContext","AuthContext","Header","SafeView","Block","DataLoadingIndicator","Spacer","IntelligentImage","NoContentBlock","NotificationCard","NetworkErrorModal","styles","translator","NotificationsScreen","navigation","state","scales","language","networkError","notifications","clearNetworkError","getUniqueNumber","count","translate","body","length","notification","id","item","paddingVertical","Math","round","heightScale"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext } from 'react';\n//React native\nimport { View, FlatList } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\n//Componetns\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, DataLoadingIndicator, Spacer, IntelligentImage } from \"../components/shared\";\nimport NoContentBlock from \"../components/shared/NoContentBlock\";\nimport NotificationCard from \"../components/notifications/NotificationCard\";\nimport { NetworkErrorModal } from '../components/modals';\n//Styles\nimport styles from \"../styles/screens/notifications-screen\";\n//Localization\nimport translator from '../translator/translator';\n\n\n//----COMPONENT----//\nconst NotificationsScreen = ({ navigation }) => {\n    //Data and State\n    const { state: { scales, language } } = useContext(AppSettingsContext);\n    const { state: { networkError, notifications }, clearNetworkError } = useContext(AuthContext);\n\n\n    //Hooks and Methods\n    function getUniqueNumber(){\n        if(typeof getUniqueNumber.count === 'undefined'){\n            getUniqueNumber.count = 0;            \n        }\n        return ++getUniqueNumber.count;\n    }\n\n\n\n    //Template\n    return (\n        <>\n            <SafeView>\n                <Header\n                    title={translator.translate(language, \"Повідомлення\")}\n                    backAllowed\n                    navigation={navigation}\n                    noIcons\n                />\n                <View style={styles(scales).body}>\n                    {\n                        !networkError\n                            ? (\n                                notifications && notifications.length\n                                    ? (\n                                        <Block>\n                                            <FlatList\n                                                showsVerticalScrollIndicator={false}\n                                                keyExtractor={notification => \"key\" + notification.id + getUniqueNumber()}\n                                                data={notifications}\n                                                renderItem={({ item }) => <NotificationCard notification={item} navigation={navigation} />}\n                                                ItemSeparatorComponent={() => <Spacer spaceHeight={20} />}\n                                                contentContainerStyle={{ paddingVertical: Math.round(scales.heightScale * 20) }}\n                                                bounces={false}\n                                            />\n                                        </Block>\n                                    )\n                                    : <NoContentBlock\n                                        navigation={navigation}\n                                        title={translator.translate(language, \"Історія порожня\")}\n                                        note={translator.translate(language, \"На даний момент Вам не надсилалося жодного push-повідомлення\")}\n                                        toMainLink\n                                    />\n                            )\n                            : <NetworkErrorModal\n                                isOpened={networkError}\n                                closeCallback={clearNetworkError}\n                            />\n                    }\n                </View>\n            </SafeView>\n        </>\n    );\n}\n\n\n\n//----EXPORT----//\nexport default NotificationsScreen;"]},"metadata":{},"sourceType":"module"}