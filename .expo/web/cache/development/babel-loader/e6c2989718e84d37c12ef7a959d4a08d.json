{"ast":null,"code":"var _jsxFileName = \"/home/alex/workspace/papamama/src/components/buttons/ButtonReadMoreToggler.js\";\nimport React, { useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport translator from \"../../translator/translator\";\nimport styles from \"../../styles/components/buttons/button-read-more-toggler\";\nimport { app_styles } from \"../../styles/app_styles\";\n\nvar ButtonReadMoreToggler = function ButtonReadMoreToggler(_ref) {\n  var isActive = _ref.isActive,\n      callback = _ref.callback;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language;\n\n  var getButtonExtraStyles = function getButtonExtraStyles() {\n    return {\n      borderColor: !isActive ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.grey\n    };\n  };\n\n  var getTitleExtraStyles = function getTitleExtraStyles() {\n    return {\n      color: !isActive ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.grey\n    };\n  };\n\n  return React.createElement(TouchableOpacity, {\n    style: [styles(scales).button, getButtonExtraStyles()],\n    onPress: callback,\n    activeOpacity: 0.8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles(scales).title, getTitleExtraStyles()],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, !isActive ? translator.translate(language, \"Детальніше\") : translator.translate(language, \"Згорнути\")));\n};\n\nexport default ButtonReadMoreToggler;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/buttons/ButtonReadMoreToggler.js"],"names":["React","useContext","Context","AppSettingsContext","translator","styles","app_styles","ButtonReadMoreToggler","isActive","callback","state","scales","language","getButtonExtraStyles","borderColor","colors","app","blue","text","grey","getTitleExtraStyles","color","button","title","translate"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAIA,SAASC,OAAO,IAAIC,kBAApB;AAEA,OAAOC,UAAP;AAEA,OAAOC,MAAP;AACA,SAASC,UAAT;;AAMA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBAEdR,UAAU,CAACE,kBAAD,CAFI;AAAA,sCAE9CO,KAF8C;AAAA,MAErCC,MAFqC,qBAErCA,MAFqC;AAAA,MAE7BC,QAF6B,qBAE7BA,QAF6B;;AAQtD,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAC/B,WAAO;AACHC,MAAAA,WAAW,EAAE,CAACN,QAAD,GAAYF,UAAU,CAACK,MAAD,CAAV,CAAmBI,MAAnB,CAA0BC,GAA1B,CAA8BC,IAA1C,GAAiDX,UAAU,CAACK,MAAD,CAAV,CAAmBI,MAAnB,CAA0BG,IAA1B,CAA+BC;AAD1F,KAAP;AAGH,GAJD;;AAMA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,WAAO;AACHC,MAAAA,KAAK,EAAE,CAACb,QAAD,GAAYF,UAAU,CAACK,MAAD,CAAV,CAAmBI,MAAnB,CAA0BC,GAA1B,CAA8BC,IAA1C,GAAiDX,UAAU,CAACK,MAAD,CAAV,CAAmBI,MAAnB,CAA0BG,IAA1B,CAA+BC;AADpF,KAAP;AAGH,GAJD;;AASA,SACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,CAACd,MAAM,CAACM,MAAD,CAAN,CAAeW,MAAhB,EAAwBT,oBAAoB,EAA5C,CAAzB;AAA0E,IAAA,OAAO,EAAEJ,QAAnF;AAA6F,IAAA,aAAa,EAAE,GAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACJ,MAAM,CAACM,MAAD,CAAN,CAAeY,KAAhB,EAAuBH,mBAAmB,EAA1C,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8D,CAACZ,QAAD,GAAYJ,UAAU,CAACoB,SAAX,CAAqBZ,QAArB,EAA+B,YAA/B,CAAZ,GAA2DR,UAAU,CAACoB,SAAX,CAAqBZ,QAArB,EAA+B,UAA/B,CAAzH,CADJ,CADJ;AAKH,CA5BD;;AAkCA,eAAeL,qBAAf","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext } from 'react';\n//React native\nimport { Text, TouchableOpacity } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//Translator\nimport translator from \"../../translator/translator\";\n//Styles\nimport styles from \"../../styles/components/buttons/button-read-more-toggler\";\nimport { app_styles } from \"../../styles/app_styles\";\n\n\n\n\n//----COMPONENT----//\nconst ButtonReadMoreToggler = ({ isActive, callback }) => {\n    //Date and State\n    const { state: { scales, language } } = useContext(AppSettingsContext);\n    \n\n\n\n    //Hooks and Methods\n    const getButtonExtraStyles = () => {\n        return {\n            borderColor: !isActive ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.grey\n        }\n    }\n\n    const getTitleExtraStyles = () => {\n        return {\n            color: !isActive ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.grey\n        }\n    }\n\n\n\n    //Template\n    return (\n        <TouchableOpacity style={[styles(scales).button, getButtonExtraStyles()]} onPress={callback} activeOpacity={0.8}>\n            <Text style={[styles(scales).title, getTitleExtraStyles()]}>{ !isActive ? translator.translate(language, \"Детальніше\") : translator.translate(language, \"Згорнути\") }</Text>\n        </TouchableOpacity>\n    );\n}\n\n\n\n\n//----EXPORT----//\nexport default ButtonReadMoreToggler;"]},"metadata":{},"sourceType":"module"}