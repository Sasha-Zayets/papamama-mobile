{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/components/inputs/SimpleInput.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport { Spacer } from \"../shared\";\nimport styles from \"../../styles/components/inputs/simple-input\";\nimport { app_styles } from \"../../styles/app_styles\";\n\nvar SimpleInput = function SimpleInput(_ref) {\n  var value = _ref.value,\n      placeholder = _ref.placeholder,\n      error = _ref.error,\n      clearError = _ref.clearError,\n      callback = _ref.callback,\n      name = _ref.name,\n      number = _ref.number;\n\n  var _useContext = useContext(AppSettingsContext),\n      scales = _useContext.state.scales;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setIsFocused = _useState2[1];\n\n  var arrangeFocus = function arrangeFocus() {\n    clearError(name);\n    setIsFocused(true);\n  };\n\n  var handleInput = function handleInput(value) {\n    callback(name, value);\n  };\n\n  return React.createElement(View, {\n    style: styles(scales).main_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles(scales).input_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: [styles(scales).input, {\n      borderBottomWidth: Math.round(scales.widthScale * 1),\n      borderBottomColor: isFocused ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.light_grey\n    }],\n    placeholderTextColor: app_styles(scales).colors.text.light_grey,\n    placeholder: placeholder,\n    autocapitalize: \"none\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(value) {\n      return handleInput(value);\n    },\n    value: value,\n    onFocus: arrangeFocus,\n    onBlur: function onBlur() {\n      return setIsFocused(false);\n    },\n    keyboardType: number ? \"phone-pad\" : \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })), error ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).error_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, error))) : null);\n};\n\nexport default SimpleInput;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/inputs/SimpleInput.js"],"names":["React","useContext","useState","useEffect","Context","AppSettingsContext","Spacer","styles","app_styles","SimpleInput","value","placeholder","error","clearError","callback","name","number","scales","state","isFocused","setIsFocused","arrangeFocus","handleInput","main_container","input_container","input","borderBottomWidth","Math","round","widthScale","borderBottomColor","colors","app","blue","text","light_grey","error_text"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext, useState, useEffect } from 'react';\n//React native\nimport { Text, View, TextInput } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//Components\nimport { Spacer } from '../shared';\n//Styles\nimport styles from \"../../styles/components/inputs/simple-input\";\nimport { app_styles } from '../../styles/app_styles';\n\n\n\n\n//----COMPONENT----//\nconst SimpleInput = ({ value, placeholder, error, clearError, callback, name, number }) => {\n    //Data and State\n    const { state: { scales } } = useContext(AppSettingsContext);\n    const [isFocused, setIsFocused] = useState(false);\n\n\n    //Hooks and Methods\n    const arrangeFocus = () => {\n        clearError(name);\n        setIsFocused(true);\n    }\n\n    const handleInput = (value) => {\n        callback(name, value)\n    }\n\n    \n\n    //Template\n    return (\n        <View style={styles(scales).main_container}>\n            <View style={styles(scales).input_container}>\n                <TextInput\n                    style={[styles(scales).input, { borderBottomWidth: Math.round(scales.widthScale * 1), borderBottomColor: isFocused ? app_styles(scales).colors.app.blue : app_styles(scales).colors.text.light_grey }]}\n                    placeholderTextColor={app_styles(scales).colors.text.light_grey}\n                    placeholder={placeholder}\n                    autocapitalize=\"none\"\n                    autoCorrect={false}\n                    onChangeText={(value) => handleInput(value)}\n                    value={value}\n                    onFocus={arrangeFocus}\n                    onBlur={() => setIsFocused(false)}\n                    keyboardType={number ? \"phone-pad\" : \"default\"}\n                />\n            </View>\n            {\n                error ?\n                    (\n                        <>\n                            <Spacer spaceHeight={5} />\n                            <View>\n                                <Text style={styles(scales).error_text}>{error}</Text>\n                            </View>\n                        </>\n                    )\n                    : null\n            }\n        </View>\n    )\n}\n\n\n//----EXPORT----//\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}