{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/screens/ContactsScreen.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer, DataLoadingIndicator, HorizontalDivider, VerticalSpacer } from \"../components/shared\";\nimport { NetworkErrorModal } from \"../components/modals\";\nimport { NavigationEvents } from 'react-navigation';\nimport translator from \"../translator/translator\";\nimport { prepareLanguageToHttpRequest, notEmptyString } from \"../helpers/helpers\";\nimport styles from \"../styles/screens/contacts-screen\";\nimport { app_styles } from \"../styles/app_styles\";\n\nvar ContactsScreen = function ContactsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language,\n      emmaPizzaRestaurant = _useContext$state.emmaPizzaRestaurant,\n      emmaPizzaRestaurantMetaData = _useContext$state.emmaPizzaRestaurantMetaData,\n      settingsNetworkError = _useContext$state.settingsNetworkError,\n      screen_width = _useContext$state.screen_width,\n      contacts = _useContext$state.contacts,\n      getEmmaPizzaRestaurant = _useContext.getEmmaPizzaRestaurant,\n      clearSettingsNetworkError = _useContext.clearSettingsNetworkError;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDataLoading = _useState2[0],\n      setIsDataLoading = _useState2[1];\n\n  var _useState3 = useState(new Animated.Value(Math.round(scales.heightScale * 270))),\n      _useState4 = _slicedToArray(_useState3, 2),\n      animatedHeight = _useState4[0],\n      setAnimatedHeight = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      extendedCard = _useState6[0],\n      setExtendedCard = _useState6[1];\n\n  var widenPhoto = function widenPhoto() {\n    Animated.timing(animatedHeight, {\n      toValue: Math.round(scales.widthScale * 110),\n      duration: 300,\n      easing: Easing.linear\n    }).start();\n  };\n\n  var shortenPhoto = function shortenPhoto() {\n    Animated.timing(animatedHeight, {\n      toValue: Math.round(scales.widthScale * 270),\n      duration: 300,\n      easing: Easing.linear\n    }).start();\n  };\n\n  var toggleHeight = function toggleHeight() {\n    if (extendedCard) {\n      shortenPhoto();\n    } else {\n      widenPhoto();\n    }\n\n    setExtendedCard(!extendedCard);\n  };\n\n  var getArrowPosition = function getArrowPosition() {\n    return !extendedCard ? \"180deg\" : \"0deg\";\n  };\n\n  var handleFocus = function handleFocus() {\n    return _regeneratorRuntime.async(function handleFocus$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!Object.keys(emmaPizzaRestaurant).length || emmaPizzaRestaurantMetaData.language !== language)) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getRestaurant());\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getRestaurant = function getRestaurant() {\n    return _regeneratorRuntime.async(function getRestaurant$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsDataLoading(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getEmmaPizzaRestaurant());\n\n          case 3:\n            setIsDataLoading(false);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var makeCall = function makeCall() {\n    var cleanedPhoneNumber = emmaPizzaRestaurant.phone.replace(/\\D||\\s/g, \"\");\n\n    if (cleanedPhoneNumber.indexOf('38') === 0) {\n      cleanedPhoneNumber = cleanedPhoneNumber.substring(2);\n    }\n\n    var link = Platform.OS === 'ios' ? \"tel://+38\" + cleanedPhoneNumber : \"tel:+38\" + cleanedPhoneNumber;\n    Linking.openURL(link);\n  };\n\n  var sendEmail = function sendEmail() {\n    var address = contacts.email;\n    if (!notEmptyString(address)) return;\n    var link = \"mailto: \" + contacts.email;\n    return Linking.openURL(link);\n  };\n\n  var openMap = function openMap() {\n    var link = emmaPizzaRestaurant.gmap;\n    return notEmptyString(link) ? Linking.openURL(link.trim()) : false;\n  };\n\n  var hasAtLeLeastOneSocial = function hasAtLeLeastOneSocial() {\n    return notEmptyString(emmaPizzaRestaurant.facebook) || notEmptyString(emmaPizzaRestaurant.instagram) || notEmptyString(emmaPizzaRestaurant.youtube) || notEmptyString(emmaPizzaRestaurant.tripadvisor);\n  };\n\n  var handleLink = function handleLink(link, type) {\n    var urlParts, username, url, _urlParts, chanelName, _url;\n\n    return _regeneratorRuntime.async(function handleLink$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(type === 'instagram')) {\n              _context3.next = 15;\n              break;\n            }\n\n            urlParts = link.split('/');\n            username = urlParts[urlParts.length - 1];\n            url = \"instagram://user?username=\" + username;\n            _context3.prev = 4;\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(Linking.openURL(url));\n\n          case 7:\n            _context3.next = 13;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](4);\n            _context3.next = 13;\n            return _regeneratorRuntime.awrap(Linking.openURL(link.trim()));\n\n          case 13:\n            _context3.next = 32;\n            break;\n\n          case 15:\n            if (!(type === 'youtube')) {\n              _context3.next = 30;\n              break;\n            }\n\n            _urlParts = link.split('/');\n            chanelName = _urlParts[_urlParts.length - 1];\n            _url = \"youtube://chanel=\" + chanelName;\n            _context3.prev = 19;\n            _context3.next = 22;\n            return _regeneratorRuntime.awrap(Linking.openURL(_url));\n\n          case 22:\n            _context3.next = 28;\n            break;\n\n          case 24:\n            _context3.prev = 24;\n            _context3.t1 = _context3[\"catch\"](19);\n            _context3.next = 28;\n            return _regeneratorRuntime.awrap(Linking.openURL(link.trim()));\n\n          case 28:\n            _context3.next = 32;\n            break;\n\n          case 30:\n            _context3.next = 32;\n            return _regeneratorRuntime.awrap(Linking.openURL(link.trim()));\n\n          case 32:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[4, 9], [19, 24]], Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, React.createElement(NavigationEvents, {\n    onWillFocus: handleFocus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }), React.createElement(Header, {\n    backAllowed: true,\n    navigation: navigation,\n    title: translator.translate(language, \"Контакти\"),\n    noIcons: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    bounces: false,\n    keyboardShouldPersistTaps: 'always',\n    contentContainerStyle: {\n      paddingBottom: Math.round(scales.heightScale * 20),\n      flexGrow: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, !isDataLoading ? !settingsNetworkError ? React.createElement(React.Fragment, null, Object.keys(emmaPizzaRestaurant).length ? React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      paddingBottom: Math.round(scales.widthScale * 25)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 65\n    }\n  }, React.createElement(HorizontalDivider, {\n    height: 1,\n    color: app_styles(scales).colors.text.light_grey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 69\n    }\n  }), React.createElement(Animated.View, {\n    style: {\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n      height: animatedHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 69\n    }\n  }, React.createElement(Animated.Image, {\n    source: {\n      uri: emmaPizzaRestaurant.image\n    },\n    style: {\n      width: screen_width,\n      height: animatedHeight,\n      resizeMode: 'cover'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 73\n    }\n  })), React.createElement(HorizontalDivider, {\n    height: 1,\n    color: app_styles(scales).colors.text.light_grey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 69\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: toggleHeight,\n    style: styles(scales).toggler_btn,\n    activeOpacity: .9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 69\n    }\n  }, React.createElement(IcoMoonIcon, {\n    style: {\n      transform: [{\n        rotate: getArrowPosition()\n      }]\n    },\n    name: \"arrow_downward\",\n    color: app_styles(scales).colors.text.primary,\n    size: Math.round(scales.widthScale * 18),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 73\n    }\n  }))), React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 65\n    }\n  }, React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 69\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 73\n    }\n  }, emmaPizzaRestaurant.title)), notEmptyString(emmaPizzaRestaurant.schedule) ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 85\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 85\n    }\n  }, React.createElement(View, {\n    style: styles(scales).icon_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 89\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"wall-clock\",\n    color: app_styles(scales).colors.app.light_black,\n    size: Math.round(scales.widthScale * 18),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 93\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 89\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 93\n    }\n  }, emmaPizzaRestaurant.schedule)))) : null, notEmptyString(emmaPizzaRestaurant.address) ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 85\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 85\n    }\n  }, React.createElement(View, {\n    style: styles(scales).icon_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 89\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"pin\",\n    color: app_styles(scales).colors.app.light_black,\n    size: Math.round(scales.widthScale * 19),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 93\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: openMap,\n    activeOpacity: .7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 89\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 93\n    }\n  }, emmaPizzaRestaurant.address)))) : null, notEmptyString(emmaPizzaRestaurant.phone) ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 85\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 85\n    }\n  }, React.createElement(View, {\n    style: styles(scales).icon_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 89\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"phone-alt\",\n    color: app_styles(scales).colors.app.light_black,\n    size: Math.round(scales.widthScale * 18),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 93\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: makeCall,\n    activeOpacity: .7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 89\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 93\n    }\n  }, emmaPizzaRestaurant.phone)))) : null, notEmptyString(contacts.email) ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 85\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 85\n    }\n  }, React.createElement(View, {\n    style: styles(scales).icon_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 89\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"envelope\",\n    color: app_styles(scales).colors.app.light_black,\n    size: Math.round(scales.widthScale * 18),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 93\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: sendEmail,\n    activeOpacity: .7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 89\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 93\n    }\n  }, contacts.email)))) : null, hasAtLeLeastOneSocial() ? React.createElement(React.Fragment, null, React.createElement(Spacer, {\n    spaceHeight: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 85\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 85\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).sub_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 89\n    }\n  }, translator.translate(language, 'Ми в соц. мережах'))), React.createElement(Spacer, {\n    spaceHeight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 85\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 85\n    }\n  }, notEmptyString(emmaPizzaRestaurant.facebook) ? React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles(scales).social_btn,\n    onPress: function onPress() {\n      return handleLink(emmaPizzaRestaurant.facebook, 'facebook');\n    },\n    activeOpacity: .8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 105\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"facebook-app-logo\",\n    color: app_styles(scales).colors.text.grey,\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 109\n    }\n  })), React.createElement(VerticalSpacer, {\n    spaceWidth: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 105\n    }\n  })) : null, notEmptyString(emmaPizzaRestaurant.instagram) ? React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles(scales).social_btn,\n    onPress: function onPress() {\n      return handleLink(emmaPizzaRestaurant.instagram, 'inastagram');\n    },\n    activeOpacity: .8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 105\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"social-media\",\n    color: app_styles(scales).colors.text.grey,\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 109\n    }\n  })), React.createElement(VerticalSpacer, {\n    spaceWidth: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 105\n    }\n  })) : null, notEmptyString(emmaPizzaRestaurant.youtube) ? React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles(scales).social_btn,\n    onPress: function onPress() {\n      return handleLink(emmaPizzaRestaurant.youtube, 'youtube');\n    },\n    activeOpacity: .8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 105\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"youtube\",\n    color: app_styles(scales).colors.text.grey,\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 109\n    }\n  })), React.createElement(VerticalSpacer, {\n    spaceWidth: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 105\n    }\n  })) : null, notEmptyString(emmaPizzaRestaurant.tripadvisor) ? React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles(scales).social_btn,\n    onPress: function onPress() {\n      return handleLink(emmaPizzaRestaurant.tripadvisor, 'tripadvisor');\n    },\n    activeOpacity: .8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 105\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"tripadvisor-seeklogocom\",\n    color: app_styles(scales).colors.text.grey,\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 109\n    }\n  }))) : null)) : null)) : null) : React.createElement(NetworkErrorModal, {\n    isOpened: settingsNetworkError,\n    closeCallback: clearSettingsNetworkError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 43\n    }\n  }) : React.createElement(DataLoadingIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 35\n    }\n  })))));\n};\n\nexport default ContactsScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/ContactsScreen.js"],"names":["React","useContext","useState","useEffect","Context","AppSettingsContext","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","Header","SafeView","Block","Spacer","DataLoadingIndicator","HorizontalDivider","VerticalSpacer","NetworkErrorModal","NavigationEvents","translator","prepareLanguageToHttpRequest","notEmptyString","styles","app_styles","ContactsScreen","navigation","state","scales","language","emmaPizzaRestaurant","emmaPizzaRestaurantMetaData","settingsNetworkError","screen_width","contacts","getEmmaPizzaRestaurant","clearSettingsNetworkError","isDataLoading","setIsDataLoading","Animated","Value","Math","round","heightScale","animatedHeight","setAnimatedHeight","extendedCard","setExtendedCard","widenPhoto","timing","toValue","widthScale","duration","easing","Easing","linear","start","shortenPhoto","toggleHeight","getArrowPosition","handleFocus","Object","keys","length","getRestaurant","makeCall","cleanedPhoneNumber","phone","replace","indexOf","substring","link","Platform","OS","Linking","openURL","sendEmail","address","email","openMap","gmap","trim","hasAtLeLeastOneSocial","facebook","instagram","youtube","tripadvisor","handleLink","type","urlParts","split","username","url","chanelName","translate","body","paddingBottom","flexGrow","colors","text","light_grey","justifyContent","alignItems","height","uri","image","width","resizeMode","toggler_btn","transform","rotate","primary","row_start","title","schedule","icon_container","app","light_black","sub_title","social_btn","grey"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, {useContext, useState, useEffect} from 'react';\n//React native\nimport {View, ScrollView, Text, Animated, Easing, TouchableOpacity, Linking} from 'react-native';\n//Context\nimport {Context as AppSettingsContext} from \"../context/AppSettingsContext\";\n//React-native-vector-icons package\nimport {createIconSetFromIcoMoon} from 'react-native-vector-icons';\nimport icoMoonConfig from '../../selection.json';\n\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Componetns\nimport Header from \"../components/shared/Header\";\nimport {SafeView, Block, Spacer, DataLoadingIndicator, HorizontalDivider, VerticalSpacer} from \"../components/shared\";\nimport {NetworkErrorModal} from \"../components/modals\";\n//Navigation Events\nimport {NavigationEvents} from 'react-navigation';\n//Localization\nimport translator from \"../translator/translator\";\n//Helpers\nimport {prepareLanguageToHttpRequest, notEmptyString} from \"../helpers/helpers\";\n//Styles\nimport styles from '../styles/screens/contacts-screen';\nimport {app_styles} from \"../styles/app_styles\";\n\n\n//----COMPONENT----//\nconst ContactsScreen = ({navigation}) => {\n    //Data and State\n    const {state: {scales, language, emmaPizzaRestaurant, emmaPizzaRestaurantMetaData, settingsNetworkError, screen_width, contacts}, getEmmaPizzaRestaurant, clearSettingsNetworkError} = useContext(AppSettingsContext);\n    const [isDataLoading, setIsDataLoading] = useState(false);\n    const [animatedHeight, setAnimatedHeight] = useState(new Animated.Value(Math.round(scales.heightScale * 270)));\n    const [extendedCard, setExtendedCard] = useState(false);\n\n\n    //Hooks and Methods\n    const widenPhoto = () => {\n        Animated.timing(animatedHeight, {\n            toValue: Math.round(scales.widthScale * 110),\n            duration: 300,\n            easing: Easing.linear\n        }).start();\n    }\n\n\n    const shortenPhoto = () => {\n        Animated.timing(animatedHeight, {\n            toValue: Math.round(scales.widthScale * 270),\n            duration: 300,\n            easing: Easing.linear\n        }).start();\n    }\n\n\n    const toggleHeight = () => {\n        if (extendedCard) {\n            shortenPhoto();\n        } else {\n            widenPhoto();\n        }\n        setExtendedCard(!extendedCard)\n    }\n\n\n    const getArrowPosition = () => {\n        return !extendedCard ? \"180deg\" : \"0deg\";\n    }\n\n    const handleFocus = async () => {\n        if (!Object.keys(emmaPizzaRestaurant).length || emmaPizzaRestaurantMetaData.language !== language) {\n            await getRestaurant();\n        }\n    }\n\n    const getRestaurant = async () => {\n        setIsDataLoading(true);\n        await getEmmaPizzaRestaurant();\n        setIsDataLoading(false);\n    }\n\n    const makeCall = () => {\n        let cleanedPhoneNumber = emmaPizzaRestaurant.phone.replace(/\\D||\\s/g, \"\");\n\n        if (cleanedPhoneNumber.indexOf('38') === 0) {\n            cleanedPhoneNumber = cleanedPhoneNumber.substring(2);\n        }\n        const link = Platform.OS === 'ios' ? `tel://+38${cleanedPhoneNumber}` : `tel:+38${cleanedPhoneNumber}`;\n        Linking.openURL(link)\n    }\n\n    const sendEmail = () => {\n        let address = contacts.email;\n        if (!notEmptyString(address)) return;\n        let link = `mailto: ${contacts.email}`\n        return Linking.openURL(link)\n    }\n\n    const openMap = () => {\n        let link = emmaPizzaRestaurant.gmap;\n        return notEmptyString(link) ? Linking.openURL(link.trim()) : false;\n    }\n\n    const hasAtLeLeastOneSocial = () => {\n        return notEmptyString(emmaPizzaRestaurant.facebook)\n            || notEmptyString(emmaPizzaRestaurant.instagram)\n            || notEmptyString(emmaPizzaRestaurant.youtube)\n            || notEmptyString(emmaPizzaRestaurant.tripadvisor)\n    }\n\n\n    const handleLink = async (link, type) => {\n        if (type === 'instagram') {\n            let urlParts = link.split('/');\n            let username = urlParts[urlParts.length - 1];\n            let url = `instagram://user?username=${username}`;\n            try {\n                await Linking.openURL(url)\n            } catch (err) {\n                await Linking.openURL(link.trim())\n            }\n        } else if (type === 'youtube') {\n            let urlParts = link.split('/');\n            let chanelName = urlParts[urlParts.length - 1];\n            let url = `youtube://chanel=${chanelName}`;\n            try {\n                await Linking.openURL(url)\n            } catch (err) {\n                await Linking.openURL(link.trim())\n            }\n        } else {\n            await Linking.openURL(link.trim())\n        }\n    }\n\n\n\n\n    //Template\n    return (\n        <>\n            <SafeView>\n                <NavigationEvents\n                    onWillFocus={handleFocus}\n                />\n                <Header\n                    backAllowed\n                    navigation={navigation}\n                    title={translator.translate(language, \"Контакти\")}\n                    noIcons\n                />\n                <View style={styles(scales).body}>\n                    <ScrollView\n                        showsVerticalScrollIndicator={false}\n                        bounces={false}\n                        keyboardShouldPersistTaps={'always'}\n                        contentContainerStyle={{paddingBottom: Math.round(scales.heightScale * 20), flexGrow: 1}}\n                    >\n                        {\n                            !isDataLoading\n                                ? (\n                                    !settingsNetworkError\n                                        ? (\n                                            <>\n                                                {\n                                                    Object.keys(emmaPizzaRestaurant).length\n                                                        ? (\n                                                            <>\n                                                                {/* IMAGE */}\n                                                                <View style={{paddingBottom: Math.round(scales.widthScale * 25)}}>\n                                                                    <HorizontalDivider height={1}\n                                                                                       color={app_styles(scales).colors.text.light_grey}/>\n                                                                    <Animated.View style={{\n                                                                        justifyContent: 'flex-start',\n                                                                        alignItems: 'flex-start',\n                                                                        height: animatedHeight,\n                                                                    }}>\n                                                                        <Animated.Image\n                                                                            source={{uri: emmaPizzaRestaurant.image}}\n                                                                            style={{\n                                                                                width: screen_width,\n                                                                                height: animatedHeight,\n                                                                                resizeMode: 'cover'\n                                                                            }}\n                                                                        />\n                                                                    </Animated.View>\n                                                                    <HorizontalDivider height={1}\n                                                                                       color={app_styles(scales).colors.text.light_grey}/>\n                                                                    {/* Switcher */}\n                                                                    <TouchableOpacity onPress={toggleHeight}\n                                                                                      style={styles(scales).toggler_btn}\n                                                                                      activeOpacity={.9}>\n                                                                        <IcoMoonIcon\n                                                                            style={{transform: [{rotate: getArrowPosition()}]}}\n                                                                            name=\"arrow_downward\"\n                                                                            color={app_styles(scales).colors.text.primary}\n                                                                            size={Math.round(scales.widthScale * 18)}\n                                                                        />\n                                                                    </TouchableOpacity>\n                                                                </View>\n                                                                {/* Contacts */}\n                                                                <Block>\n                                                                    <View style={app_styles(scales).row_start}>\n                                                                        <Text\n                                                                            style={styles(scales).title}>{emmaPizzaRestaurant.title}</Text>\n                                                                    </View>\n                                                                    {\n                                                                        notEmptyString(emmaPizzaRestaurant.schedule)\n                                                                            ? (\n                                                                                <>\n                                                                                    <Spacer spaceHeight={14}/>\n                                                                                    <View style={app_styles(scales).row_start}>\n                                                                                        <View style={styles(scales).icon_container}>\n                                                                                            <IcoMoonIcon name=\"wall-clock\"\n                                                                                                         color={app_styles(scales).colors.app.light_black}\n                                                                                                         size={Math.round(scales.widthScale * 18)}/>\n                                                                                        </View>\n                                                                                        <View>\n                                                                                            <Text\n                                                                                                style={styles(scales).text}>{emmaPizzaRestaurant.schedule}</Text>\n                                                                                        </View>\n                                                                                    </View>\n                                                                                </>\n                                                                            )\n                                                                            : null\n                                                                    }\n                                                                    {\n                                                                        notEmptyString(emmaPizzaRestaurant.address)\n                                                                            ? (\n                                                                                <>\n                                                                                    <Spacer spaceHeight={14}/>\n                                                                                    <View style={app_styles(scales).row_start}>\n                                                                                        <View style={styles(scales).icon_container}>\n                                                                                            <IcoMoonIcon name=\"pin\"\n                                                                                                         color={app_styles(scales).colors.app.light_black}\n                                                                                                         size={Math.round(scales.widthScale * 19)}/>\n                                                                                        </View>\n                                                                                        <TouchableOpacity onPress={openMap}\n                                                                                                          activeOpacity={.7}>\n                                                                                            <Text\n                                                                                                style={styles(scales).text}>{emmaPizzaRestaurant.address}</Text>\n                                                                                        </TouchableOpacity>\n                                                                                    </View>\n                                                                                </>\n                                                                            )\n                                                                            : null\n                                                                    }\n                                                                    {\n                                                                        notEmptyString(emmaPizzaRestaurant.phone)\n                                                                            ? (\n                                                                                <>\n                                                                                    <Spacer spaceHeight={14}/>\n                                                                                    <View style={app_styles(scales).row_start}>\n                                                                                        <View style={styles(scales).icon_container}>\n                                                                                            <IcoMoonIcon name=\"phone-alt\"\n                                                                                                         color={app_styles(scales).colors.app.light_black}\n                                                                                                         size={Math.round(scales.widthScale * 18)}/>\n                                                                                        </View>\n                                                                                        <TouchableOpacity onPress={makeCall}\n                                                                                                          activeOpacity={.7}>\n                                                                                            <Text\n                                                                                                style={styles(scales).text}>{emmaPizzaRestaurant.phone}</Text>\n                                                                                        </TouchableOpacity>\n                                                                                    </View>\n                                                                                </>\n                                                                            )\n                                                                            : null\n                                                                    }\n                                                                    {\n                                                                        notEmptyString(contacts.email)\n                                                                            ? (\n                                                                                <>\n                                                                                    <Spacer spaceHeight={14}/>\n                                                                                    <View style={app_styles(scales).row_start}>\n                                                                                        <View style={styles(scales).icon_container}>\n                                                                                            <IcoMoonIcon name=\"envelope\"\n                                                                                                         color={app_styles(scales).colors.app.light_black}\n                                                                                                         size={Math.round(scales.widthScale * 18)}/>\n                                                                                        </View>\n                                                                                        <TouchableOpacity onPress={sendEmail}\n                                                                                                          activeOpacity={.7}>\n                                                                                            <Text\n                                                                                                style={styles(scales).text}>{contacts.email}</Text>\n                                                                                        </TouchableOpacity>\n                                                                                    </View>\n                                                                                </>\n                                                                            )\n                                                                            : null\n                                                                    }\n                                                                    {\n                                                                        hasAtLeLeastOneSocial()\n                                                                            ? (\n                                                                                <>\n                                                                                    <Spacer spaceHeight={30}/>\n                                                                                    <View style={app_styles(scales).row_start}>\n                                                                                        <Text\n                                                                                            style={styles(scales).sub_title}>{translator.translate(language, 'Ми в соц. мережах')}</Text>\n                                                                                    </View>\n                                                                                    <Spacer spaceHeight={10}/>\n                                                                                    <View style={app_styles(scales).row_start}>\n                                                                                        {\n                                                                                            notEmptyString(emmaPizzaRestaurant.facebook)\n                                                                                                ? (\n                                                                                                    <>\n                                                                                                        <TouchableOpacity\n                                                                                                            style={styles(scales).social_btn}\n                                                                                                            onPress={() => handleLink(emmaPizzaRestaurant.facebook, 'facebook')}\n                                                                                                            activeOpacity={.8}\n                                                                                                        >\n                                                                                                            <IcoMoonIcon\n                                                                                                                name=\"facebook-app-logo\"\n                                                                                                                color={app_styles(scales).colors.text.grey}\n                                                                                                                size={30}\n                                                                                                            />\n                                                                                                        </TouchableOpacity>\n                                                                                                        <VerticalSpacer spaceWidth={12} />\n                                                                                                    </>\n                                                                                                )\n                                                                                                : null\n                                                                                        }\n                                                                                        {\n                                                                                            notEmptyString(emmaPizzaRestaurant.instagram)\n                                                                                                ? (\n                                                                                                    <>\n                                                                                                        <TouchableOpacity\n                                                                                                            style={styles(scales).social_btn}\n                                                                                                            onPress={() => handleLink(emmaPizzaRestaurant.instagram, 'inastagram')}\n                                                                                                            activeOpacity={.8}\n                                                                                                        >\n                                                                                                            <IcoMoonIcon\n                                                                                                                name=\"social-media\"\n                                                                                                                color={app_styles(scales).colors.text.grey}\n                                                                                                                size={30}\n                                                                                                            />\n                                                                                                        </TouchableOpacity>\n                                                                                                        <VerticalSpacer spaceWidth={12} />\n                                                                                                    </>\n                                                                                                )\n                                                                                                : null\n                                                                                        }\n                                                                                        {\n                                                                                            notEmptyString(emmaPizzaRestaurant.youtube)\n                                                                                                ? (\n                                                                                                    <>\n                                                                                                        <TouchableOpacity\n                                                                                                            style={styles(scales).social_btn}\n                                                                                                            onPress={() => handleLink(emmaPizzaRestaurant.youtube, 'youtube')}\n                                                                                                            activeOpacity={.8}\n                                                                                                        >\n                                                                                                            <IcoMoonIcon\n                                                                                                                name=\"youtube\"\n                                                                                                                color={app_styles(scales).colors.text.grey}\n                                                                                                                size={30}\n                                                                                                            />\n                                                                                                        </TouchableOpacity>\n                                                                                                        <VerticalSpacer spaceWidth={12} />\n                                                                                                    </>\n                                                                                                )\n                                                                                                : null\n                                                                                        }\n                                                                                        {\n                                                                                            notEmptyString(emmaPizzaRestaurant.tripadvisor)\n                                                                                                ? (\n                                                                                                    <>\n                                                                                                        <TouchableOpacity\n                                                                                                            style={styles(scales).social_btn}\n                                                                                                            onPress={() => handleLink(emmaPizzaRestaurant.tripadvisor, 'tripadvisor')}\n                                                                                                            activeOpacity={.8}\n                                                                                                        >\n                                                                                                            <IcoMoonIcon\n                                                                                                                name=\"tripadvisor-seeklogocom\"\n                                                                                                                color={app_styles(scales).colors.text.grey}\n                                                                                                                size={30}\n                                                                                                            />\n                                                                                                        </TouchableOpacity>\n                                                                                                    </>\n                                                                                                )\n                                                                                                : null\n                                                                                        }\n                                                                                    </View>\n                                                                                </>\n                                                                            )\n                                                                            : null\n                                                                    }\n                                                                </Block>\n\n                                                            </>\n                                                        )\n                                                        : null\n                                                }\n                                            </>\n                                        )\n                                        : <NetworkErrorModal\n                                            isOpened={settingsNetworkError}\n                                            closeCallback={clearSettingsNetworkError}\n                                        />\n                                )\n                                : <DataLoadingIndicator/>\n                        }\n                    </ScrollView>\n                </View>\n            </SafeView>\n        </>\n    );\n}\n\n\n//----EXPORT----//\nexport default ContactsScreen;"]},"metadata":{},"sourceType":"module"}