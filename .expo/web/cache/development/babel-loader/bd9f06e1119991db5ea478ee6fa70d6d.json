{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/components/shared/IntelligentImage.js\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport SafeView from \"./SafeView\";\nimport styles from \"../../styles/components/shared/intelligent-image\";\nimport { app_styles } from \"../../styles/app_styles\";\n\nvar IntelligentImage = function IntelligentImage(_ref) {\n  var thumbnailSource = _ref.thumbnailSource,\n      thumbnailStyles = _ref.thumbnailStyles,\n      fullSizeSource = _ref.fullSizeSource,\n      fullSizeStyles = _ref.fullSizeStyles,\n      _ref$isZoomable = _ref.isZoomable,\n      isZoomable = _ref$isZoomable === void 0 ? true : _ref$isZoomable;\n\n  var _useContext = useContext(AppSettingsContext),\n      scales = _useContext.state.scales;\n\n  var _useState = useState(require(\"../../../assets/images/default.png\")),\n      _useState2 = _slicedToArray(_useState, 2),\n      thumbnailUri = _useState2[0],\n      setThumbnailUri = _useState2[1];\n\n  var _useState3 = useState(require(\"../../../assets/images/default.png\")),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fullSizeUri = _useState4[0],\n      setFullSizeUri = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      zoomImage = _useState6[0],\n      setZoomImage = _useState6[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, isZoomable ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setZoomImage(true);\n    },\n    activeOpacity: .7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, React.createElement(Image, {\n    style: thumbnailStyles,\n    source: thumbnailUri,\n    onLoad: function onLoad() {\n      setThumbnailUri({\n        uri: thumbnailSource\n      });\n    },\n    resizeMode: \"cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  })) : React.createElement(Image, {\n    style: thumbnailStyles,\n    source: thumbnailUri,\n    onLoad: function onLoad() {\n      setThumbnailUri({\n        uri: thumbnailSource\n      });\n    },\n    resizeMode: \"cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 27\n    }\n  })), React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: zoomImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }\n  }, React.createElement(View, {\n    style: styles(scales).modal_content_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 20\n    }\n  }, React.createElement(View, {\n    style: styles(scales).header_row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 24\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setZoomImage(false);\n    },\n    style: styles(scales).close_modal_button_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 28\n    }\n  }, React.createElement(View, {\n    style: styles(scales).close_modal_button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 32\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"cancel\",\n    color: app_styles(scales).colors.text.primary,\n    size: Math.round(scales.widthScale * 14),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 36\n    }\n  })))), React.createElement(View, {\n    style: styles(scales).modal_card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }\n  }, React.createElement(Image, {\n    onLoad: function onLoad() {\n      setFullSizeUri({\n        uri: fullSizeSource\n      });\n    },\n    style: fullSizeStyles,\n    source: fullSizeUri,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }\n  }))))));\n};\n\nexport default IntelligentImage;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/shared/IntelligentImage.js"],"names":["React","useState","useContext","Context","AppSettingsContext","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","SafeView","styles","app_styles","IntelligentImage","thumbnailSource","thumbnailStyles","fullSizeSource","fullSizeStyles","isZoomable","scales","state","require","thumbnailUri","setThumbnailUri","fullSizeUri","setFullSizeUri","zoomImage","setZoomImage","uri","modal_content_container","header_row","close_modal_button_container","close_modal_button","colors","text","primary","Math","round","widthScale","modal_card"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, {useState, useContext} from 'react';\n//React native\nimport {View, Image, Modal, TouchableOpacity} from 'react-native';\n//Context\nimport {Context as AppSettingsContext} from \"../../context/AppSettingsContext\";\n//React-native-vector-icons package\nimport {createIconSetFromIcoMoon} from 'react-native-vector-icons';\nimport icoMoonConfig from '../../../selection.json';\n\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Components\nimport SafeView from \"./SafeView\";\n//Styles\nimport styles from \"../../styles/components/shared/intelligent-image\";\nimport {app_styles} from \"../../styles/app_styles\";\n\n\n//----COMPONENT----//\nconst IntelligentImage = ({thumbnailSource, thumbnailStyles, fullSizeSource, fullSizeStyles, isZoomable = true}) => {\n    //Data and State\n    const {state: {scales}} = useContext(AppSettingsContext);\n    const [thumbnailUri, setThumbnailUri] = useState(require(\"../../../assets/images/default.png\"));\n    const [fullSizeUri, setFullSizeUri] = useState(require(\"../../../assets/images/default.png\"));\n    const [zoomImage, setZoomImage] = useState(false);\n\n\n    //Template\n    return (\n        <>\n            <View>\n                {\n                    isZoomable\n                        ? (\n                            <TouchableOpacity onPress={() => setZoomImage(true)} activeOpacity={.7}>\n                                <Image\n                                    style={thumbnailStyles}\n                                    source={thumbnailUri}\n                                    onLoad={() => {\n                                        setThumbnailUri({uri: thumbnailSource})\n                                    }}\n                                    resizeMode=\"cover\"\n                                />\n                            </TouchableOpacity>\n                        )\n                        : <Image\n                            style={thumbnailStyles}\n                            source={thumbnailUri}\n                            onLoad={() => {\n                                setThumbnailUri({uri: thumbnailSource})\n                            }}\n                            resizeMode=\"cover\"\n                        />\n                }\n            </View>\n            {/* MODAL */}\n            <Modal\n                animationType=\"fade\"\n                transparent={true}\n                visible={zoomImage}\n            >\n               <SafeView>\n                   <View style={styles(scales).modal_content_container}>\n                       {/* Close modal */}\n                       <View style={styles(scales).header_row}>\n                           <TouchableOpacity onPress={() => setZoomImage(false)}\n                                             style={styles(scales).close_modal_button_container}>\n                               <View style={styles(scales).close_modal_button}>\n                                   <IcoMoonIcon name=\"cancel\" color={app_styles(scales).colors.text.primary}\n                                                size={Math.round(scales.widthScale * 14)}/>\n                               </View>\n                           </TouchableOpacity>\n                       </View>\n                       {/* Modal card */}\n                       <View style={styles(scales).modal_card}>\n                           <Image\n                               onLoad={() => {\n                                   setFullSizeUri({uri: fullSizeSource})\n                               }}\n                               style={fullSizeStyles}\n                               source={fullSizeUri}\n                           />\n                       </View>\n                   </View>\n               </SafeView>\n            </Modal>\n        </>\n    )\n}\n\n\n//----EXPORT----//\nexport default IntelligentImage;"]},"metadata":{},"sourceType":"module"}