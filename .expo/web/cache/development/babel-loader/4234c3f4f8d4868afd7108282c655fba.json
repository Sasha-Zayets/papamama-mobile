{"ast":null,"code":"var _jsxFileName = \"/home/alex/workspace/papamama/src/components/notifications/NotificationCard.js\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\nimport { Spacer, VerticalSpacer } from \"../shared\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../../../selection.json\";\nvar IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\nimport { prepareLanguageToHttpRequest } from \"../../helpers/helpers\";\nimport moment from \"moment\";\nimport 'moment/locale/uk';\nimport 'moment/locale/ru';\nimport styles from \"../../styles/components/notifications/notification-card\";\nimport { app_styles } from \"../../styles/app_styles\";\n\nvar NotificationCard = function NotificationCard(_ref) {\n  var notification = _ref.notification,\n      navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      language = _useContext$state.language,\n      scales = _useContext$state.scales;\n\n  var transformUnixTime = function transformUnixTime(time) {\n    var lang = prepareLanguageToHttpRequest(language);\n    moment.locale(lang);\n    return moment(parseInt(time) * 1000).format('DD MMMM YYYY HH:mm');\n  };\n\n  var getColor = function getColor() {\n    return notification.read === 0 ? app_styles(scales).colors.text.primary : app_styles(scales).colors.text.light_grey;\n  };\n\n  return React.createElement(TouchableOpacity, {\n    style: styles(scales).container,\n    onPress: function onPress() {\n      return navigation.navigate('ReadNotification', {\n        'notificationId': notification.id,\n        'notificationStatus': String(notification.read)\n      });\n    },\n    activeOpacity: .8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles(scales).body_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles(scales).row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"date\",\n    color: getColor(),\n    size: Math.round(scales.widthScale * 18),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), React.createElement(VerticalSpacer, {\n    spaceWidth: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: [styles(scales).title, {\n      color: getColor()\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, transformUnixTime(notification.date))), React.createElement(Spacer, {\n    spaceHeight: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles(scales).row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"bell1\",\n    color: getColor(),\n    size: Math.round(scales.widthScale * 18),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), React.createElement(VerticalSpacer, {\n    spaceWidth: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: [styles(scales).title, {\n      color: getColor()\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, notification.title)))), React.createElement(View, {\n    style: styles(scales).read_more,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(IcoMoonIcon, {\n    name: \"arrow-right\",\n    color: \"#7b7a7a\",\n    size: Math.round(scales.widthScale * 15),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default NotificationCard;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/components/notifications/NotificationCard.js"],"names":["React","useContext","Context","AppSettingsContext","Spacer","VerticalSpacer","createIconSetFromIcoMoon","icoMoonConfig","IcoMoonIcon","prepareLanguageToHttpRequest","moment","styles","app_styles","NotificationCard","notification","navigation","state","language","scales","transformUnixTime","time","lang","locale","parseInt","format","getColor","read","colors","text","primary","light_grey","container","navigate","id","String","body_container","row","Math","round","widthScale","title","color","date","flex","read_more"],"mappings":"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","sourcesContent":["//----IMPORTS----//\n//React\nimport React, { useContext } from 'react';\n//React native\nimport { View, Text, TouchableOpacity } from 'react-native';\n//Context\nimport { Context as AppSettingsContext } from \"../../context/AppSettingsContext\";\n//Components\nimport { Spacer, VerticalSpacer } from \"../shared\";\n//React-native-vector-icons package\nimport { createIconSetFromIcoMoon } from 'react-native-vector-icons';\nimport icoMoonConfig from '../../../selection.json';\nconst IcoMoonIcon = createIconSetFromIcoMoon(icoMoonConfig, 'icomoon', 'icomoon.ttf');\n//Helpers\nimport {prepareLanguageToHttpRequest} from \"../../helpers/helpers\";\n//Moment\nimport moment from \"moment\";\nimport 'moment/locale/uk';\nimport 'moment/locale/ru';\n//Styles\nimport styles from '../../styles/components/notifications/notification-card';\nimport { app_styles } from '../../styles/app_styles';\n\n\n\n\n//----COMPONENT----//\nconst NotificationCard = ({ notification, navigation }) => {\n    //Data and State\n    const { state: { language, scales } } = useContext(AppSettingsContext);\n\n\n    //Hooks and Methods\n   const transformUnixTime = (time) => {\n       const lang = prepareLanguageToHttpRequest(language);\n       moment.locale(lang);\n       return moment(parseInt(time) * 1000).format('DD MMMM YYYY HH:mm');\n    }\n\n    const getColor = () => notification.read === 0 ? app_styles(scales).colors.text.primary : app_styles(scales).colors.text.light_grey\n\n\n    //Template\n    return (\n        <TouchableOpacity style={styles(scales).container} onPress={() => navigation.navigate('ReadNotification', {'notificationId': notification.id, 'notificationStatus': String(notification.read)})} activeOpacity={.8}>\n            <View style={styles(scales).body_container}>\n                <View style={styles(scales).row}>\n                    <IcoMoonIcon\n                        name=\"date\"\n                        color={getColor()}\n                        size={Math.round(scales.widthScale * 18)}\n                    />\n                    <VerticalSpacer spaceWidth={8} />\n                    <Text style={[styles(scales).title, {color: getColor()}]}>{transformUnixTime(notification.date)}</Text>\n                </View>\n                <Spacer spaceHeight={8} />\n                <View style={styles(scales).row}>\n                    <IcoMoonIcon\n                        name=\"bell1\"\n                        color={getColor()}\n                        size={Math.round(scales.widthScale * 18)}\n                    />\n                    <VerticalSpacer spaceWidth={8} />\n                    <View style={{flex: 1}}>\n                        <Text style={[styles(scales).title, {color: getColor()}]}>{notification.title}</Text>\n                    </View>\n                </View>\n            </View>\n            <View style={styles(scales).read_more}>\n                <IcoMoonIcon\n                    name=\"arrow-right\"\n                    color=\"#7b7a7a\"\n                    size={Math.round(scales.widthScale * 15)}\n                />\n            </View>\n        </TouchableOpacity>\n    );\n}\n\n\n\n//----EXPORT----//\nexport default NotificationCard"]},"metadata":{},"sourceType":"module"}