{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alex/workspace/papamama/src/screens/OrdersHistoryDetailsScreen.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Context as AppSettingsContext } from \"../context/AppSettingsContext\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nimport Header from \"../components/shared/Header\";\nimport { SafeView, Block, Spacer, HorizontalDivider, DataLoadingIndicator } from \"../components/shared\";\nimport ProductCardOrderHistory from \"../components/menu/ProductCardOrderHistory\";\nimport { NetworkErrorModal } from \"../components/modals\";\nimport moment from \"moment\";\nimport 'moment/locale/uk';\nimport axiosWithToken from \"../services/axiosWithToken\";\nimport { BASE_URL, APP_VERSION } from \"../different/global_vars\";\nimport translator from \"../translator/translator\";\nimport { formatPrice, prepareLanguageToHttpRequest } from \"../helpers/helpers\";\nimport styles from \"../styles/screens/orders-history-details-screen\";\nimport { app_styles } from \"../styles/app_styles\";\n\nvar OrdersHistoryDetailsScreen = function OrdersHistoryDetailsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AppSettingsContext),\n      _useContext$state = _useContext.state,\n      scales = _useContext$state.scales,\n      language = _useContext$state.language;\n\n  var _useContext2 = useContext(AuthContext),\n      ordersStatuses = _useContext2.state.ordersStatuses;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      order = _useState2[0],\n      setOrder = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDataFetching = _useState4[0],\n      setIsDataFetching = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      networkError = _useState6[0],\n      setNetworkError = _useState6[1];\n\n  useEffect(function () {\n    var order_id = navigation.getParam('order_id');\n\n    if (order_id) {\n      getOrderInfo(order_id);\n    }\n  }, [language]);\n\n  var transformUnixTime = function transformUnixTime(time) {\n    moment.locale(\"uk\");\n    return moment(time * 1000).format('DD MMMM YYYY');\n  };\n\n  var defineOrderStatusColor = function defineOrderStatusColor(name) {\n    var lang = prepareLanguageToHttpRequest(language);\n    var needle = ordersStatuses[lang];\n    var status = needle.find(function (item) {\n      return item.name.toLowerCase() === name.toLowerCase();\n    });\n    return status ? status.color : app_styles(scales).colors.text.primary;\n  };\n\n  var populateHistoryProducts = function populateHistoryProducts() {\n    var products = order.order_products.map(function (product, index) {\n      return React.createElement(View, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, React.createElement(ProductCardOrderHistory, {\n        product: product,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }), index < order.order_products.length - 1 ? React.createElement(Spacer, {\n        spaceHeight: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 31\n        }\n      }) : null);\n    });\n    return products;\n  };\n\n  var getOrderInfo = function getOrderInfo(id) {\n    var lang, url, response, info;\n    return _regeneratorRuntime.async(function getOrderInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setIsDataFetching(true);\n            lang = prepareLanguageToHttpRequest(language);\n            url = BASE_URL + \"/order/history-show?lang=\" + lang + \"&version=\" + APP_VERSION + \"&id=\" + id;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axiosWithToken.get(url));\n\n          case 6:\n            response = _context.sent;\n\n            if (response) {\n              info = response.data.order;\n              setOrder(info);\n\n              if (networkError) {\n                setNetworkError(false);\n              }\n            }\n\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            setNetworkError(true);\n\n          case 13:\n            _context.prev = 13;\n            setIsDataFetching(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    title: order ? translator.translate(language, \"Замовлення\") + \" \" + order.order_id : \" \",\n    backAllowed: true,\n    navigation: navigation,\n    noIcons: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles(scales).body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    bounces: false,\n    keyboardShouldPersistTaps: 'always',\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, !networkError ? !isDataFetching ? order ? React.createElement(React.Fragment, null, React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 57\n    }\n  }, React.createElement(View, {\n    style: app_styles(scales).row_start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 61\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 65\n    }\n  }, transformUnixTime(order.time)), React.createElement(Text, {\n    style: styles(scales).slash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 65\n    }\n  }, \" / \"), React.createElement(Text, {\n    style: [styles(scales).text, {\n      color: defineOrderStatusColor(order.status_text)\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 65\n    }\n  }, translator.translate(language, order.status_text)))), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 57\n    }\n  }), populateHistoryProducts(), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 57\n    }\n  }), React.createElement(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 57\n    }\n  }, React.createElement(HorizontalDivider, {\n    height: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 61\n    }\n  }), React.createElement(Spacer, {\n    spaceHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 61\n    }\n  }), order.packing ? React.createElement(React.Fragment, null, React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 77\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).li_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 81\n    }\n  }, translator.translate(language, \"Пакування\")), React.createElement(Text, {\n    style: styles(scales).li_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 81\n    }\n  }, order.packing ? formatPrice(language, order.packing) + ' ' + translator.translate(language, \"грн\") : '-')), React.createElement(Spacer, {\n    spaceHeight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 77\n    }\n  })) : null, React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 61\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).li_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 65\n    }\n  }, translator.translate(language, \"Доставка\")), React.createElement(Text, {\n    style: styles(scales).li_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 65\n    }\n  }, parseInt(order.delivery) ? formatPrice(language, order.delivery) + ' ' + translator.translate(language, \"грн\") : translator.translate(language, 'безкоштовно'))), React.createElement(Spacer, {\n    spaceHeight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 61\n    }\n  }), React.createElement(View, {\n    style: app_styles(scales).row_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 61\n    }\n  }, React.createElement(Text, {\n    style: styles(scales).total_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 65\n    }\n  }, translator.translate(language, \"Сума\")), React.createElement(Text, {\n    style: styles(scales).total_price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 65\n    }\n  }, order.sum ? formatPrice(language, order.total) + ' ' + translator.translate(language, \"грн\") : '-'))), React.createElement(Spacer, {\n    spaceHeight: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 57\n    }\n  })) : null : React.createElement(DataLoadingIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 43\n    }\n  }) : React.createElement(NetworkErrorModal, {\n    isOpened: networkError,\n    closeCallback: function closeCallback() {\n      return setNetworkError(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 35\n    }\n  })))));\n};\n\nexport default OrdersHistoryDetailsScreen;","map":{"version":3,"sources":["/home/alex/workspace/papamama/src/screens/OrdersHistoryDetailsScreen.js"],"names":["React","useEffect","useState","useContext","Context","AppSettingsContext","AuthContext","Header","SafeView","Block","Spacer","HorizontalDivider","DataLoadingIndicator","ProductCardOrderHistory","NetworkErrorModal","moment","axiosWithToken","BASE_URL","APP_VERSION","translator","formatPrice","prepareLanguageToHttpRequest","styles","app_styles","OrdersHistoryDetailsScreen","navigation","state","scales","language","ordersStatuses","order","setOrder","isDataFetching","setIsDataFetching","networkError","setNetworkError","order_id","getParam","getOrderInfo","transformUnixTime","time","locale","format","defineOrderStatusColor","name","lang","needle","status","find","item","toLowerCase","color","colors","text","primary","populateHistoryProducts","products","order_products","map","product","index","length","id","url","get","response","info","data","translate","body","flexGrow","row_start","slash","status_text","packing","row_between","li_text","parseInt","delivery","total_title","total_price","sum","total"],"mappings":";;;AAEA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAqD,OAArD;;;;AAIA,SAAQC,OAAO,IAAIC,kBAAnB;AACA,SAAQD,OAAO,IAAIE,WAAnB;AAEA,OAAOC,MAAP;AACA,SAAQC,QAAR,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,iBAAjC,EAAoDC,oBAApD;AACA,OAAOC,uBAAP;AACA,SAAQC,iBAAR;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;AAEA,OAAOC,cAAP;AAEA,SAAQC,QAAR,EAAkBC,WAAlB;AAEA,OAAOC,UAAP;AAEA,SAAQC,WAAR,EAAqBC,4BAArB;AAEA,OAAOC,MAAP;AACA,SAAQC,UAAR;;AAIA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,oBAEbtB,UAAU,CAACE,kBAAD,CAFG;AAAA,sCAE1CqB,KAF0C;AAAA,MAElCC,MAFkC,qBAElCA,MAFkC;AAAA,MAE1BC,QAF0B,qBAE1BA,QAF0B;;AAAA,qBAGfzB,UAAU,CAACG,WAAD,CAHK;AAAA,MAGlCuB,cAHkC,gBAG1CH,KAH0C,CAGlCG,cAHkC;;AAAA,kBAIvB3B,QAAQ,CAAC,IAAD,CAJe;AAAA;AAAA,MAI1C4B,KAJ0C;AAAA,MAInCC,QAJmC;;AAAA,mBAKL7B,QAAQ,CAAC,KAAD,CALH;AAAA;AAAA,MAK1C8B,cAL0C;AAAA,MAK1BC,iBAL0B;;AAAA,mBAMT/B,QAAQ,CAAC,KAAD,CANC;AAAA;AAAA,MAM1CgC,YAN0C;AAAA,MAM5BC,eAN4B;;AAUjDlC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAImC,QAAQ,GAAGX,UAAU,CAACY,QAAX,CAAoB,UAApB,CAAf;;AACA,QAAID,QAAJ,EAAc;AACVE,MAAAA,YAAY,CAACF,QAAD,CAAZ;AACH;AACJ,GALQ,EAKN,CAACR,QAAD,CALM,CAAT;;AAQA,MAAMW,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAAU;AAChCzB,IAAAA,MAAM,CAAC0B,MAAP,CAAc,IAAd;AACA,WAAO1B,MAAM,CAACyB,IAAI,GAAG,IAAR,CAAN,CAAoBE,MAApB,CAA2B,cAA3B,CAAP;AACH,GAHD;;AAKA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD,EAAU;AACrC,QAAIC,IAAI,GAAGxB,4BAA4B,CAACO,QAAD,CAAvC;AACA,QAAIkB,MAAM,GAAGjB,cAAc,CAACgB,IAAD,CAA3B;AAEA,QAAIE,MAAM,GAAGD,MAAM,CAACE,IAAP,CAAY,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACL,IAAL,CAAUM,WAAV,OAA4BN,IAAI,CAACM,WAAL,EAAhC;AAAA,KAAhB,CAAb;AACA,WAAOH,MAAM,GAAGA,MAAM,CAACI,KAAV,GAAkB5B,UAAU,CAACI,MAAD,CAAV,CAAmByB,MAAnB,CAA0BC,IAA1B,CAA+BC,OAA9D;AACH,GAND;;AASA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAClC,QAAIC,QAAQ,GAAG1B,KAAK,CAAC2B,cAAN,CAAqBC,GAArB,CAAyB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACxD,aACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,uBAAD;AAAyB,QAAA,OAAO,EAAED,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGSC,KAAK,GAAI9B,KAAK,CAAC2B,cAAN,CAAqBI,MAArB,GAA8B,CAAxC,GACM,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,GAEM,IALd,CADJ;AAUH,KAXc,CAAf;AAYA,WAAOL,QAAP;AACH,GAdD;;AAiBA,MAAMlB,YAAY,GAAG,SAAfA,YAAe,CAAOwB,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEb7B,YAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACMY,YAAAA,IAHO,GAGAxB,4BAA4B,CAACO,QAAD,CAH5B;AAIPmC,YAAAA,GAJO,GAIE9C,QAJF,iCAIsC4B,IAJtC,iBAIsD3B,WAJtD,YAIwE4C,EAJxE;AAAA;AAAA,6CAKU9C,cAAc,CAACgD,GAAf,CAAmBD,GAAnB,CALV;;AAAA;AAKPE,YAAAA,QALO;;AAOb,gBAAIA,QAAJ,EAAc;AACNC,cAAAA,IADM,GACCD,QAAQ,CAACE,IAAT,CAAcrC,KADf;AAEVC,cAAAA,QAAQ,CAACmC,IAAD,CAAR;;AACA,kBAAIhC,YAAJ,EAAkB;AACdC,gBAAAA,eAAe,CAAC,KAAD,CAAf;AACH;AACJ;;AAbY;AAAA;;AAAA;AAAA;AAAA;AAebA,YAAAA,eAAe,CAAC,IAAD,CAAf;;AAfa;AAAA;AAiBbF,YAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAjBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAsBA,SACI,0CACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEH,KAAK,GAAMX,UAAU,CAACiD,SAAX,CAAqBxC,QAArB,EAA+B,YAA/B,CAAN,SAAsDE,KAAK,CAACM,QAA5D,GAAyE,GADzF;AAEI,IAAA,WAAW,MAFf;AAGI,IAAA,UAAU,EAAEX,UAHhB;AAII,IAAA,OAAO,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACK,MAAD,CAAN,CAAe0C,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,4BAA4B,EAAE,KAA1C;AAAiD,IAAA,OAAO,EAAE,KAA1D;AACY,IAAA,yBAAyB,EAAE,QADvC;AACiD,IAAA,qBAAqB,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KADxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQ,CAACpC,YAAD,GAEQ,CAACF,cAAD,GAEQF,KAAK,GAEG,0CACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,UAAU,CAACI,MAAD,CAAV,CAAmB4C,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEjD,MAAM,CAACK,MAAD,CAAN,CAAe0B,IAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACiCd,iBAAiB,CAACT,KAAK,CAACU,IAAP,CADlD,CADJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACK,MAAD,CAAN,CAAe6C,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,EAII,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE,CAAClD,MAAM,CAACK,MAAD,CAAN,CAAe0B,IAAhB,EAAsB;AAACF,MAAAA,KAAK,EAAER,sBAAsB,CAACb,KAAK,CAAC2C,WAAP;AAA9B,KAAtB,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACuFtD,UAAU,CAACiD,SAAX,CAAqBxC,QAArB,EAA+BE,KAAK,CAAC2C,WAArC,CADvF,CAJJ,CADJ,CADJ,EAUI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWKlB,uBAAuB,EAX5B,EAYI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAaI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AAAmB,IAAA,MAAM,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAIQzB,KAAK,CAAC4C,OAAN,GAEQ,0CACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnD,UAAU,CAACI,MAAD,CAAV,CAAmBgD,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAErD,MAAM,CAACK,MAAD,CAAN,CAAeiD,OAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACoCzD,UAAU,CAACiD,SAAX,CAAqBxC,QAArB,EAA+B,WAA/B,CADpC,CADJ,EAGI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEN,MAAM,CAACK,MAAD,CAAN,CAAeiD,OAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACoC9C,KAAK,CAAC4C,OAAN,GAAgBtD,WAAW,CAACQ,QAAD,EAAWE,KAAK,CAAC4C,OAAjB,CAAX,GAAuC,GAAvC,GAA6CvD,UAAU,CAACiD,SAAX,CAAqBxC,QAArB,EAA+B,KAA/B,CAA7D,GAAqG,GADzI,CAHJ,CADJ,EAOI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAFR,GAYM,IAhBd,EAkBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,UAAU,CAACI,MAAD,CAAV,CAAmBgD,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAErD,MAAM,CAACK,MAAD,CAAN,CAAeiD,OAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACoCzD,UAAU,CAACiD,SAAX,CAAqBxC,QAArB,EAA+B,UAA/B,CADpC,CADJ,EAGI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEN,MAAM,CAACK,MAAD,CAAN,CAAeiD,OAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACoCC,QAAQ,CAAC/C,KAAK,CAACgD,QAAP,CAAR,GAA2B1D,WAAW,CAACQ,QAAD,EAAWE,KAAK,CAACgD,QAAjB,CAAX,GAAwC,GAAxC,GAA8C3D,UAAU,CAACiD,SAAX,CAAqBxC,QAArB,EAA+B,KAA/B,CAAzE,GAAiHT,UAAU,CAACiD,SAAX,CAAqBxC,QAArB,EAA+B,aAA/B,CADrJ,CAHJ,CAlBJ,EAwBI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,EAyBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,UAAU,CAACI,MAAD,CAAV,CAAmBgD,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAErD,MAAM,CAACK,MAAD,CAAN,CAAeoD,WAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACwC5D,UAAU,CAACiD,SAAX,CAAqBxC,QAArB,EAA+B,MAA/B,CADxC,CADJ,EAGI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEN,MAAM,CAACK,MAAD,CAAN,CAAeqD,WAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACwClD,KAAK,CAACmD,GAAN,GAAY7D,WAAW,CAACQ,QAAD,EAAWE,KAAK,CAACoD,KAAjB,CAAX,GAAqC,GAArC,GAA2C/D,UAAU,CAACiD,SAAX,CAAqBxC,QAArB,EAA+B,KAA/B,CAAvD,GAA+F,GADvI,CAHJ,CAzBJ,CAbJ,EA6CI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CJ,CAFH,GAkDC,IApDd,GAsDM,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDd,GA0DM,oBAAC,iBAAD;AACE,IAAA,QAAQ,EAAEM,YADZ;AAEE,IAAA,aAAa,EAAE;AAAA,aAAMC,eAAe,CAAC,KAAD,CAArB;AAAA,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7Dd,CADJ,CAPJ,CADJ,CADJ;AAiFH,CAxJD;;AA4JA,eAAeX,0BAAf","sourcesContent":["//----IMPORTS----//\n//React\nimport React, {useEffect, useState, useContext} from 'react';\n//React native\nimport {View, Text, ScrollView} from 'react-native';\n//Context\nimport {Context as AppSettingsContext} from \"../context/AppSettingsContext\";\nimport {Context as AuthContext} from \"../context/AuthContext\";\n//Componetns\nimport Header from \"../components/shared/Header\";\nimport {SafeView, Block, Spacer, HorizontalDivider, DataLoadingIndicator} from \"../components/shared\";\nimport ProductCardOrderHistory from \"../components/menu/ProductCardOrderHistory\";\nimport {NetworkErrorModal} from \"../components/modals\";\n//Moment\nimport moment from \"moment\";\nimport 'moment/locale/uk';\n//Api\nimport axiosWithToken from \"../services/axiosWithToken\";\n//Global Vars\nimport {BASE_URL, APP_VERSION} from \"../different/global_vars\";\n//Localization\nimport translator from \"../translator/translator\";\n//Helpers\nimport {formatPrice, prepareLanguageToHttpRequest} from \"../helpers/helpers\";\n//Styles\nimport styles from '../styles/screens/orders-history-details-screen';\nimport {app_styles} from '../styles/app_styles';\n\n\n//----COMPONENT----//\nconst OrdersHistoryDetailsScreen = ({navigation}) => {\n    //Data and State\n    const {state: {scales, language}} = useContext(AppSettingsContext);\n    const {state: {ordersStatuses}} = useContext(AuthContext);\n    const [order, setOrder] = useState(null);\n    const [isDataFetching, setIsDataFetching] = useState(false);\n    const [networkError, setNetworkError] = useState(false);\n\n\n    //Hooks and Methods\n    useEffect(() => {\n        let order_id = navigation.getParam('order_id');\n        if (order_id) {\n            getOrderInfo(order_id);\n        }\n    }, [language])\n\n\n    const transformUnixTime = (time) => {\n        moment.locale(\"uk\");\n        return moment(time * 1000).format('DD MMMM YYYY');\n    }\n\n    const defineOrderStatusColor = (name) => {\n        let lang = prepareLanguageToHttpRequest(language);\n        let needle = ordersStatuses[lang];\n\n        let status = needle.find(item => item.name.toLowerCase() === name.toLowerCase());\n        return status ? status.color : app_styles(scales).colors.text.primary;\n    }\n\n\n    const populateHistoryProducts = () => {\n        let products = order.order_products.map((product, index) => {\n            return (\n                <View key={index}>\n                    <ProductCardOrderHistory product={product}/>\n                    {\n                        (index < (order.order_products.length - 1))\n                            ? <Spacer spaceHeight={20}/>\n                            : null\n                    }\n                </View>\n            )\n        });\n        return products;\n    }\n\n\n    const getOrderInfo = async (id) => {\n        try {\n            setIsDataFetching(true)\n            const lang = prepareLanguageToHttpRequest(language);\n            const url = `${BASE_URL}/order/history-show?lang=${lang}&version=${APP_VERSION}&id=${id}`;\n            const response = await axiosWithToken.get(url);\n\n            if (response) {\n                let info = response.data.order;\n                setOrder(info);\n                if (networkError) {\n                    setNetworkError(false)\n                }\n            }\n        } catch (error) {\n            setNetworkError(true)\n        } finally {\n            setIsDataFetching(false)\n        }\n    }\n\n\n    return (\n        <>\n            <SafeView>\n                <Header\n                    title={order ? `${translator.translate(language, \"Замовлення\")} ${order.order_id}` : \" \"}\n                    backAllowed\n                    navigation={navigation}\n                    noIcons\n                />\n                <View style={styles(scales).body}>\n                    <ScrollView showsVerticalScrollIndicator={false} bounces={false}\n                                keyboardShouldPersistTaps={'always'} contentContainerStyle={{flexGrow: 1}}>\n                        {\n                            !networkError\n                                ? (\n                                    !isDataFetching\n                                        ? (\n                                            order\n                                                ? (\n                                                    <>\n                                                        <Block>\n                                                            <View style={app_styles(scales).row_start}>\n                                                                <Text\n                                                                    style={styles(scales).text}>{transformUnixTime(order.time)}</Text>\n                                                                <Text style={styles(scales).slash}> / </Text>\n                                                                <Text\n                                                                    style={[styles(scales).text, {color: defineOrderStatusColor(order.status_text)}]}>{translator.translate(language, order.status_text)}</Text>\n                                                            </View>\n                                                        </Block>\n                                                        <Spacer spaceHeight={20}/>\n                                                        {populateHistoryProducts()}\n                                                        <Spacer spaceHeight={20}/>\n                                                        <Block>\n                                                            <HorizontalDivider height={1}/>\n                                                            <Spacer spaceHeight={20}/>\n                                                            {\n                                                                order.packing\n                                                                    ? (\n                                                                        <>\n                                                                            <View style={app_styles(scales).row_between}>\n                                                                                <Text\n                                                                                    style={styles(scales).li_text}>{translator.translate(language, \"Пакування\")}</Text>\n                                                                                <Text\n                                                                                    style={styles(scales).li_text}>{order.packing ? formatPrice(language, order.packing) + ' ' + translator.translate(language, \"грн\") : '-'}</Text>\n                                                                            </View>\n                                                                            <Spacer spaceHeight={5}/>\n                                                                        </>\n                                                                    )\n                                                                    : null\n                                                            }\n                                                            <View style={app_styles(scales).row_between}>\n                                                                <Text\n                                                                    style={styles(scales).li_text}>{translator.translate(language, \"Доставка\")}</Text>\n                                                                <Text\n                                                                    style={styles(scales).li_text}>{parseInt(order.delivery) ? formatPrice(language, order.delivery) + ' ' + translator.translate(language, \"грн\") : translator.translate(language, 'безкоштовно')}</Text>\n                                                            </View>\n                                                            <Spacer spaceHeight={5}/>\n                                                            <View style={app_styles(scales).row_between}>\n                                                                <Text\n                                                                    style={styles(scales).total_title}>{translator.translate(language, \"Сума\")}</Text>\n                                                                <Text\n                                                                    style={styles(scales).total_price}>{order.sum ? formatPrice(language, order.total) + ' ' + translator.translate(language, \"грн\") : '-'}</Text>\n                                                            </View>\n                                                        </Block>\n                                                        <Spacer spaceHeight={30}/>\n                                                    </>\n                                                )\n                                                : null\n                                        )\n                                        : <DataLoadingIndicator/>\n                                )\n                                : <NetworkErrorModal\n                                    isOpened={networkError}\n                                    closeCallback={() => setNetworkError(false)}\n                                />\n                        }\n                    </ScrollView>\n                </View>\n            </SafeView>\n        </>\n    );\n}\n\n\n//----EXPORT----//\nexport default OrdersHistoryDetailsScreen;"]},"metadata":{},"sourceType":"module"}